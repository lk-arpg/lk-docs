{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the Lorekeeper documentation!","text":"<p>Lorekeeper is an open-source framework for managing ARPGs/closed species masterlists built using the Laravel framework. In simple terms - you will be able to make a copy of the site, perform setup/enter data about your species and game, and it'll provide you with the automation to keep track of your species, players and ARPG submissions.</p> <p>Lorekeeper is free and open-source, which means it's free for you to use and modify to your needs. Please see the tutorials below for instructions on setting up!</p> <p>Quick Links:</p> <ul> <li>Setup Information</li> <li>Lorekeeper GitHub repo</li> <li>Demo Site</li> <li>Discord Server</li> </ul>"},{"location":"contributing/","title":"Contributing to Lorekeeper","text":"<p>Lorekeeper, much like any project in its vein, thrives on community contributions; be they bugfixes, new features, extensions, or so on, these efforts are what help make the project shine. If you are interested in contributing to core Lorekeeper, pull requests (or PRs) are always open at the GitHub repository. If you have not already done so, a good first step is making a fork of the repository on your own account via the button on the upper right hand side of the page.</p> <p>As a rule of thumb, we welcome PRs containing:</p> <ul> <li>Bugfixes (always!)</li> <li>Small features or quality-of-life additions<ul> <li>The rule of thumb for this is that the feature should relatively small in scale/compact, and either<ul> <li>Broadly useful to all users of Lorekeeper, or</li> <li>Useful to most, but not all, users of Lorekeeper but wholly optional.<ul> <li>If your feature is compact enough to do so it is encouraged in this instance to create a toggle for it in <code>config/lorekeeper/extensions</code> that controls whether it is enabled or not.</li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>If you're unsure of what to work on, take a look at the current issues listed on the repo. These are labeled in accordance with their nature/contents (bug, feature request, etc.) and various other qualities (for instance, being a good first issue)!</p>"},{"location":"contributing/#general-architecture","title":"General Architecture","text":"<p>Generally speaking, Lorekeeper and its branches are structured and maintained in keeping with GitFlow. Loosely, this means that there are two persistent branches:</p> <ul> <li>The default/primary branch-- <code>main</code>, in this case-- which always contains the current release/the current stable version, and</li> <li>The development branch-- <code>develop</code>, in this case-- which always contains the latest work-- features, fixes, and so on. It is by definition unstable.<ul> <li>This branch is itself off of <code>main</code> and in the infrequent but possible event that the latter is updated directly (i.e. via a hotfix), <code>main</code> will be merged into it.</li> </ul> </li> </ul> <p>As well as three types of branches; each branch of these types is destined to be merged into another and is important but ultimately impermanent:</p> <ul> <li>Feature branches<ul> <li>These follow the naming scheme <code>feature/FEATURE-NAME-HERE</code>, e.g. <code>feature/two-factor-auth</code>.</li> <li>While these are called feature branches, they can contain new features and/or non-emergency bugfixes!</li> <li>New features are always merged into <code>develop</code> and <code>develop</code> only.</li> <li>These branches are created branched off of <code>develop</code> (if they contain features or there is no current release branch) or the current release branch (if there is one, and the feature branch contains only bugfixes for the current content within it).</li> </ul> </li> <li>Release branches<ul> <li>These follow the naming scheme <code>release/UPCOMING-VERSION-HERE</code>, e.g. <code>release/v2.0.0</code>.</li> <li>These are created by a maintainer of the repo when an upcoming release is feature-complete or otherwise ready, and are branched off of <code>develop</code>.</li> <li>Once they are created, no additional features or work from <code>develop</code> will be merged into these branches, only bugfixes for the features already in them.</li> <li>Conversely, bugfixes for features contained in a release branch are merged directly into the release branch and the release branch only. In the event that a release branch receives bugfixes, said release branch is periodically merged back into <code>develop</code> to incorporate them.</li> <li>In essence, the purpose of a release branch is to isolate, test, and if necessary fix a static set of features.</li> <li>When a release branch is sufficiently stable and any necessary preparations complete, the branch will be merged into <code>main</code> and become the new current release.</li> </ul> </li> <li>Hotfix branches<ul> <li>These follow the naming scheme <code>hotfix/HOTFIX-NAME-HERE</code>.</li> <li>These contain emergency bugfixes, such as fixes for critical issues or security vulnerabilities.</li> <li>These are directly branched off of <code>main</code>/the current release and merged back into <code>main</code> when complete.</li> <li>In such an event, <code>main</code> is merged back into <code>develop</code> as well to incorporate fixes.</li> </ul> </li> </ul>"},{"location":"contributing/#code-styling","title":"Code Styling","text":"<p>Contributions to Lorekeeper are recommended to follow the style of the project's existing code. However, PHP styling will automatically be adjusted for contributions on creation of a pull request or subsequent merge commit. If you wish to apply these changes locally, you can run or dry-run them via:</p> <ul> <li>Run with <code>composer lint</code></li> <li>Dry run with <code>composer sniff</code></li> </ul>"},{"location":"contributing/#branches-and-you","title":"Branches and You","text":"<p>In summary:</p> <ul> <li>When contributing to Lorekeeper, you will create either a feature or (more rarely) a hotfix branch.</li> <li>If you are creating a new feature, it must be isolated in its own feature branch and a PRed into <code>develop</code>.</li> <li>If you are fixing bug(s), there are a few possibilities depending on the circumstances:<ul> <li>If there is currently a release branch, make a feature branch off of the release branch or check out the release branch itself.<ul> <li>Once you have done so, fix bug(s) with the current content of the release branch, then push the branch to your fork and make a PR to the release branch.</li> <li>Prioritize fixing bugs in the release branch first and foremost. This allows the branch to better achieve stability and move toward full release.</li> </ul> </li> <li>If there is not currently a release branch, or if your fix(es) concern content that is only present in <code>develop</code>, make a feature branch off of <code>develop</code> or check out <code>develop</code> itself.<ul> <li>Alternately put: do not PR bugfixes that apply to an extant release branch to <code>develop</code>. Isolate them from any changes relevant only to <code>develop</code> on a branch created from the release branch and PR them to the release branch. This helps the release branch achieve stability and move toward full release.</li> </ul> </li> <li>As a general rule, making feature branches for bugfixes vs. checking out <code>develop</code> or the release branch and committing them directly is recommended, but not required, as you will need to push the relevant branch to your fork and make a PR regardless.</li> <li>If you are making a hotfix for a critical issue present in the current release, create a new hotfix branch off of <code>main</code>, make the necessary changes, and PR it back into <code>main</code>.</li> </ul> </li> </ul>"},{"location":"contributing/#git-flow-in-sourcetree","title":"Git-flow in Sourcetree","text":"<p>If you are on a Windows machine, you will likely be using Sourcetree as your git client. Sourcetree has built-in support for this sort of branch structure accessible via the \"Git-flow\" button in the upper right hand corner of the program interface.</p> <ul> <li>You should first check out <code>main</code> and <code>develop</code> if you have not already. You may name <code>main</code> something else if you have a branch with that name that has contents other than/in addition to the current release.<ul> <li>If these branches are not present when you initialize the feature, - Sourcetree will attempt to create them using assumptions that may or may not be correct depending on how your local repo is structured; it is simplest to already have them present with their correct content beforehand.</li> <li>This also has the advantage of them tracking the associated remote branches by default.</li> </ul> </li> <li>Click the \"Git-flow\" button. It will ask you for the names of these branches and branch types.<ul> <li>As of the time of writing you do need to change these from the defaults to be consistent with the core repo.</li> <li>If your local copies of <code>main</code> or <code>develop</code> have different names than these, change the production and development branch names to the names of your respective local branches.</li> <li>Do not change the prefixes used for the three branch types.</li> </ul> </li> <li>When you are ready, click \"ok\". Sourcetree will initialize the feature.</li> </ul> <p>Now when you press the Git-flow button, a small panel will appear with suggested actions. By default these include \"Start New Feature\", \"Start New Release\", and \"Start New Hotfix\". As detailed above, the first and last options are the most relevant; clicking one of these will take you to a panel asking for the name of the branch (not including the prefix, which it will add automatically!) and what branch it should start from.</p> <p>Please note when using this feature that you will need to push and PR your feature or hotfix branch itself and cannot use the \"Finish Feature/Hotfix\" option that Sourcetree offers.</p>"},{"location":"contributing/#making-a-pull-request","title":"Making a Pull Request","text":"<p>Once you have made your branch containing your feature or fixes, tested it (at minimum locally!), and pushed it to your fork on GitHub, make a pull request. This, in essence, is a request for the contents of your branch to be integrated in the branch you make your PR to.</p> <p>An easy way to do so is by navigating to the branch on your fork. Displayed above its contents/files will be a header stating \"This branch is (number) commits ahead of lk-arpg:main\" or similar; click \"contribute\", then click \"open pull request\". This will take you to the form to do so.</p> <p>Once you are at this form, you will want to:</p> <ol> <li>Ensure you are submitting the PR to the correct branch on the repo-- <code>develop</code>, the release branch, or <code>main</code>-- depending on which you branched from.</li> <li>Enter a succinct and descriptive title for your PR.</li> <li>Provide a description. You should list any bugs you have fixed, mentioning issue(s) if they exist, or explain (in detail!) the nature of an added feature.<ul> <li>Be sure to include any commands (such as <code>php artisan migrate</code>) which must be run as a consequence of your changes.</li> <li>If in doubt, provide more information, not less! It isn't always easy to tell from code alone what the purpose of a change is, so you should explain as best you can.</li> </ul> </li> <li>Submit your PR!</li> </ol> <p>Once your PR is submitted, it will be processed and reviewed by maintainers of the repo and members of the community. If/when there is a consensus on its approval, it will be merged in; at this point you can safely delete the branch on your fork if applicable/desired.</p>"},{"location":"features/admin-panel/","title":"Admin Panel","text":"<p>The admin panel collects most of the features of the site that require user rank power to access. These features give users the ability to create and modify data that will be used on the site. This page will list the links available in the admin panel, categorised by the power required to access it.</p>"},{"location":"features/admin-panel/#features","title":"Features","text":""},{"location":"features/admin-panel/#admin","title":"Admin","text":"<p>These can only be edited by the admin account, which is not an assignable power.</p>"},{"location":"features/admin-panel/#user-ranks","title":"User Ranks","text":"<p>Create and edit user ranks to assign to users.</p>"},{"location":"features/admin-panel/#edit-text-pages","title":"Edit Text Pages","text":""},{"location":"features/admin-panel/#news","title":"News","text":"<p>Create and edit news posts.</p>"},{"location":"features/admin-panel/#sales","title":"Sales","text":"<p>Create and edit sales posts.</p>"},{"location":"features/admin-panel/#pages","title":"Pages","text":"<p>Create and edit site pages.</p>"},{"location":"features/admin-panel/#manage-users","title":"Manage Users","text":""},{"location":"features/admin-panel/#user-index","title":"User Index","text":"<p>Lists all users on the site. This links to pages for each user that allow for editing of user information (note that the Edit Ranks power is needed to edit the user's rank), bans, and a record of user information that was edited by staff.</p>"},{"location":"features/admin-panel/#invitation-keys","title":"Invitation Keys","text":"<p>Create and delete invitation keys to register for the site when the site is closed for public registration.</p>"},{"location":"features/admin-panel/#manage-submissions","title":"Manage Submissions","text":""},{"location":"features/admin-panel/#prompt-submissions","title":"Prompt Submissions","text":"<p>View, approve and reject prompt submissions.</p>"},{"location":"features/admin-panel/#claim-submissions","title":"Claim Submissions","text":"<p>View, approve and reject claim submissions.</p>"},{"location":"features/admin-panel/#edit-inventories","title":"Edit Inventories","text":""},{"location":"features/admin-panel/#currency-grants","title":"Currency Grants","text":"<p>Grant and remove currencies from users.</p>"},{"location":"features/admin-panel/#item-grants","title":"Item Grants","text":"<p>Grant items to users.</p>"},{"location":"features/admin-panel/#edit-world-data","title":"Edit World Data","text":""},{"location":"features/admin-panel/#rarities","title":"Rarities","text":"<p>Create and edit rarities.</p>"},{"location":"features/admin-panel/#species","title":"Species","text":"<p>Create and edit species.</p>"},{"location":"features/admin-panel/#subtypes","title":"Subtypes","text":"<p>Create and edit species subtypes.</p>"},{"location":"features/admin-panel/#trait-categories","title":"Trait Categories","text":"<p>Create and edit trait categories.</p>"},{"location":"features/admin-panel/#traits","title":"Traits","text":"<p>Create and edit traits.</p>"},{"location":"features/admin-panel/#item-categories","title":"Item Categories","text":"<p>Create and edit item categories.</p>"},{"location":"features/admin-panel/#items","title":"Items","text":"<p>Create and edit items.</p>"},{"location":"features/admin-panel/#shops","title":"Shops","text":"<p>Create and edit shops and shop stock.</p>"},{"location":"features/admin-panel/#prompt-categories","title":"Prompt Categories","text":"<p>Create and edit prompt categories.</p>"},{"location":"features/admin-panel/#prompts","title":"Prompts","text":"<p>Create and edit prompts.</p>"},{"location":"features/admin-panel/#galleries","title":"Galleries","text":"<p>Create and edit galleries.</p>"},{"location":"features/admin-panel/#character-categories","title":"Character Categories","text":"<p>Create and edit character categories.</p>"},{"location":"features/admin-panel/#currencies","title":"Currencies","text":"<p>Create and edit currencies.</p>"},{"location":"features/admin-panel/#loot-tables","title":"Loot Tables","text":"<p>Create and edit loot tables.</p>"},{"location":"features/admin-panel/#manage-masterlist","title":"Manage Masterlist","text":""},{"location":"features/admin-panel/#create-character","title":"Create Character","text":"<p>Create a character.</p>"},{"location":"features/admin-panel/#create-myo-slot","title":"Create MYO Slot","text":"<p>Create an MYO slot.</p>"},{"location":"features/admin-panel/#character-transfers","title":"Character Transfers","text":"<p>View and approve/deny character transfers.</p>"},{"location":"features/admin-panel/#character-trades","title":"Character Trades","text":"<p>View and approve/deny character trades.</p>"},{"location":"features/admin-panel/#design-updates","title":"Design Updates","text":"<p>View and approve/reject character design updates.</p>"},{"location":"features/admin-panel/#myo-approvals","title":"MYO Approvals","text":"<p>View and approve/reject MYO design submissions.</p>"},{"location":"features/admin-panel/#manage-reports","title":"Manage Reports","text":""},{"location":"features/admin-panel/#reports","title":"Reports","text":"<p>View and handle user bug and other reports.</p>"},{"location":"features/admin-panel/#manage-raffles","title":"Manage Raffles","text":""},{"location":"features/admin-panel/#raffles","title":"Raffles","text":"<p>Create raffles and raffle groups, and modify tickets for raffles.</p>"},{"location":"features/admin-panel/#edit-site-settings","title":"Edit Site Settings","text":""},{"location":"features/admin-panel/#site-settings","title":"Site Settings","text":"<p>Edit site settings.</p>"},{"location":"features/admin-panel/#site-images","title":"Site Images","text":"<p>Edit site settings and additional CSS file.</p>"},{"location":"features/admin-panel/#file-manager","title":"File Manager","text":"<p>Upload and manage files.</p>"},{"location":"features/admin-panel/#see-also","title":"See Also","text":"<ul> <li>Config Files</li> </ul>"},{"location":"features/bookmarks/","title":"Bookmarks","text":"<p>Bookmarks are a feature that can be used to keep track of characters and MYO slots owned by other users privately. Other users, as well as staff members are not able to view or modify bookmarks.</p>"},{"location":"features/bookmarks/#usage","title":"Usage","text":"<p>Any visible character or MYO slot can be bookmarked from its page. The \"Bookmark\" button located in the right side of the character's name header can be clicked to bring up a creation modal.</p> <p>Created bookmarks can be managed from the Character Bookmarks page, which is accessible from the Bookmarks link from the user dropdown on the far right side of the navigation bar. This page allows you to edit and delete bookmarks, and additionally features a mode to hide character thumbnails for a more condensed version of the page. Each bookmark also displays the character's name (with a link to the page), its species, rarity, current owner, and current trade/gift art statuses.</p>"},{"location":"features/bookmarks/#editing","title":"Editing","text":"<p>Bookmarks have the following properties:</p> <ul> <li>Notify me when\u2026<ul> <li>Open For Trades status changes</li> <li>Gift Art Allowed status changes</li> <li>Gift Writing Allowed status changes</li> <li>Character's owner changes</li> <li>A new image is uploaded</li> </ul> </li> <li>Comment (No HTML, 500 characters maximum)</li> </ul> <p>The Notify me when... settings each represent whether a notification will be sent to you when the respective change occurs. All of these settings are optional.</p> <p>Open For Trades/Gift Art Allowed/Gift Writing Allowed settings change whenever the user or a staff member edits the settings. Note that since these are editable by the character's owner themselves, they may change frequently, resulting in a lot of notifications.</p> <p>The Character's owner changes when a character is transferred (voluntarily or forced by a staff member) or traded to another user. It does not send a notification when a new user registers for the site and has their existing characters credited to them.</p> <p>A new image is uploaded when a staff member adds a new image to a character, a design update for a character is successfully approved, or a MYO slot's design is approved.</p> <p>The Comment is entirely optional and provides a space to make a small note regarding the character. As bookmarks are completely invisible to any user other than the bookmarking user, the owner will not be able to see this comment.</p>"},{"location":"features/bookmarks/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>MYO Slots</li> <li>User Accounts</li> </ul>"},{"location":"features/character-images/","title":"Character Images","text":"<p>Character Images are a subsection of Characters and MYO Slots. They are used for managing the main part of the character itself - its visual image, rarity, species and traits.</p>"},{"location":"features/character-images/#usage","title":"Usage","text":"<p>Character images are automatically created when a character or MYO slot is created, and when their design is updated through the design updates system. They can also be added manually from the character's page by a staff member with the Manage Masterlist power.</p> <p>Character images are intended to be used as \"versions\" of a character's design - for example, a character with multiple forms, and/or to keep track of past designs the character has had. Each image is separate from the other and can have completely different species/rarity/traits.</p> <p>Updates to a character's images can be tracked via Bookmarks.</p>"},{"location":"features/character-images/#editing","title":"Editing","text":""},{"location":"features/character-images/#creation","title":"Creation","text":"<p>The character image form has certain variations depending on whether you are viewing it in character creation, new image creation or the design updates forms - some options may not always be available. However, images have all of the following properties:</p> <ul> <li>Is Visible</li> <li>Is Valid</li> <li>Character Image (upload)</li> <li>Use Image Cropper</li> <li>Thumbnail Image (upload)</li> <li>Designer(s)</li> <li>Artist(s)</li> <li>Image Notes</li> <li>Species</li> <li>Subtype</li> <li>Character Rarity</li> <li>Traits</li> </ul> <p>Is Visible determines whether the image is visible to the public. If set to Off, only staff members with the relevant power can see the image.</p> <p>Is Valid is a cosmetic toggle - if set to Off, a note will be displayed on the image saying:</p> <p>This version of this character is outdated, and only noted here for recordkeeping purposes. Do not use as an official reference.</p> <p>Character Image is for uploading the main image for the character. Use Image Cropper allows the user to use a cropping application on the page to crop a thumbnail from the uploaded image, which will be used on the character masterlist. Alternatively, a Thumbnail Image can be uploaded in its place.</p> <p>Designer(s) and Artist(s) are used for adding credits for the image's creation. Multiple designers and artists may be attached to a single image.</p> <p>Image Notes is an optional field for adding any additional information about the image. Suggestions include how this version of the character was obtained, any special effects for traits that are too long to fit in the trait descriptions, etc.</p> <p>Species is the species of the character. This is required for creating full characters and optional for creating MYO slots. If this is assigned for an MYO slot, the character created must be that species.</p> <p>Character Rarity is the rarity of the character. This is required for creating full characters and optional for creating MYO slots. If this is assigned for an MYO slot, the character created must be that rarity.</p> <p>Traits is the list of traits to be attached to this image. Any amount of traits, or none, can be attached. If any traits are selected for an MYO slot, they cannot be removed when the user edits the design approval request for it. Traits also contain an additional extra info slot - this can be used to give unique information about how the trait is used on the character. For example, a \"Fish Tail\" trait can be specified to be \"Shark\" or \"Goldfish\".</p>"},{"location":"features/character-images/#editing_1","title":"Editing","text":"<p>Once an image has been added, the information can be edited on the images page by staff with the relevant power. Each image in the gallery at the bottom of the page can be clicked to bring up information about the image and each section can be edited separately. A few other options become available:</p> <ul> <li>Is Viewable</li> <li>Reupload Image</li> <li>Set Active (only for any non-active image)</li> <li>Delete</li> </ul> <p>Is Viewable can be used to hide the image from the character's page. This cannot be toggled off for the character's active image.</p> <p>Reupload Image can be used to reupload the character's masterlist image.</p> <p>Set Active changes the character's active image - this is the image that is displayed on the masterlist.</p> <p>Delete will completely delete the image as well as the actual images (main image and thumbnail) themselves. The character's active image cannot be deleted.</p> <p>Additionally, when there are more than one image in the character's image gallery, they can be sorted/reordered by staff.</p>"},{"location":"features/character-images/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>MYO Slots</li> </ul>"},{"location":"features/characters/","title":"Characters","text":"<p>Characters are a resource that can be attached to user accounts. MYO Slots are \"lesser\" versions of characters with more restrictions on how they can be used with site features. They can be edited in the admin panel by users with the Manage Masterlist power.</p>"},{"location":"features/characters/#usage","title":"Usage","text":"<p>All characters are listed on the masterlist.</p> <p>Characters can hold currency and items and be used to participate in prompts, as well as be transferred/traded. Their designs can be updated through the design updates system. For more information, please refer to the respective pages.</p> <p>Users are able to edit a section of their character's profile, and list their character as being available for receiving gift art, gift writing, and/or sale/trade. This section also includes a text field that allows HTML.</p>"},{"location":"features/characters/#editing","title":"Editing","text":""},{"location":"features/characters/#categories","title":"Categories","text":"<p>Editing character categories requires the Edit World Data power.</p> <p>Character categories can be created in the admin panel, with the following category properties:</p> <ul> <li>Name</li> <li>Code</li> <li>World Page Image</li> <li>Description (accepts HTML)</li> </ul> <p>The image and description are displayed only on the world page.</p> <p>The Code field is important for character code generation (covered below). This code should be unique among character categories, and preferably short.</p> <p>Additionally, categories can be sorted from the Character Categories index page. This order reflects the sorting order of categories on the character categories encyclopedia page.</p>"},{"location":"features/characters/#characters_1","title":"Characters","text":"<p>Characters are set up in a manner such that traits, species, rarity and other specific details about the character tied to its current design are linked to images rather than the character itself. This allows the character to change and be updated, while preserving a record of previous forms (and the ability to revert to an earlier design) and/or have multiple approved forms for a character. This section will cover only the information attached to the character itself - for more information on character images, please see the Character Images page.</p> <p>Characters have the following properties:</p> <ul> <li>Owner</li> <li>Owner URL</li> <li>Character Category</li> <li>Number</li> <li>Character Code</li> <li>Description</li> <li>Is Visible</li> <li>Is Giftable</li> <li>Is Tradeable</li> <li>Is Resellable</li> <li>On Transfer Cooldown Until</li> </ul> <p>The Owner is the user on-site who owns the character. This field can be left blank if the owner has not registered for an account, and the following field has been filled in.</p> <p>The Owner URL is the URL of the offsite profile of the user who owns the character. If the Owner field is filled in, this field will be ignored. In the future, if the owner registers for the site and links the associated account, any characters attached to the offsite account will automatically be attached to their on-site account. Note that if the user has since changed their offsite username, this will not happen (characters have to be transferred to their new site account manually).</p> <p>The Character Category is required, and characters cannot be created if at least 1 character category does not exist yet. This is a category for the character that is separate from the character\u2019s species or any other stats, and can be used for example to categorise creator-made designs, MYO designs and guest artist designs. Of course, the usage is entirely up to you - you can also use it to categorise characters by species, or any other criteria you see fit. This category, by default, provides the first half of the character code.</p> <p>The Number is a second identifier for the character. This number can be automatically pulled for new characters, and the rule for how the number should be pulled can be found in the config files. This number, by default, provides the second half of the character code.</p> <p>The Character Code field automatically generates an identifier for the character based on the above two fields. This field must be unique among all characters, but otherwise can be edited in the form if desired. The default configuration generates codes that follow the {character category code}-{number} format, but this can be edited in the config files. This code is used to access the character's page.</p> <p>The Description field allows for a custom description to be entered. This can be left blank if no further information is required. Suggestions for content include: a link to the initial sales post for the character, additional conditions on the transfer of the character, any transfer cooldown, etc.</p> <p>Is Visible controls whether the character is displayed on the character masterlist. If set to not visible, the character will only be visible to users with the Manage Masterlist power (even the owner cannot see it without the power).</p> <p>Is Giftable, Is Tradeable, Is Resellable are toggles that display the respective information prominently on the character's profile. This is largely cosmetic as the site cannot tell what a character is being sold/traded for. However, the following effects will apply:</p> <ul> <li>If all toggles are off, the character is account-bound - it cannot be transferred by the user directly, and cannot be attached to trades. Only users with the Manage Masterlist power can force a transfer.</li> <li>If the character is not tradeable or resellable, the user will not be able to toggle the Up For Trade option in the character's profile (which is a searchable option on the masterlist).</li> </ul> <p>Resale Value is a field that appears if the character is marked as resellable. The dollar value of the character can be set, which will be displayed on the character's profile. This is cosmetic, and purely for reference.</p> <p>On Transfer Cooldown Until causes temporary account binding until the selected date/time. Until the cooldown time has been reached, the owner will not be able to directly transfer the character or attach it to a trade. It is possible to automatically set the cooldown date to x number of days (default: 3) when a user makes a transfer - please see Site Settings for more information.</p>"},{"location":"features/characters/#user-editable-profile","title":"User-editable Profile","text":"<p>After a character has been created, its profile can be edited by the owner or users with the Manage Masterlist power. The following properties can be modified by the user:</p> <ul> <li>Name</li> <li>Profile Content</li> <li>Allow Gift Art</li> <li>Allow Gift Writing</li> <li>Up For Trade</li> </ul> <p>Name is an optional name given to the character. This is purely cosmetic, and also displays next to the character's code on the masterlist, on user profiles, etc.</p> <p>Profile Content is a section that allows HTML content to be entered.</p> <p>Allow Gift Art is a setting that denotes if the character's owner is open to receiving gift art of the character. This can be searched on the masterlist to find a list of characters for users to draw. This cannot be edited by anyone other than the owner. The possible values are Yes, No, and Ask First.</p> <p>Allow Gift Writing is a setting that denotes if the character's owner is open to receiving gift writing of the character. This can be searched on the masterlist to find a list of characters for users to write about. This cannot be edited by anyone other than the owner. The possible values are Yes, No, and Ask First.</p> <p>Up For Trade is a toggle that denotes if the character's owner wants to trade the character. Similarly, this toggle can also be searched on the masterlist. This cannot be edited by anyone other than the owner.</p> <p>Additionally, for users who are not the owner (has the required power), a Notify User toggle is present. If left on, the owner of the character will be notified that their character's profile has been edited (implied: for moderation purposes). Regardless of the status of the toggle, owners of non-visible characters will not be notified.</p>"},{"location":"features/characters/#gallery","title":"Gallery","text":"<p>Character's galleries contain gallery submissions with the character attached and are populated automatically. This is not to be confused with Character Images, the official record of the character's design.</p>"},{"location":"features/characters/#bank-and-inventory","title":"Bank and Inventory","text":""},{"location":"features/characters/#bank","title":"Bank","text":"<p>Characters can hold currencies that have been configured to allow it. Character's banks show their current held currencies, as well as allowing transfer of currencies (if enabled). Currencies may also be granted directly to characters via their bank.</p>"},{"location":"features/characters/#inventory","title":"Inventory","text":"<p>Characters can hold items that have been configured to allow it (via their category). Items are transferred to character inventories from the owner's inventory. Items may also be granted directly to characters via their inventory.</p> <p>Note that characters' inventories are separate from their owner's, and items in a character's inventory remain in their posession if ownership of a character changes. Consequently, account-bound items cannot be transferred to characters (and vice versa).</p>"},{"location":"features/characters/#logs","title":"Logs","text":"<p>Aside from images, characters have 4 types of logs: the change log, ownership history log, currency log and submission log.</p> <p>Change Log: This log specifically logs changes to the character and its images. It lists the specific fields updated, who made the edits, as well as the date of editing.</p> <p>Ownership History: This log tracks the transfer of the character between different users, noting the sender, recipient, log information as well as the date. This is similar to the ownership history log that a user also possesses, but specifically monitors the character only.</p> <p>Currency Logs: Like the user currency logs, this log tracks the in and outflow of currency from the character's bank. Note that characters are unable to transfer currency between each other, and can only transfer currency to their owners. However, character-owned currencies can be used to purchase items from shops (if the settings allow).'</p> <p>Item Logs: Like the user item logs, this log tracks the in and outflow of items from the character's inventory. Note that characters are unable to transfer items between each other, and can only transfer items to their owners.</p> <p>Submissions: This is a list of submissions that the character has been attached to for rewards.</p>"},{"location":"features/characters/#transfers","title":"Transfers","text":"<p>Characters may change hands in 3 ways:</p> <ul> <li>User-initiated transfer</li> <li>Staff-initiated transfer (a forced transfer)</li> <li>Trades</li> </ul> <p>Transfers may be monitored by changing the <code>open_transfers_queue</code> site setting to 1. This will place all character transfers and trades containing characters into a queue, and must be approved by a staff member before the transfer is completed.</p> <p>User-initiated transfers are a unidirectional transfer from sender to recipient. The recipient is required to accept before they can receive the character. If the transfer queue is closed, the recipient will receive the character immediately upon accepting the transfer.</p> <p>For trades, please see the trades article.</p>"},{"location":"features/characters/#see-also","title":"See Also","text":"<ul> <li>Character Images</li> <li>MYO Slots</li> <li>Masterlist</li> <li>Trades</li> <li>User Accounts</li> </ul>"},{"location":"features/claims/","title":"Claims","text":"<p>Claims are a submission type that accepts user submissions into a queue and distributes rewards when approved. Unlike Prompts, they do not require the user to choose a prompt for submission.</p>"},{"location":"features/claims/#submission","title":"Submission","text":"<p>Claims can be submitted from the claim submission page. A quick link is also available from the submit dropdown on the right hand side of the nav bar.</p> <p>A claim submission requires:</p> <ul> <li>URL</li> <li>Comments (no HTML; accepts line breaks)</li> <li>Rewards</li> </ul> <p>URL is the link to a page containing the material to be reviewed for claim submission. This is expected to link to proof (e.g. a comment, screenshot etc.) that the user is allowed to make this claim.</p> <p>Comments are optional. This space could be used for, for example, entering a reason/purpose for making the claim. Line breaks will be preserved, but HTML will not be rendered.</p>"},{"location":"features/claims/#rewards","title":"Rewards","text":"<p>The rewards section allows the user to select additional rewards. They can choose to add any of:</p> <ul> <li>Items</li> <li>Currencies</li> </ul> <p>Loot tables cannot be selected. This selection is added on top of the default rewards, which are also displayed below the reward selection area.</p>"},{"location":"features/claims/#characters","title":"Characters","text":"<p>The characters section allows the user to add characters to their submission. Inputs are:</p> <ul> <li>Character Code</li> <li>Rewards</li> </ul> <p>Character Code refers to the character's unique identification code.</p> <p>Rewards function much like the user selected rewards, but only currencies can be selected, and these rewards will be credited directly to the character on approval.</p>"},{"location":"features/claims/#submission_1","title":"Submission","text":"<p>Submissions submitted to the approval queue cannot be edited by the user. The submission will have its own page containing all submitted information - this will not be visible to any users besides the submitter and users with the Manage Submissions power until it is approved.</p>"},{"location":"features/claims/#approval-queue","title":"Approval Queue","text":"<p>Users with the Manage Submissions power can view the queue, edit rewards and approve/reject submissions.</p> <p>The claim approval queue consists of lists of submissions filtered by status, ordered by newest first. Pending submissions can be acted upon, while approved and rejected submissions are for reference only.</p> <p>Clicking the edit button takes the user to the submission review page, where they can edit the rewards attached to the submission.</p>"},{"location":"features/claims/#rewards_1","title":"Rewards","text":"<p>The user rewards section lists the rewards the user has selected. The selectable area contains everything the user will receive when their submission is approved.</p> <p>The character rewards section lists the characters and rewards the user has added that will be given to the selected characters. More characters can be added as well.</p>"},{"location":"features/claims/#processing","title":"Processing","text":"<p>The submission can be approved or rejected using the buttons at the bottom. Clicking either will notify the user that their submission has been processed.</p> <p>In the case of approval, any attached rewards will be automatically distributed to the user and characters. The submission page will become publicly visible.</p> <p>In the case of rejection, a comment can be provided to the user. This can be used to inform the user about why their submission was rejected. HTML cannot be used, and the reason will be displayed on the submission page. The submission page remains hidden to users other than staff with the Manage Submissions power and the submitter themselves.</p>"},{"location":"features/claims/#logging","title":"Logging","text":"<p>A list of prompt/claim submissions a user has made is linked from their user profile. Similarly, characters also have a page that lists prompts/claims they have been submitted for rewards in.</p>"},{"location":"features/claims/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>Prompts</li> </ul>"},{"location":"features/config-files/","title":"Config Files","text":"<p>The configuration files are files in the site\u2019s code that allow customisation of certain features that are highly unlikely to be changed on a regular basis.</p>"},{"location":"features/config-files/#usage","title":"Usage","text":"<p>These files are located in <code>config/lorekeeper</code>. The <code>settings.php</code> file is the only file that may require any editing at all; the others should not be touched except when coding new features.</p>"},{"location":"features/config-files/#files","title":"Files","text":""},{"location":"features/config-files/#settingsphp","title":"settings.php","text":"<p>This file lists some basic site settings that are unlikely to change once the site is in use, and therefore should be modified before all else. The following properties can be modified here:</p> <ul> <li>Site Name</li> <li>Character Codes (formatting)</li> <li>Masterlist Thumbnail Dimensions</li> <li>Trade Asset Limit</li> </ul> <p>Please refer to the comments in the file itself for a complete description of each setting.</p>"},{"location":"features/config-files/#extensionsphp","title":"extensions.php","text":"<p>This file lists settings to enable and disable as well as configure certain opt-in extensions integrated into Lorekeeper.</p>"},{"location":"features/config-files/#sitesphp","title":"sites.php","text":"<p>This file lists various sites and values for them and is used to enable/disable available authentication options as well as assist with formatting.</p>"},{"location":"features/config-files/#group_currency_formphp","title":"group_currency_form.php","text":"<p>This file lists form fields and information for inclusion in the group currency form. For more information, see Galleries.</p>"},{"location":"features/config-files/#extension_trackerphp","title":"extension_tracker.php","text":"<p>This file lists extensions installed on an individual Lorekeeper site and is used to supply information for the <code>php artisan update-extension-tracker</code> command. It should only be modified by extension authors.</p>"},{"location":"features/config-files/#admin_sidebarphp","title":"admin_sidebar.php","text":"<p>This file lists the links in the admin panel sidebar, as well as the staff power required to view the category of links.</p>"},{"location":"features/config-files/#image_filesphp","title":"image_files.php","text":"<p>This file lists the files that will appear in the image uploader section of the admin panel.</p>"},{"location":"features/config-files/#item_tagsphp","title":"item_tags.php","text":"<p>This file lists item tags that are available to attach to items. Please refer to the tutorial for how to use this file.</p>"},{"location":"features/config-files/#notificationsphp","title":"notifications.php","text":"<p>This file lists notification types as well as their message texts.</p>"},{"location":"features/config-files/#powersphp","title":"powers.php","text":"<p>This file lists staff powers that can be attached to user ranks.</p>"},{"location":"features/config-files/#text_pagesphp","title":"text_pages.php","text":"<p>This file lists text pages that are generated during setup and cannot be deleted from the admin panel.</p>"},{"location":"features/config-files/#see-also","title":"See Also","text":"<ul> <li>Site Settings</li> </ul>"},{"location":"features/currencies/","title":"Currencies","text":"<p>Currencies are distributed through prompts and can be used to purchase items from shops, as well as attached to character design updates. They can be edited in the admin panel by users with the Edit World Data power.</p>"},{"location":"features/currencies/#usage","title":"Usage","text":"<p>Currencies owned by a user can be viewed from their user profile and public bank. Users can transfer currency from their bank (provided that currency can be transferred).</p> <p>Currencies can be obtained via the following methods:</p> <ul> <li>Prompt rewards/Claims</li> <li>Box type items</li> <li>Transferred/traded from another user</li> <li>Granted by users with the Edit Inventories power, in the admin panel</li> </ul> <p>Currencies can be spent/removed via the following methods:</p> <ul> <li>Used to purchase from shops</li> <li>Attached to design updates</li> <li>Transferred/traded to another user</li> <li>Removed by users with the Edit Inventories power, in the admin panel</li> </ul> <p>Removal can be done using the grant currency feature by entering a negative value. Users cannot own negative currency.</p> <p>A log of ingoing/outgoing currencies can be found on the user's bank pages.</p>"},{"location":"features/currencies/#editing","title":"Editing","text":"<p>Currencies have the following properties:</p> <ul> <li>Currency Name</li> <li>Abbreviation</li> <li>Icon Image</li> <li>World Page Image</li> <li>Description (accepts HTML)</li> <li>Attach to Users<ul> <li>Profile Display</li> <li>User \u2192 User Transfers</li> </ul> </li> <li>Attach to Characters<ul> <li>User \u2192 Character Transfers</li> <li>Character \u2192 User Transfers</li> </ul> </li> </ul> <p>Currency Name is the currency's full name (e.g. \"Gold\") that is displayed on the encyclopedia and bank pages. It is also shown in dropdown selections.</p> <p>Abbreviation is the short form of the currency's name (e.g. \"G\"). It is used if an icon is not provided, and also listed alongside the currency's full name in the bank. If an abbreviation is not provided, the currency's full name will be used instead.</p> <p>The Icon Image is a small image that can be used to represent the currency (e.g. a gold coin). There is no restriction on the size of the image, but the recommended height is 16 pixels. This image is displayed on the user's profile page as well as in logs.</p> <p>The World Page Image is shown in the encyclopedia, and nowhere else. As with all encyclopedia images, the recommended size is 200 x 200 pixels, but can be any size.</p> <p>Description is a description of the currency for the encyclopedia page.</p> <p>The Attach to Users option allows users to hold this currency. Similarly, the Attach to Characters option allows characters to hold this currency. Either of these options must be selected.</p> <p>The Profile Display option chooses whether or not to display the currency on the user's profile, making it easy to tell how much currency the user is holding at a glance. The user's other currencies can still be viewed easily from their bank page. This makes it possible to, for example, give users event currencies without it showing prominently on their profiles when the event is not running.</p> <p>The User \u2192 User Transfers, User \u2192 Character Transfers and Character \u2192 User Transfers concern whether currencies can be transferred in those directions. Note that character-to-character transfers are not an option as this is achievable by selecting both the user/character transfer options. Disabling the user-to-user option also prevents currencies from being attached to trades.</p> <p>Additionally, the display order of currencies can be edited from the Sort Currencies page. This order affects how currencies are displayed on profiles and in the bank, and user-owned currencies and character-owned currencies can have different sorting orders.</p>"},{"location":"features/currencies/#see-also","title":"See Also","text":"<ul> <li>Shops</li> </ul>"},{"location":"features/design-updates/","title":"Design Updates","text":"<p>Design updates are a means by which users can upload and submit an updated version of their character's design, or a completed MYO slot design for review. This system streamlines the process of uploading new images for the masterlist by having users prepare the images and fill in the character stats, and submissions go into a review queue where staff can act upon them.</p>"},{"location":"features/design-updates/#usage","title":"Usage","text":"<p>Users are able to prepare a new approval request for a character or MYO slot by going to their character/slot's page and clicking on Update Design or Submit MYO Design respectively.</p> <p>At this point, if the <code>is_design_updates_open</code> site setting is set to 0, the user will not be able to create a new request. However, if it is set to 1, the page will prompt the user to create a new request if one does not exist, or to view the request if there is already an active one. Clicking on the button creates a new draft for a design update approval. After each section of the approval has been updated, it can be submitted to the queue.</p> <p>Note that characters or MYO slots with an active request cannot be transferred or traded, due to complications that may arise from attached resources. At the draft stage, a design approval request can be deleted easily.</p> <p>Once the request has been submitted to the queue, staff with the Manage Masterlist power can choose to approve, reject or cancel the request. The effects of each action are covered further below.</p>"},{"location":"features/design-updates/#submission","title":"Submission","text":"<p>The approval request page contains the following tabs: Status, Comments, Masterlist Image, Add-ons, Traits.</p> <p>Status shows the current status of the draft, and notes if any of the required information is missing. It also allows users to delete the request (the current draft), or submit it if it's ready. All of the sections below must have been edited at least once for the user to submit their request, regardless of whether any information has been entered (for the optional fields).</p> <p>Comments is a section for the user to include any notes about the submission, if required by staff.</p> <p>Masterlist Image allows the user to upload an image and use the thumbnail cropper to crop it. The image thumbnail can be edited by staff during approval, if necessary. The user can also add image credits for the designer(s) and artist(s) of the image.</p> <p>Add-ons allows the user to choose items and currencies from their inventory/bank to submit with the request. These items and currencies will be removed from their inventory/bank immediately, but returned if the user decides to cancel.</p> <p>Traits allows the user to select the species, subtype, rarity and traits for their character. If the user is submitting for an MYO slot, any restrictions on these fields will be applied here - for example, compulsory traits cannot be deselected, and if the species is fixed, it cannot be changed here.</p> <p>After the information on each tab has been saved once, the slot can be submitted. At any point during the editing of this draft, the page can be viewed by a user with the Manage Masterlist power - this can be used for obtaining feedback on the current design without having to submit it.</p>"},{"location":"features/design-updates/#approval-queue","title":"Approval Queue","text":"<p>Users with the Manage Masterlist power can view the queue and approve/reject/cancel submissions in the design update approval queue.</p> <p>The staff member reviewing the submission cannot modify any of the trait information the user has submitted - this is so the submitter does not end up with traits different from what they expected to receive. However, the staff member can:</p> <ul> <li>Re-crop the thumbnail</li> <li>Upload a new thumbnail</li> <li>Change the designer/artist credits of the image</li> </ul>"},{"location":"features/design-updates/#voting","title":"Voting","text":"<p>Voting on design updates may optionally be enabled via the extensions config file. This allows users viewing design updates in the approval queue to vote to approve or reject/cancel a design update. This is only a communication tool for sites' staff and does not automatically perform any actions when a consensus has been reached.</p>"},{"location":"features/design-updates/#approve","title":"Approve","text":"<p>Approving the request requires some data about the character to be added (in the case of MYO slots) or reviewed:</p> <ul> <li>Character Category</li> <li>Number</li> <li>Character Code</li> <li>Description</li> <li>Is Giftable</li> <li>Is Tradeable</li> <li>Is Resellable</li> <li>Resale Value</li> <li>On Transfer Cooldown Until</li> <li>Set Active Image</li> <li>Invalidate Old Image</li> </ul> <p>Character Category ~ On Transfer Cooldown Until are covered in the Characters article.</p> <p>Set Active Image, if set to On, will cause the newly-uploaded image to become the character's new masterlist image.</p> <p>Invalidate Old Image, if set to On, will mark the character's old masterlist image as invalid. See the Character Images article for more information.</p>"},{"location":"features/design-updates/#reject","title":"Reject","text":"<p>Rejecting the request hard denies the update, causing all items and currency attached to it to be returned to the user, and forcing them to need to create a new request if they want to update the same character.</p> <p>A comment can be added to the rejection, which the user will be able to see on the request page.</p> <p>If a softer approach is desired, consider cancelling the request instead.</p>"},{"location":"features/design-updates/#cancel","title":"Cancel","text":"<p>Cancelling the request puts it back into draft status, allowing the submitter to make changes to their submission and resubmit it.</p> <p>A comment can be added as feedback, which the user will be able to see on the request page. Additionally, a toggle is provided for preserving the user's position in the queue - if set to On, when the user resubmits the request, it will be inserted back into the queue at the position it was at previously, allowing the submitter to avoid having to wait for their turn again.</p>"},{"location":"features/design-updates/#see-also","title":"See Also","text":"<ul> <li>Character Images</li> <li>Characters</li> <li>MYO Slots</li> </ul>"},{"location":"features/file-manager/","title":"File Manager","text":"<p>The File Manager is a feature in the admin panel that can be used to upload files through the site interface. It provides a simple way to upload images that can be used in the descriptions of encyclopedia entries, news posts, etc. as well as other files that may be useful to players of the ARPG, such as drawing bases/PSDs. The File Manager can be used by users with the Edit Site Settings power.</p>"},{"location":"features/file-manager/#usage","title":"Usage","text":"<p>The File Manager is a simple file uploader for creating folders and uploading files. Folders and files are uploaded to the public/files folder. Using any other method to place/edit files in this folder (e.g. through FTP) will also cause the changes to be reflected in the manager.</p> <p>Folders can be created up to 1 level deep (no nested folders). Each folder can hold an unlimited number of files (only limited by amount of storage space your webhosting plan provides). Folders can be renamed and deleted, both of which will break existing links to any of their contents.</p> <p>Files can be uploaded one-by-one to the base folder and any created folders. There is no restriction on the file type. The file size is limited by the maximum upload size as specified in your server's php.ini, and may or may not be an accurate representation of the maximum size of file you can upload - the displayed maximum size is a guideline, and avoiding uploading excessively large files is recommended.</p> <p>Files in a folder are listed in the folder page. The files can be accessed by clicking on the file names. Files can be moved, renamed or deleted, which will break existing links to any of them.</p>"},{"location":"features/file-manager/#editing","title":"Editing","text":"<p>Folders have the following properties:</p> <ul> <li>Name</li> </ul> <p>Name is the folder's name. This should be unique (not the name of an existing folder), and use only alphanumeric characters and dashes/underscores only.</p> <p>File uploads present only an upload. The move form allows the user to select a destination folder, and will overwrite any existing file in the destination folder with the same file name. Similarly, the rename feature will also overwrite an existing file with the same name. It can also be used to change the file extension of the file, but this may cause unintended behaviour and thus is not recommended.</p>"},{"location":"features/file-manager/#see-also","title":"See Also","text":"<ul> <li>Site Settings</li> <li>Site Pages</li> </ul>"},{"location":"features/galleries/","title":"Galleries","text":"<p>Galleries are a submission type that accepts user images (typically art) and writing into a queue for inclusion in one of a site's galleries/folders. Galleries can be edited in the admin panel by users with the Edit World Data power.</p>"},{"location":"features/galleries/#usage","title":"Usage","text":"<p>This section pertains to the general purpose and usage of the gallery index. See the Submission section below for more information on submitting to a gallery.</p> <p>The overall gallery can be accessed from the navigation bar. The gallery index lists all visible top-level galleries. These are displayed in the order specified by staff when creating/editing galleries.</p> <p>Each gallery in the index lists the following:</p> <ul> <li>Name (with link to the full gallery)</li> <li>A list of the gallery's sub-galleries, if present</li> <li>The four most recent submissions to the gallery, each including:<ul> <li>Thumbnail</li> <li>Title</li> <li>Artist(s)/Author(s)</li> <li>Number of favourites</li> <li>Number of comments</li> </ul> </li> </ul> <p>If a gallery contains no submissions, but has sub-galleries which contain them, submissions to the sub-galleries will be shown instead.</p>"},{"location":"features/galleries/#galleries_1","title":"Galleries","text":"<p>Each gallery has a page that displays the following:</p> <ul> <li>Name</li> <li>Open and/or close date, as applicable</li> <li>Description</li> <li>All submissions to the gallery, paginated, as outlined above</li> <li>The submit to gallery button, if a user is logged in</li> </ul> <p>Submissions in a gallery can be searched by title, associated prompt ID (as applicable), and sorted by:</p> <ul> <li>Newest First (creation date)</li> <li>Oldest First</li> <li>Title (alphabetical order)</li> <li>Title (reverse alphabetical order)</li> <li>By prompt (newest to oldest)</li> <li>By prompt (oldest to newest)</li> </ul> <p>Pieces can only be submitted to a gallery between the start and end dates if either or both of those dates are specified. Clicking the Submit button goes to the gallery submission page for that gallery.</p>"},{"location":"features/galleries/#user-and-character-galleries","title":"User and Character Galleries","text":"<p>Each user and character has their own gallery. For users, this displays all gallery submissions the user has made.</p> <p>For characters, this is separate from their images and displays all submissions that the character is attached to. Character galleries have a disclaimer at the top noting that the images therein are user-generated and not to be confused with the official record of the character as seen in the character's images. In this sense, it is similar to the character's submission log.</p>"},{"location":"features/galleries/#favourites","title":"Favourites","text":"<p>Users can add approved gallery submissions to their favourites. This is done by means of a button visible either alongside the gallery submission's thumbnail or on the gallery submission's page. A user's favourites are displayed in a gallery on their profile. There is also an automatically populated gallery of the user's favourites which have characters they currently own attached.</p>"},{"location":"features/galleries/#editing","title":"Editing","text":"<p>This section pertains to the editing of galleries. See the Queues section below for more information on the submission queues.</p> <p>Gallery editing requires the Edit World Data power. Note that this power alone does not allow the user to view and process the submission queues.</p> <p>Galleries have the following properties:</p> <ul> <li>Name</li> <li>Sort</li> <li>Parent Gallery</li> <li>Description (no HTML)</li> <li>Submissions Open</li> <li>Enable Currency Rewards</li> <li>Prompt Selection</li> <li>Votes Required</li> <li>Hide Before Start Time</li> <li>Start Time</li> <li>End Time</li> </ul> <p>Name is the gallery name which is displayed on the gallery index and gallery itself.</p> <p>Sort, optional, is a number and does not need to be unique. Galleries are sorted first by their sort number, then by name.</p> <p>Sub-galleries are also sorted this way, but only displayed within the context of their parent gallery, so a sub-gallery with a sort number of 1 will only ever display at the top of its' parent gallery's list of sub-galleries.</p> <p>The Parent Gallery, optional, is the gallery that the gallery being created/edited falls under, used for organization.</p> <p>The Description field allows for a short description of the gallery. This is shown on the gallery's page.</p> <p>Submissions Open controls whether or not users can submit to the gallery. Users with the Manage Submissions power can submit to any gallery regardless of this setting.</p> <p>Note that no users may submit regardless of powers if the <code>gallery_submissions_open</code> site setting is set to 0.</p> <p>Enable Currency Rewards controls whether submissions to the gallery are eligible for group currency rewards. This option only appears if the <code>gallery_submissions_reward_currency</code> site setting is enabled.</p> <p>Prompt Selection controls whether or not users will be given the option to select a prompt to associate with a gallery submission when submitting to the gallery.</p> <p>This is primarily useful for galleries which may see submissions intended for multiple different prompts, as it helps keep them organized from the outset.</p> <p>Votes Required is the number of votes required to approve a submission to this gallery in the approval queue. This option only appears if the <code>gallery_submissions_require_approval</code> site setting is enabled.</p> <p>Hide Before Start Time prevents the gallery from showing on the index before it can be submitted to. Note that galleries can only be hidden before starting, not after their end.</p> <p>Start Time &amp; End Time note the period during which submissions to the gallery can be made. Both are optional, and you can also specify only one of them.</p>"},{"location":"features/galleries/#currency-rewards","title":"Currency Rewards","text":"<p>This optional component, enabled using the <code>gallery_submissions_reward_currency</code> site setting, allows submissions to applicable galleries to receive rewards of a set on-site currency. When submitting to a gallery with currency rewards enabled, users will be shown a short form that is used to calculate an estimated currency total that they should receive for the piece. This estimate will be provided to users managing the associated queue, though they can adjust as appropriate. This component will work on initial installation but will not be customized to your site, so it is highly recommended** that it be configured as appropriate. This has three parts:</p> <ul> <li><code>group_currency</code> site setting<ul> <li>The ID of the currency that is used for rewards.</li> </ul> </li> <li>The Form<ul> <li>This part-- displayed to users when creating a gallery submission-- is configured in a config file (specifically <code>config/lorekeeper/group_currency_form.php</code>). This file is commented extensively in an effort to make it easier to customize.</li> </ul> </li> <li>The Function<ul> <li>This part takes input from the form and uses it to calculate an estimated reward that should be given for a gallery submission. It is at the beginning of and configured in <code>app/Helpers/AssetHelpers</code> and similarly commented extensively. Note that the fields used in this function must correspond to the form, or it will break and/or fail to calculate the total properly.</li> </ul> </li> </ul>"},{"location":"features/galleries/#submission","title":"Submission","text":"<p>Submissions to a gallery can be submitted from the gallery index (via the + button on the gallery's listing) or via the \"submit\" button on the gallery's page.</p> <p>A gallery submission requires:</p> <ul> <li>Main Content (An image and/or text (accepts HTML))</li> <li>Title</li> <li>Description (accepts HTML)</li> <li>Content Warning (no HTML)</li> <li>Prompt</li> </ul> <p>Main Content is the primary content of the gallery submission. This can take the form of an image and/or text (for literature with an accompanying illustration, for example).</p> <p>Title is the title of the gallery submission, shown in the gallery.</p> <p>Description is optional. This space may be used for any comments the submitting user would like to make about the piece.</p> <p>Content Warning is optional. The submitting user may provide a short content warning if deemed appropriate; if so, the submission's thumbnail will be displayed as a generic image (see Site Images) and the warning will be displayed below the thumbnail. The piece will still be visible in full when visiting the gallery submission's page.</p> <p>Prompt is optional and only available if enabled for the gallery being submitted to. If available, the prompt the gallery submission is for may be selected. This is useful primarily as an organizational tool, as gallery submissions will automatically find and display prompt submissions using the gallery submission.</p>"},{"location":"features/galleries/#characters","title":"Characters","text":"<p>The characters section allows the user to add characters to their submission. The only input is the character code (the character's unique identification code).</p> <p>Characters added to a submission are displayed on the submission's page; if currency rewards are enabled for the site and gallery being submitted to, the number of characters attached to the submission is also used to help calculate the estimated reward.</p>"},{"location":"features/galleries/#collaborators","title":"Collaborators","text":"<p>If a piece is a collaboration between multiple users, the submitting user can specify each user that participated, including themself.</p> <p>Collaborators require the following:</p> <ul> <li>User</li> <li>Role (no HTML)</li> </ul> <p>User allows selection of an on-site user.</p> <p>The Role field is for specifying what part(s) of a piece the user contributed.</p> <p>When submitting a gallery submission with collaborators associated, the collaborators will be notified and must approve or edit the record of their contribution before the submission appears in the gallery (if submissions do not require approval) or before it appears in the submission queue for staff approval. Contributors can also remove themself from the submission at this time if they have been added erroneously. Once all collaborators have approved, the submission is processed further.</p>"},{"location":"features/galleries/#participants","title":"Participants","text":"<p>Participants are similar to collaborators, though not directly involved in the creation of the submission.</p> <p>Participants require the following:</p> <ul> <li>User</li> <li>Role</li> </ul> <p>User allows selection of an on-site user.</p> <p>Role allows for selection from one of the following:</p> <ul> <li>Gift for</li> <li>Trade for</li> <li>Commissioned by</li> <li>Commissioned by (for group currency)</li> </ul> <p>Participants are notified that they have been added to a gallery submission once it is approved.</p>"},{"location":"features/galleries/#currency-rewards-information","title":"Currency Rewards Information","text":"<p>If currency rewards are enabled for the site and gallery being submitted to, the user will be asked to fill out the currency reward form as configured. Once the gallery submission has been submitted, the site will use this information to calculate an estimated amount of currency that the user and/or any collaborators should receive.</p>"},{"location":"features/galleries/#submission_1","title":"Submission","text":"<p>Gallery submissions submitted to the approval queue or gallery (depending on settings) will have their own page containing submitted information. Submissions are visible to the submitting user and/or all collaborators as well as to users with the Manage Submissions power before approval, and to all users once the submission is accepted into the gallery.</p>"},{"location":"features/galleries/#editing_1","title":"Editing","text":"<p>Gallery submissions can be edited after submission by the submitting user as well as users with the Manage Submissions power, though some properties cannot be edited either after submission or after approval. The properties that can always be edited are:</p> <ul> <li>Main Content</li> <li>Title</li> <li>Description</li> </ul> <p>The properties that can be edited before approval are:</p> <ul> <li>Collaborators<ul> <li>Note that any collaborators added after submission will not receive a notification</li> </ul> </li> <li>Participants</li> </ul> <p>The properties that cannot be edited after submission are:</p> <ul> <li>Currency form information (if enabled)</li> <li>Selected prompt (if enabled)<ul> <li>Users with the Manage Submissions power can always edit this, however.</li> </ul> </li> </ul> <p>Additionally, users with the Manage Submissions power can select a different gallery to move an already submitted gallery submission to. This is available regardless of the submission's status. Note that if a submission is moved between galleries that do/do not have currency rewards enabled, the relevant information will not be created/will not be displayed, and the submission will not be added to the rewards queue, depending on the direction of the move.</p>"},{"location":"features/galleries/#archiving-submissions","title":"Archiving Submissions","text":"<p>As gallery submissions may hold records important to the logging and recordkeeping of the site-- particularly if currency rewards are enabled-- they cannot be deleted. However, the submitting user, as well as any users with the Manage Submissions power, can \"archive\" gallery submissions, rendering them non-visible to other users.</p>"},{"location":"features/galleries/#submission-log-details","title":"Submission Log Details","text":"<p>Gallery submissions have an additional page that contains non-public details about the submission and information pertinent to queue processing. This page is visible to the submitting user and/or any collaborators as well as users with the Manage Submissions power. This page displays:</p> <ul> <li>Basic information about the gallery submission<ul> <li>Thumbnail</li> <li>Title</li> <li>Gallery</li> <li>Submitting user and/or collaborators</li> <li>Created/updated at</li> </ul> </li> <li>(If currency rewards are enabled) Currency reward information<ul> <li>Responses from the currency form are recorded here</li> <li>Users with Manage Submissions may view the estimated numbers that should be rewarded</li> </ul> </li> </ul>"},{"location":"features/galleries/#queues","title":"Queues","text":"<p>Users with the Manage Submissions power can view the queue(s), vote on submission approval/rejection, and (if enabled) reward currency for gallery submissions.</p> <p>Both the approval and currency queues consist of lists of gallery submissions, ordered by newest first. Submissions can be further filtered by gallery.</p>"},{"location":"features/galleries/#log-view","title":"Log View","text":"<p>Each gallery submission has a separate sub-page dedicated to information related to its processing through the queue(s). This displays basic information about the submission, as well as (if enabled) currency reward information including responses to the form and the estimated reward as calculated when the submission was created (visible only to users with the Manage Submissions power). If a submission has been voted on, a record of vote(s) is visible to permissioned users as well. This page is visible only to the submitting user and/or any collaborators as well as users with the Manage Submissions power.</p> <p>The page includes sections for comments between user(s) and users with the Manage Submissions power (staff), as well as for staff-only comments. The submitting user is notified when a new comment is made in the user-staff comment section.</p>"},{"location":"features/galleries/#approval-queue","title":"Approval Queue","text":"<p>Pending submissions can be acted upon, while approved and rejected submissions are for reference only. Pending submissions can be voted on either directly from the approval queue or on the submission's log view using the provided buttons. The submitting user will be notified when the submission is either approved or rejected.</p>"},{"location":"features/galleries/#currency-queue","title":"Currency Queue","text":"<p>Approved submissions that have not yet received rewards can be acted upon, while submissions that have already received rewards are for reference only. Currency is rewarded for submissions via the log view. If a gallery submission is eligible for currency rewards, a form will be made available listing the user and/or all collaborators as well as participants allowing the processing user to enter in the amount of currency each user involved should receive. Submitting this automatically distributes the respective amounts to the users and notifies them.</p>"},{"location":"features/galleries/#see-also","title":"See Also","text":"<ul> <li>Prompts</li> <li>Claims</li> <li>Currencies</li> <li>Characters</li> </ul>"},{"location":"features/invitation-keys/","title":"Invitation Keys","text":"<p>Invitation keys, used for registering for the site, can be generated in the admin panel (requires the Manage Users power).</p>"},{"location":"features/invitation-keys/#effects","title":"Effects","text":"<p>Invitation keys are only useful when the <code>is_registration_open</code> site setting is set to 0. In this case, the registration form will display an additional, required invitation key field and new users will not be able to create an account without a valid key.</p>"},{"location":"features/invitation-keys/#editing","title":"Editing","text":"<p>Keys can be generated in the Invitation Keys section of the admin panel. When generated, a random string will be generated as an invitation code, which can be given to a new user to register an account with. After the user has used the code, their account name will be listed in the table, as well as the date of usage.</p> <p>Codes that have not been used can be deleted, rendering them unusable.</p>"},{"location":"features/items/","title":"Items","text":"<p>Items can be owned by users and may be used in various ways. They can be edited in the admin panel by users with the Edit World Data power.</p>"},{"location":"features/items/#usage","title":"Usage","text":"<p>Items can be created in the admin panel. Once created, they can be distributed to users through a variety of ways. Item categories are optional, but provide categorisation in the user's inventory and shop pages.</p> <p>Items are primarily used as turn-ins for character design updates. Depending on their item tags, they may also have additional functionality.</p>"},{"location":"features/items/#editing","title":"Editing","text":""},{"location":"features/items/#categories","title":"Categories","text":"<p>Editing item categories and items requires the Edit World Data power.</p> <p>Item categories can be created in the admin panel, with the usual category properties:</p> <ul> <li>Name</li> <li>World Page Image</li> <li>Description (accepts HTML)</li> </ul> <p>The image and description are displayed only on the world page. Categories are optional, but useful for sorting items. Items without a category will be placed in a \"Miscellaneous\" category in the inventory.</p> <p>Item categories also have the following properties pertaining to character ownership of the items in them:</p> <ul> <li>Can be Owned by Characters<ul> <li>Whether or not items in the category can be owned by characters/users can transfer items in this category from their inventory to their characters' inventories.</li> </ul> </li> <li>Character Hold Limit<ul> <li>If set/non-0, this limits the number of items of the category a character can own at one time.</li> </ul> </li> <li>Can be Named<ul> <li>Whether or not items in this category can be \"named\" when in character inventories, e.g. in the case of pets. This does not override the name of the item itself.</li> </ul> </li> </ul> <p>Additionally, categories can be sorted from the Item Categories index page. This order reflects the sorting order of categories in user inventories.</p>"},{"location":"features/items/#items_1","title":"Items","text":"<p>Items themselves have the following properties:</p> <ul> <li>Name</li> <li>World Page Image</li> <li>Item Category</li> <li>Description (accepts HTML)</li> <li>Allow User \u2192 User Transfer</li> </ul> <p>Name is the item name which is displayed on the item index and shown in user inventories.</p> <p>The World Page Image is shown in the encyclopedia, and also functions as the item's thumbnail image in inventories. As with all encyclopedia images, the recommended size is 200 x 200 pixels, but can be any size.</p> <p>Item Category is the category to which the item falls under, and used for organisation. It is otherwise optional.</p> <p>Description is a description of the item for the encyclopedia page.</p> <p>Allow User \u2192 User Transfer is a setting for whether the item can be transferred to another user. This can be used to create account-bound items - items with this turned off cannot be sent to another user or added to a trade. Note that individual items can also be account-bound at the time of granting, so this setting does not have to be used if you want to create only selectively account-bound items.</p>"},{"location":"features/items/#item-tags","title":"Item Tags","text":"<p>This is a section under the item editing form that becomes accessible after the item has been created. Item tags are special settings that affect how the item can be used from a user's inventory - what they do has to be written in the site code itself, but once coded, can be attached to any item to give them the special behaviour.</p> <p>The Add a Tag button can be used to select an item tag. Duplicate item tags cannot be added to the same item. Attached item tags can be toggled on or off to allow or remove functionality without completely removing the item tag.</p> <p>By default, two item tags are available:</p> <ul> <li>Box<ul> <li>This allows you to choose a particular set of rewards from items, currencies, loot tables, and tickets for any active raffles.</li> <li>When a user chooses to use the item in their inventory, the box item will be consumed and the user will receive these rewards. The process of creating this item tag can be seen in this tutorial.</li> </ul> </li> <li>Slot<ul> <li>This allows you to set various properties for MYO slots that will be created using the item to which the tag is assigned.</li> <li>When a user chooses to use the item in their inventory, the slot item will be consumed and the user will receive a MYO slot with these properties.</li> </ul> </li> </ul>"},{"location":"features/items/#inventory","title":"Inventory","text":"<p>Each user has an inventory, which is sorted by item category and further sorted by alphabetical order of item names.  Items within this inventory are \"stacked\", meaning that all copies of an item, or stacks, are collapsed down to one entry in the user's inventory. Clicking on an item brings up a menu that lists the item's source (if any), accompanying notes (if any), and actions that can be performed on it.</p> <p>The Source field notes down the source of the item. This field is automatically filled out when the user receives an item through site activity e.g. through prompts/claims and functions as a record of how/why an item was received. In the case of shop purchases, this also notes who purchased the item, the shop it was purchased from, and the price.</p> <p>The Notes field contains additional information about the item. This is sometimes automatically filled out - for example, purchasing an item from a shop will fill the Notes section with the date of purchase. When granting an item from the admin panel, staff can fill in this section with a custom message.</p> <p>Below this section, actions that can be used are listed. Special actions from item tags are listed first, then general actions.</p> <ul> <li>Transfer Item to Character (if the item can be transferred)<ul> <li>Allows the user to transfer all or part of stack(s) to one of their characters. Only available if the item can be owned by characters.</li> </ul> </li> <li>Transfer Item (if the item can be transferred)<ul> <li>Allows the user to transfer all or part of stack(s) to another user.</li> </ul> </li> <li>Delete Item<ul> <li>Allows the users to trash all or part of stack(s) entirely.</li> </ul> </li> </ul>"},{"location":"features/items/#character-inventories","title":"Character Inventories","text":"<p>Character inventories are largely similar to user inventories. The notable difference is that different actions may be used on items compared to user inventories:</p> <ul> <li>Name Item (if the item can be \"named\")<ul> <li>Allows the user to assign a nametag to a stack, e.g. in the case of a pet.</li> </ul> </li> <li>Transfer Item (if the item can be transferred)<ul> <li>Allows the user to transfer all or part of stack(s) to the inventory of the character's owner.</li> </ul> </li> <li>Delete Item<ul> <li>Allows the users to trash all or part of stack(s) entirely.</li> </ul> </li> </ul>"},{"location":"features/items/#see-also","title":"See Also","text":"<ul> <li>User Accounts</li> <li>Shops</li> <li>Tutorial: Creating Item Types</li> </ul>"},{"location":"features/loot-tables/","title":"Loot Tables","text":"<p>Loot tables are used to randomise rewards during distribution. They can be edited in the admin panel by users with the Edit World Data power and are the only type of world data that cannot be publicly viewed.</p>"},{"location":"features/loot-tables/#usage","title":"Usage","text":"<p>Loot tables must be created before they can be distributed as a reward.</p> <p>After they have been created, they can be attached to the following:</p> <ul> <li>Prompt rewards</li> <li>Box type items</li> <li>Another loot table</li> </ul> <p>Loot tables can be nested, chaining multiple loot tables to form a complex item selection system. Nesting many loot tables is not recommended, however, and care must be taken to avoid creating an infinite rolling loop.</p> <p>Upon claiming the reward (having a prompt approved, or opening a box type item) the final reward will be rolled accordingly. Each loot table will select only ONE (1) of the rewards attached to it.</p>"},{"location":"features/loot-tables/#editing","title":"Editing","text":"<p>Loot tables require the following:</p>"},{"location":"features/loot-tables/#name","title":"Name","text":"<p>This is the name used to identify the table internally. This name will only be shown in the admin panel when editing rewards; users will not be able to see this name, so it is recommended to make it descriptive to make loot table selection easier.</p>"},{"location":"features/loot-tables/#display-name","title":"Display Name","text":"<p>This is the name that users will see, if a random reward will be given as a prompt reward. Users without the appropriate power are not able to see the rewards of a loot table as well as the odds, so you may want to choose a name that's appropriately cryptic depending on how transparent you would like to be about the rewards. (e.g. \"A Random Prize\" vs. \"Item A OR Item B\")</p>"},{"location":"features/loot-tables/#loot","title":"Loot","text":"<p>Under this section, you can choose the rewards that can be given out through this table. The following loot types can be selected:</p> <ul> <li>Item</li> <li>Item Category</li> <li>Any items of given raritie(s) (optional)<ul> <li>Enable in the extensions config file</li> </ul> </li> <li>Any items of given raritie(s) in an item category (optional)<ul> <li>Enable in the extensions config file</li> </ul> </li> <li>Currency</li> <li>Loot table</li> <li>None (no reward given)</li> </ul> <p>Additionally, you can specify the quantity and rolling weight.</p> <p>Quantity is fairly straightforward, giving a fixed amount of the item or currency selected. In the case of loot tables, it rolls the loot table that number of times. For example, if you selected Loot Table A with a quantity of 2, it would roll Loot Table A 2 times, rather than once and double the reward.</p> <p>Weight represents the likelihood of the reward being selected. This is not a percentage (which is calculated in the Chance column) and does not have to add up to 100, although that may make it easier to keep track of.</p>"},{"location":"features/loot-tables/#test-rolling","title":"Test Rolling","text":"<p>The loot table editing page provides a feature to generate test results for a loot table. Note that if the loot section has been edited, it must be saved beforehand for the changes to take effect. Additionally, if \"None\" is selected as a possible reward type, it will not show up as a result (so fewer results than rolls selected may be generated in this case).</p>"},{"location":"features/loot-tables/#see-also","title":"See Also","text":"<ul> <li>Items</li> <li>Currencies</li> <li>Prompts</li> <li>How Random is Random?</li> </ul>"},{"location":"features/masterlist/","title":"Masterlist","text":"<p>The masterlist displays every character that exists on the site, based on the character's visibility settings. It provides a number of search and sorting features, as well as a toggle between grid and list views. The character masterlist is essentially the same as the MYO slot masterlist, with a few differences that will be noted below.</p>"},{"location":"features/masterlist/#display","title":"Display","text":"<p>Characters that are listed as visible to the public are listed on the masterlist page, which is paginated. Users with the Manage Masterlist power will additionally see characters that are not visible, marked with an eye icon in front of the character's code.</p> <p>By default, the masterlist is shown in grid mode - all characters will be displayed as their thumbnails, listing their character code (if a character), name (if assigned by the user, or is a MYO slot), species, rarity and owner.</p> <p>In list mode, characters are listed without images, in table form, showing the information above as well as the character's date of creation.</p> <p>The grey buttons under the search button can be clicked to switch between modes. This preference is remembered by your Internet browser and will persist if you use the same browser to access the page again.</p>"},{"location":"features/masterlist/#searching","title":"Searching","text":"<p>The following search conditions can be set:</p> <ul> <li>Character name (user-assigned) OR character code</li> <li>Rarity</li> <li>Species</li> <li>Category</li> <li>Owner name</li> <li>Artist name</li> <li>Designer name</li> <li>Owner URL/alias</li> <li>Artist URL/alias</li> <li>Designer URL/alias</li> <li>Minimum resale price</li> <li>Maximum resale price</li> <li>Trading status (user-assigned)</li> <li>Gift art status (user-assigned)</li> <li>Gift writing status (user-assigned)</li> <li>Can be resold</li> <li>Can be traded</li> <li>Can be gifted</li> <li>Trait selection (AND selection)</li> </ul> <p>Additionally, an option to search through all character images, including ones that are no longer valid, can be toggled for the options shown in red. Only images visible to the user will be searched.</p> <p>The MYO slot masterlist presents the same search options except for the category selection.</p>"},{"location":"features/masterlist/#sorting","title":"Sorting","text":"<p>The following sort orders can be specified:</p> <ul> <li>Newest first (default)</li> <li>Oldest first</li> <li>Highest sale value</li> <li>Lowest sale value</li> </ul> <p>Note that \"newest\" and \"oldest\" are dependent on characters and are not influenced by character images. Additionally, characters that cannot be resold have a default value of $0 and will appear at the front of the list.</p>"},{"location":"features/masterlist/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>MYO Slots</li> </ul>"},{"location":"features/myo-slots/","title":"MYO Slots","text":"<p>MYO slots are a resource that can be attached to user accounts. MYO slots are \"lesser\" versions of characters with more restrictions on how they can be used with site features - they are not considered full characters until they have been submitted for design approval and approved. They can be edited in the admin panel by users with the Manage Masterlist power.</p>"},{"location":"features/myo-slots/#usage","title":"Usage","text":"<p>All MYO slots are listed on the MYO slot masterlist, which is separate from the character masterlist.</p> <p>MYO slots cannot hold currency and cannot be used to participate in prompts. If the gift/resale/trade options are configured to allow it, they can be transferred/traded. They can be converted into full characters through the design updates system. For more information, please refer to the respective pages.</p> <p>Users are able to edit a section of their MYO slot's profile, and list their character as being available for trade. This section also includes a text field that allows HTML.</p>"},{"location":"features/myo-slots/#editing","title":"Editing","text":"<p>Similar to full characters, MYO slots are set up in a manner such that traits, species, rarity and other specific details about the character tied to its current design are linked to images rather than the MYO slot itself. When the MYO slot's design is approved, the record of its original conditions (rarity, species, required traits etc.) are preserved as an image. This section will cover only the information attached to the MYO slot itself - for more information on character images, please see the Character Images page.</p> <p>MYO slots have the following properties:</p> <ul> <li>Name</li> <li>Owner</li> <li>Owner Alias</li> <li>Description</li> <li>Is Visible</li> <li>Is Giftable</li> <li>Is Tradeable</li> <li>Is Resellable</li> <li>On Transfer Cooldown Until</li> </ul> <p>The Name is used on the MYO slot masterlist. As MYO slots do not have a category/number and character code yet, this name will be displayed on pages where the MYO slot is listed. This name is not editable by the owner. Using a descriptive name like \"Rare MYO Slot\" is recommended.</p> <p>The Owner is the user on-site who owns the slot. This field can be left blank if the owner has not registered for an account, and the following field has been filled in.</p> <p>The Owner Alias is the deviantART account name of the user who owns the slot. If the Owner field is filled in, this field will be ignored. In the future, if the owner registers for the site, any MYO slots listed under their deviantART name will automatically be attached to their account. Note that if the user has since changed their dA username, this will not happen (slots have to be transferred to their new site account manually).</p> <p>The Description field allows for a custom description to be entered. This can be left blank if no further information is required. Suggestions for content include: specifics on how the slot was obtained, etc.</p> <p>Is Visible controls whether the slot is displayed on the MYO slot masterlist. If set to not visible, the slot will only be visible to users with the Manage Masterlist power (even the owner cannot see it without the power).</p> <p>Is Giftable, Is Tradeable, Is Resellable are toggles that display the respective information prominently on the slot's profile. This is largely cosmetic as the site cannot tell what a slot is being sold/traded for. However, the following effects will apply:</p> <ul> <li>If all toggles are off, the slot is account-bound - it cannot be transferred by the user directly, and cannot be attached to trades. Only users with the Manage Masterlist power can force a transfer.</li> <li>If the slot is not tradeable or resellable, the user will not be able to toggle the Up For Trade option in the slot's profile (which is a searchable option on the masterlist).</li> </ul> <p>Resale Value is a field that appears if the slot is marked as resellable. The dollar value of the slot can be set, which will be displayed on the slot's profile. This is cosmetic, and purely for reference.</p> <p>On Transfer Cooldown Until causes temporary account binding until the selected date/time. Until the cooldown time has been reached, the owner will not be able to directly transfer the slot or attach it to a trade. It is possible to automatically set the cooldown date to x number of days (default: 3) when a user makes a transfer - please see Site Settings for more information.</p>"},{"location":"features/myo-slots/#user-editable-profile","title":"User-editable Profile","text":"<p>After a slot has been created, its profile can be edited by the owner or users with the Manage Masterlist power. The following properties can be modified by the user:</p> <ul> <li>Profile Content</li> <li>Up For Trade</li> </ul> <p>Profile Content is a section that allows HTML content to be entered.</p> <p>Up For Trade is a toggle that denotes if the slot's owner wants to trade the slot. Similarly, this toggle can also be searched on the masterlist. This cannot be edited by anyone other than the owner.</p> <p>Additionally, for users who are not the owner (has the required power), a Notify User toggle is present. If left on, the owner of the slot will be notified that their slot's profile has been edited (implied: for moderation purposes). Regardless of the status of the toggle, owners of non-visible slots will not be notified.</p>"},{"location":"features/myo-slots/#logs","title":"Logs","text":"<p>Unlike characters, MYO slots do not have an image gallery (new images cannot be uploaded until it becomes a full character) and have no submission/currency logs as they cannot be submitted in prompts/hold currency. MYO slots have only 2 types of logs: the change log and ownership history log.</p> <p>Change Log: This log specifically logs changes to the slot and its images. It lists the specific fields updated, who made the edits, as well as the date of editing.</p> <p>Ownership History: This log tracks the transfer of the slot between different users, noting the sender, recipient, log information as well as the date. This is similar to the ownership history log that a user also possesses, but specifically monitors the slot only.</p>"},{"location":"features/myo-slots/#transfers","title":"Transfers","text":"<p>MYO slots may change hands in 3 ways:</p> <ul> <li>User-initiated transfer</li> <li>Staff-initiated transfer (a forced transfer)</li> <li>Trades</li> </ul> <p>Transfers may be monitored by changing the <code>open_transfers_queue</code> site setting to 1. This will place all MYO slot transfers and trades containing slots into a queue, and must be approved by a staff member before the transfer is completed.</p> <p>User-initiated transfers are a unidirectional transfer from sender to recipient. The recipient is required to accept before they can receive the slot. If the transfer queue is closed, the recipient will receive the slot immediately upon accepting the transfer.</p> <p>For trades, please see the trades article.</p>"},{"location":"features/myo-slots/#transfers-queue","title":"Transfers Queue","text":"<p>The transfers queue has separate sections for transfers and trades; however, both work similarly. The contents of each transfer or trade can be reviewed by the staff member, and approved or rejected.</p> <p>On clicking Approve, the staff member will have the option of adding a cooldown period (number of days) to each character involved. This field is prefilled with the default number in site settings and can be modified to be more or less than the default, and applied immediately after approval. The transfer or trade is processed immediately after clicking Approve on this modal.</p> <p>If the transfer is rejected, a comment can be added, which will be visible to the 2 users iinvolved.</p>"},{"location":"features/myo-slots/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>Character Images</li> <li>Masterlist</li> <li>Trades</li> <li>User Accounts</li> </ul>"},{"location":"features/news/","title":"News","text":"<p>News are a form of text post that can be used to alert all users to important information. They can be edited in the admin panel by users with the Edit Text Pages power.</p>"},{"location":"features/news/#usage","title":"Usage","text":"<p>News posts can be created in the admin panel and viewed on the news page. The news page lists news posts ordered by newest first. When a new post is made, all users will gain an alert at the top of every page notifying them of the new post. This alert disappears when the news page is viewed.</p> <p>News posts can be scheduled to post at certain times. Note that this posting is handled via crontab scheduling, and therefore may not be entirely accurate to the minute.</p>"},{"location":"features/news/#editing","title":"Editing","text":"<p>News posts have the following properties:</p> <ul> <li>Title</li> <li>Post Time</li> <li>Post Content (accepts HTML)</li> </ul> <p>Title is the title of the news post.</p> <p>Post Time is optional, and schedules the post to be posted after a certain date/time. If not set, the news post will be posted immediately.</p> <p>Post Content is the content of the news post itself. HTML is allowed. The File Manager can be used to upload images to be inserted into news posts if desired.</p>"},{"location":"features/news/#see-also","title":"See Also","text":"<ul> <li>Site Pages</li> <li>Sales</li> </ul>"},{"location":"features/notifications/","title":"Notifications","text":"<p>Logged in users have a notifications page, which lists notifications for important events that may require their attention.</p>"},{"location":"features/notifications/#usage","title":"Usage","text":"<p>Notifications include any pertinent links, as well as a timestamp for when the event occurred.</p> <p>New notifications are displayed as a counter in the navigation bar, which goes away once the notifications page is viewed. New notifications are highlighted with a differently-coloured background when viewed at this time.</p> <p>Notifications can be cleared individually by clicking the x on the right of the notification, or by clicking the clear all button to remove all existing notifications.</p>"},{"location":"features/notifications/#events","title":"Events","text":"<p>This is a list of all events for which the user will be notified by default:</p> <ul> <li>User has received a currency grant from staff</li> <li>User has received an item grant from staff</li> <li>User has had currency removed by staff</li> <li>User has had an item removed by staff</li> <li>User has received a currency transfer from another user</li> <li>User has received an item transfer from another user</li> <li>User has received an item transfer from another user, forced by staff</li> <li>Staff has uploaded a character for the user</li> <li>Staff has granted one of user\u2019s characters currency</li> <li>Staff has removed currency from one of user\u2019s characters</li> <li>Staff has edited the profile of one of user\u2019s characters</li> <li>Staff has uploaded an image for one of user\u2019s characters</li> <li>User has received a character transfer</li> <li>Recipient of user-initiated character transfer has rejected the transfer</li> <li>Sender of user-initiated character transfer has cancelled the transfer</li> <li>Staff has denied a character transfer involving the user</li> <li>Recipient of character transfer has accepted the transfer</li> <li>Staff has approved a character transfer</li> <li>Staff has forced a character transfer on one of the user\u2019s characters</li> <li>User has received a forced character transfer</li> <li>Prompt submission by the user has been approved by staff</li> <li>Prompt submission by the user has been rejected by staff</li> <li>Claim submission by the user has been approved by staff</li> <li>Claim submission by the user has been rejected by staff</li> <li>User has received a MYO slot grant by staff</li> <li>Design update submission by the user has been approved</li> <li>Design update submission by the user has been rejected</li> <li>Design update submission by the user has been cancelled</li> <li>User has received a trade</li> <li>User\u2019s trade partner has updated and confirmed their half of a trade</li> <li>User\u2019s trade partner has cancelled a trade</li> <li>A Trade involving the user has been completed</li> <li>A trade involving the user has been rejected</li> <li>A trade involving the user has been confirmed</li> <li>A character the user has bookmarked has had its trading status updated</li> <li>A character the user has bookmarked has had its gift art allowed status updated</li> <li>A character the user has bookmarked has been transferred to another user</li> <li>A character the user has bookmarked has had a new image uploaded</li> <li>A character the user has bookmarked has has its gift writing allowed status updated</li> <li>A report the user has made has been assigned to a staff member</li> <li>A report the user has made has been closed</li> <li>A comment has been made on something of the user's</li> <li>A comment the user has made has been replied to</li> <li>Staff have granted one of the user's characters item(s)</li> <li>Staff have removed item(s) from one of the user's characters</li> <li>The user has been added as a collaborator on a gallery submission</li> <li>All collaborators on a gallery submission the user made have approved it</li> <li>Gallery submission has been approved by staff</li> <li>Gallery submission has been rejected by staff</li> <li>Gallery submission has been awarded currency by staff</li> <li>Gallery submission has been moved by staff</li> <li>One of the user's characters has been attached to a gallery submission</li> <li>One of the user's gallery submissions has been favorited</li> <li>Gallery submission staff comments have been updated<ul> <li>Note that this notification type is no longer in use but is present to support previously created notifications</li> </ul> </li> <li>Gallery submission has been edited by staff</li> <li>The user has been added as a participant on a gallery submission</li> </ul>"},{"location":"features/notifications/#see-also","title":"See Also","text":"<ul> <li>User Accounts</li> <li>Characters</li> <li>Config Files</li> </ul>"},{"location":"features/prompts/","title":"Prompts","text":"<p>Prompts are a submission type that accepts user submissions into a queue and distributes rewards when approved. They can be edited in the admin panel by users with the Edit World Data power. See Claims for collecting rewards that do not have a prompt specified.</p>"},{"location":"features/prompts/#usage","title":"Usage","text":"<p>This section pertains to the general purpose and usage of the prompt index page. See the Submission section below for more information on submitting prompts.</p> <p>Prompts can be accessed from the navigation bar, under the World dropdown. The prompt index lists all visible prompts, sorted by category order, and can be further filtered by the following:</p> <ul> <li>Name</li> <li>Category</li> </ul> <p>Additionally, prompts can be sorted by:</p> <ul> <li>Name (alphabetical order)</li> <li>Category</li> <li>Newest First (creation date)</li> <li>Oldest First</li> <li>Starts Earliest</li> <li>Starts Latest</li> <li>Ends Earliest</li> <li>Ends Latest</li> </ul> <p>Each prompt lists the following:</p> <ul> <li>Name</li> <li>Start date (if applicable)</li> <li>End date (if applicable)</li> <li>Summary</li> <li>Details (collapsed)<ul> <li>This also notes if submissions to the prompt are temporarily or indefinitely hidden</li> </ul> </li> <li>Rewards</li> <li>Button for submission (if allowed)</li> </ul> <p>Prompts can only be submitted between the start and end dates if either or both of those dates are specified. Clicking the Submit Prompt button goes to the prompt submission page with the prompt already selected.</p>"},{"location":"features/prompts/#editing","title":"Editing","text":"<p>This section pertains to the editing of prompt categories and prompts. See the Approval Queue section below for more information on the approval queue.</p>"},{"location":"features/prompts/#categories","title":"Categories","text":"<p>Editing prompt categories and prompts requires the Edit World Data power. Note that this power alone does not allow the user to view and process the submission queue.</p> <p>Prompt categories can be created in the admin panel, with the usual category properties:</p> <ul> <li>Name</li> <li>World Page Image</li> <li>Description (accepts HTML)</li> </ul> <p>The image and description are displayed only on the world page. Besides being used to organise prompts on the prompt submission page, submissions in the approval queue can also be filtered by category, which can be used to help distribute moderation work.</p>"},{"location":"features/prompts/#prompts_1","title":"Prompts","text":"<p>Prompts themselves have the following properties:</p> <ul> <li>Name</li> <li>Prompt Category</li> <li>Summary (no HTML)</li> <li>Description (accepts HTML)</li> <li>Start Time</li> <li>End Time</li> <li>Hide Before Start Time</li> <li>Hide After End Time</li> <li>Is Active</li> <li>Hide Submissions</li> </ul> <p>Name is the prompt name which is displayed on the prompt index.</p> <p>Prompt Category is the category to which the prompt falls under, and used for organisation.</p> <p>Summary is a short blurb about the prompt that is immediately visible on the prompt index. This is intended to be just a concise one-liner that gives users a rough idea of what the prompt is about.</p> <p>Description is a longer description about the prompt. Details and specifications about the prompt requirements can be described in greater detail here. It accepts HTML, so you can insert images.</p> <p>Start Time and End Time note the period during which the prompt can be submitted. Both are optional, and you can also specify only one of them.</p> <p>Hide Before Start Time and Hide After End Time additionally prevent the prompt from showing on the index when it cannot be submitted to. This is useful, for example, if you would like to keep event prompts secret until the event is live.</p> <p>Is Active toggles the visibility of the prompt altogether. This overrides the hiding options - if this is set to not active, the prompt will never show on the index.</p> <p>Hide Submissions controls whether or not submissions to a prompt should be hidden until the prompt's end (if an end date is set) or indefinitely. Staff with the Manage Submissions power will be able to see all submissions regardless of this setting.</p>"},{"location":"features/prompts/#rewards","title":"Rewards","text":"<p>The rewards section allows you to attach some default rewards to the prompt. Users will not be able to edit these rewards during submission.</p> <p>You can attach any of the following, specifying a quantity:</p> <ul> <li>Item</li> <li>Currency</li> <li>Loot table</li> <li>Raffle Ticket</li> </ul> <p>Note that loot table quantity rolls the table x times, and not the rewards from 1 roll multiplied by x. Only the display name of the loot table will be shown - users will not see the internal name of the table, nor the contents/odds of rolling.</p> <p>These rewards are not permanent and can be edited during approval time.</p>"},{"location":"features/prompts/#submission","title":"Submission","text":"<p>Responses to prompts can be submitted from the prompt submission page. A quick link is also available from the submit dropdown on the right hand side of the nav bar.</p> <p>A prompt submission requires:</p> <ul> <li>Prompt</li> <li>Submission URL</li> <li>Comments (no HTML; accepts line breaks)</li> <li>Rewards</li> </ul> <p>Prompt is the prompt that is being responded to. If the submit button on the prompts page is clicked, this field will already have been filled.</p> <p>Submission URL is the link to a page containing the material to be reviewed for prompt submission. This is expected to be something like a gallery submission, but can be anything relevant.</p> <p>Comments are optional. This space could be used for, for example, entering calculations for tiered rewards. Line breaks will be preserved, but HTML will not be rendered.</p>"},{"location":"features/prompts/#rewards_1","title":"Rewards","text":"<p>The rewards section allows the user to select additional rewards. They can choose to add any of:</p> <ul> <li>Items</li> <li>Currencies</li> </ul> <p>Loot tables cannot be selected. This selection is added on top of the default rewards, which are also displayed below the reward selection area.</p>"},{"location":"features/prompts/#characters","title":"Characters","text":"<p>The characters section allows the user to add characters to their submission. Inputs are:</p> <ul> <li>Character Code</li> <li>Rewards</li> </ul> <p>Character Code refers to the character's unique identification code.</p> <p>Rewards function much like the user selected rewards, but only currencies can be selected, and these rewards will be credited directly to the character on approval.</p>"},{"location":"features/prompts/#expanded-rewards","title":"Expanded Rewards","text":"<p>An optional extension toggleable in the extensions config file allows additional reward types to be awarded to characters. These are:</p> <ul> <li>Items</li> <li>Loot Tables</li> </ul> <p>The config file also contains a toggle for how to handle rewards that cannot be held by characters (whether they go to the character's owner or to the submitting user).</p>"},{"location":"features/prompts/#submission_1","title":"Submission","text":"<p>Submissions submitted to the approval queue cannot be edited by the user. The submission will have its own page containing all submitted information - this will not be visible to any users besides the submitter and users with the Manage Submissions power until it is approved. If the prompt is set to not show submissions until the end of the prompt or indefinitely, it will not become visible to other (non-permissioned) users until the prompt ends or the setting is changed, respectively.</p>"},{"location":"features/prompts/#approval-queue","title":"Approval Queue","text":"<p>Users with the Manage Submissions power can view the queue, edit rewards and approve/reject submissions.</p> <p>The prompt approval queue consists of lists of submissions filtered by status, ordered by newest first. Submissions can be further filtered by prompt category. Pending submissions can be acted upon, while approved and rejected submissions are for reference only.</p> <p>Clicking the edit button takes the user to the submission review page, where they can edit the rewards attached to the submission.</p>"},{"location":"features/prompts/#rewards_2","title":"Rewards","text":"<p>The user rewards section lists the combined default rewards and any additional rewards the user may have selected. Please take care when checking that the rewards are appropriate for the submission, as the user may have added something extra! A list of the default rewards is displayed for reference. The selectable area contains everything the user will receive when their submission is approved.</p> <p>The character rewards section lists the characters and rewards the user has added that will be given to the selected characters. More characters can be added as well.</p>"},{"location":"features/prompts/#processing","title":"Processing","text":"<p>The submission can be approved or rejected using the buttons at the bottom. Clicking either will notify the user that their submission has been processed.</p> <p>In the case of approval, any attached rewards will be automatically distributed to the user and characters. The submission page will become publicly visible.</p> <p>In the case of rejection, a comment can be provided to the user. This can be used to inform the user about why their submission was rejected. HTML cannot be used, and the reason will be displayed on the submission page. The submission page remains hidden to users other than staff with the Manage Submissions power and the submitter themselves.</p>"},{"location":"features/prompts/#logging","title":"Logging","text":"<p>A list of prompt/claim submissions a user has made is linked from their user profile. Similarly, characters also have a page that lists prompts/claims they have been submitted for rewards in.</p>"},{"location":"features/prompts/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>Claims</li> </ul>"},{"location":"features/raffles/","title":"Raffles","text":"<p>Raffles can be managed on the site with a feature that tracks tickets and rolls consecutive raffles automatically. They can be edited and rolled in the admin panel by users with the Manage Raffles power.</p>"},{"location":"features/raffles/#usage","title":"Usage","text":"<p>Raffles can be rolled one-by-one, or in groups. When an entire raffle group is rolled, the raffles in the group are rolled in order, and any winners removed from later raffles. Raffles cannot be rerolled, and do not automatically distribute prizes.</p> <p>The raffle page lists all raffles, grouped by raffle groups, with non-grouped raffles at the top of the list. Each raffle can be clicked to view the raffle\u2019s tickets.</p> <p>On the individual raffle page, the raffle name, number of winners, number of tickets and paginated list of tickets are listed. If the user is logged in, they will also see how many tickets they hold, and if winners have been drawn, a table of winners is also displayed.</p> <p>Tickets can be credited to both on-site users as well as deviantART users by username (alias). One user can have multiple tickets; each ticket counts as a single chance in the raffle. Each ticket has an equal chance to be rolled.</p> <p>In the admin panel, when a raffle is clicked, the site will display the tickets entered in the raffle for editing. Tickets are displayed 200 to a page and numbered consecutively. The number is not bound to the ticket and can change when tickets are deleted, so there will not be any skipping of numbers.</p>"},{"location":"features/raffles/#editing","title":"Editing","text":""},{"location":"features/raffles/#raffle-groups","title":"Raffle Groups","text":"<p>Raffle groups have the following properties:</p> <ul> <li>Group Name</li> <li>Active</li> </ul> <p>Group Name is the name of the raffle group. This name does not have to be unique.</p> <p>The Active setting controls if the raffle group is visible to users.</p>"},{"location":"features/raffles/#raffles_1","title":"Raffles","text":"<p>Raffles have the following properties:</p> <ul> <li>Raffle Name</li> <li>Number of Winners to Draw</li> <li>Raffle Group</li> <li>Raffle Order</li> <li>Active</li> </ul> <p>Raffle Name is the name of the raffle. This name does not have to be unique.</p> <p>Number of Winners to Draw is the number of winning tickets to draw. The same user cannot win the same raffle twice. In the event that there are fewer unique users in the raffle than winners drawn, only the number of unique users will be drawn.</p> <p>Raffle Group is the group that the raffle is grouped under.</p> <p>Raffle Order is the order in which the raffle will be drawn, if the raffle is part of a group that will be rolled together. The lower the number, the earlier it will be drawn - e.g. a raffle numbered 1 will be drawn before a raffle numbered 2, and so on.</p> <p>The Active setting controls if the raffle is visible to users.</p>"},{"location":"features/raffles/#adding-tickets","title":"Adding Tickets","text":""},{"location":"features/raffles/#via-the-ticket-index","title":"Via the Ticket Index","text":"<p>The ticket index allows adding tickets with a single text field:</p> <ul> <li>Names</li> </ul> <p>Names should be entered into this field, separated by commas. Spaces will be removed. 1 name counts for 1 ticket, and duplicates of the same name can be entered to give the same user multiple tickets. These names will first be matched to usernames on the site, and if no match is found, it will label the ticket with the deviantART account of that name.</p>"},{"location":"features/raffles/#via-rewards","title":"Via Rewards","text":"<p>Tickets may also be awarded to users as a reward for a prompt or claim submission. A raffle must be active for it to be selected as a potential reward.</p> <p>Additionally, tickets may also be rewarded from Box-type items under the same conditions.</p>"},{"location":"features/raffles/#see-also","title":"See Also","text":"<ul> <li>User Accounts</li> <li>How Random is Random?</li> </ul>"},{"location":"features/randomness/","title":"How Random is Random?","text":"<p>Now... as with any use of RNG in games, users tend to treat distribution of rewards with suspicion, especially if they get a string of bad rolls. I decided it would probably be important to preemptively write this section to discuss the random number generation portion, as the same questions and issues tend to show up, and are often based on having only a partial understanding of random number generation.</p> <p>As a disclaimer: I do not have in-depth knowledge of cryptography and cannot advise in that direction (which is out of the scope of this section, anyway).</p> <p>The generated random numbers are not truly random. The results are predictable, given the right conditions.</p> <p>Fact, but only half of the story.</p> <p>For people to enjoy the game, numbers generated must use 100% cryptographically secure random number generation for fairness.</p> <p>Myth, primarily regarding \"fairness\".</p> <p>From these statements, we can see there are 2 separate issues that people are concerned with:</p> <ol> <li>That users with the technical knowledge may be able to exploit the system to their advantage</li> <li>That the numbers generated are inherently skewed in some way or the other so as to favour certain rolls</li> </ol> <p>Let\u2019s address these by looking at how numbers are rolled.</p>"},{"location":"features/randomness/#how-are-random-numbers-generated","title":"How are random numbers generated?","text":"<p>Lorekeeper uses the built-in PHP function <code>mt_rand()</code> to generate numbers used for rolling rewards. The function uses the Mersenne Twister algorithm to generate numbers\u2026which may be a familiar name if you play competitive Pokemon, as it's also the algorithm used in the game. For those who are unfamiliar: in the older versions of Pokemon, before features to make competitive battling accessible, serious players (and rare Pokemon collectors) would exploit the random number generation in the game to generate Pokemon with the exact stats and shininess they wanted. As you might realise... yes, this theoretically means you could do something similar.</p> <p>There is a very big caveat, though, in that you need to have specific information in order to do it. In a Pokemon game, you have access to the entire game and your own game console. In a game running on someone else\u2019s web server, a lot of the details are out of your reach.</p> <p>Going a bit further into detail: random number generators, surprisingly, are not random. (Thus, they're more accurately called pseudo-random number generators.) An algorithm will always produce the same output given the same input. That\u2019s one of the foundations of mathematics. It's how you can take someone\u2019s Minecraft seed and generate exactly the same world on your computer. That concept, the \u201cseed\u201d is the important part - it\u2019s the input that generates the predictable output, and if you know both the seed and algorithm, you can know the outcome.</p> <p>How difficult is it to find the seed, then? Well, it happens that PHP's code is available online and the question has come up before. The seed value is a function of the current timestamp, the PHP process PID and a value produced by PHP's internal LCG.<sup>1</sup> In simpler terms, anyone looking to exploit this would need 1. to know when exactly the number will be rolled, 2. to know some details that are known only to someone with access to the server/website setup, 3. a certain amount of data. 1 and 2 in particular are going to be unpredictable - the first requires knowing when exactly (to the second) your mods will approve a submission for example, and the second requires being able to run commands on your server (yikes!!!!!) and knowing how your loot tables are set up. Information could be gained from monitoring randomised data to reverse engineer some information about the MT - which, again, will probably tell nothing without knowledge of how the site data is set up.</p> <p>I won't say it's entirely uncrackable - but if you do have someone with that amount of knowledge, determination and time to spend cracking your game, I feel you may have significantly bigger problems than game balance. Effectively speaking, in terms of monetary value of time vs monetary value of potential rewards to be gained, the odds that someone would jump through all these hoops to predict your game's rolls are extremely low.</p>"},{"location":"features/randomness/#fairness-of-rolls","title":"Fairness of Rolls","text":"<p>I don't think the actual issue is that people think the RNG is broken because it keeps rolling the same result. It's probably that it keeps rolling the same negative result. Nevertheless, the uniformity of rolls can be fairly easily verified: rolling a large enough pool of numbers and counting how often each one shows up will yield a spread that shows that none of them are significantly more likely to be rolled than any other.</p> <p>The verification can be done by yourself in simple PHP - roll a million numbers from, say, 0 to 9 and output the counts. Paste this code here for a quick test.</p> <pre><code>$numbers = array_fill(0, 10, 0);\nfor ($i = 0; $i &lt; 1000000; $i++) {\n    $numbers[mt_rand(0, 9)]++;\n}\nforeach($numbers as $number=&gt;$count) {\n    echo \"Rolled {$number}: {$count} times&lt;br /&gt;\";\n}\n</code></pre> <p>Each number will be rolled close to 100000 times. The deviation is not particularly significant, and the significance decreases the more times you roll. On the other hand, the fewer times you roll, the more likely it is that you get results that look skewed.</p> <p>The important thing to note is that someone rolling a bad result 10 times in a row is not indicative of the code being buggy - unlikely as 10 consecutive fails at a 50% rate is, a possibility is still a possibility. That's how probability works - if you roll bad results you're not necessarily due for something good in the near future, but in the big scheme of things, it'll even itself out eventually.</p>"},{"location":"features/randomness/#conclusion","title":"Conclusion","text":"<p>In the context of a small game, for the purposes Lorekeeper was intended for, a cryptographically secure random number generator would not be noticeably better than PHP's built-in, non-cryptographically-secure <code>mt_rand()</code> if at all. Yes, the MT has its failings, and there are a number of very valid points on which it can be considered a \"bad\" pseudo-random number generator. However, just like in social situations, context is important, and in this context none of these points concern 1. your credit card number 2. any perceivable advantage someone may stand to gain in a reasonable amount of time with a reasonable amount of misguided effort. So, for our purposes... yes, the generated results are sufficiently random.</p> <ol> <li> <p>How is PHP's mt_rand seeded? - Stack Overflow \u21a9</p> </li> </ol>"},{"location":"features/rarities/","title":"Rarities","text":"<p>Rarities are a characteristic that is assigned to both traits and characters. They can be edited in the admin panel by users with the Edit World Data power.</p>"},{"location":"features/rarities/#usage","title":"Usage","text":"<p>Rarities are assigned to characters and traits upon creation. Staff can cap the maximum rarity of selectable traits for a MYO slot by selecting a rarity during MYO slot creation, but the rarity of a character is otherwise not strictly linked to its traits.</p> <p>Traits and characters can be filtered by rarity on the world page and masterlist pages respectively.</p>"},{"location":"features/rarities/#editing","title":"Editing","text":"<p>Rarities have the following properties:</p> <ul> <li>Name</li> <li>Colour (hexadecimal code)</li> <li>World Page Image</li> <li>Description (accepts HTML)</li> </ul> <p>Name is the rarity's name.</p> <p>Colour is colour used to represent this rarity. It is used to colour the rarity's name as a visual aid.</p> <p>The World Page Image is shown in the encyclopedia, and nowhere else. As with all encyclopedia images, the recommended size is 200 x 200 pixels, but can be any size.</p> <p>Description is a description of the rarity for the encyclopedia page.</p> <p>Additionally, the hierarchy of rarities can be edited from the Rarities index page. This order affects the display order on the encyclopedia page, and which rarities are considered rarer than others.</p>"},{"location":"features/rarities/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>Traits</li> </ul>"},{"location":"features/reports/","title":"Reports","text":"<p>Reports are a submission type that accepts user content and bug reports into a queue. They can be viewed and processed in the admin panel by users with the Manage Reports power.</p>"},{"location":"features/reports/#submission","title":"Submission","text":"<p>Reports can be submitted from the report submission page. A link to this is also available on the bug report index for logged-in users, and \"report content\" buttons are present on pages with user-submitted content.</p> <p>A report requires:</p> <ul> <li>URL/Title</li> <li>Is/Is Not Bug Report</li> <li>Error Type (if bug report)</li> <li>Comments (no HTML)</li> </ul> <p>URL/Title is a link to the offending content (content report) or a short summary of the bug (bug report).</p> <p>Is/Is Not Bug Report is whether or not the report is a bug report. If this is enabled, an additional field for specifying the type of bug appears.</p> <p>Error Type is the type of error being reported. By default, the options are: 500 error, 404 error, text error, exploit, or other error.</p> <p>Comments are optional. This space can be used to describe/describe in further detail the nature of the report. Line breaks will be preserved, but HTML will not be rendered.</p>"},{"location":"features/reports/#submission_1","title":"Submission","text":"<p>Reports submitted to the queue cannot be edited by the user. The report will have its own page containing all submitted information. </p> <p>A report's visibility depends on its nature; content reports will not be visible to any users besides the submitter and users with the Manage Reports power. Bug reports, however, are listed publicly in the bug report index (to prevent duplicate reports). If an exploit has been reported, however, the report will be hidden until the report is closed (and the issue presumably addressed).</p>"},{"location":"features/reports/#report-queue","title":"Report Queue","text":"<p>Users with the Manage Reports power can view the queue, assign themselves to reports, respond via the comments system, and close reports.</p> <p>The report queue consists of lists of submissions filtered by status, ordered by newest first. Pending reports can be acted upon, while closed reports are for reference only.</p> <p>Clicking the edit button takes the user to the report review page, where they can assign, comment on, or close the report depending on its status.</p>"},{"location":"features/reports/#assigning-reports","title":"Assigning Reports","text":"<p>Newly submitted reports are \"unassigned\"; that is, there is no user assigned to handling them. Any user with the Manage Reports power can assign an unassigned report to themself. This removes the report from the main queue and places it into a special user-specific queue section that displays only the assigned reports for the currently logged-in user, the status of which is reflected on the admin index. Permissioned users may still view all current assigned reports via the queue.</p>"},{"location":"features/reports/#processing","title":"Processing","text":"<p>Open reports can be commented on by staff and user(s). This can be used to communicate with user(s) in order to facilitate addressing the subject of the report.</p> <p>Once the subject of a report is resolved, it can be closed with staff notes as to any pertinent details, such as action taken. Once a report is closed, users will not be able to view comments on the report, though they will remain visible to staff, so any details that should be preserved from comments should be included in the staff notes.</p>"},{"location":"features/reports/#bug-report-index","title":"Bug Report Index","text":"<p>A site's bug reports are listed publicly in its bug report index. This list shows the title of the report, when it was submitted, and its status. This list may be searched by URL or title. Logged-in users may view the details of non-exploit bug reports; exploit reports, however, are hidden until they are closed to prevent abuse.</p>"},{"location":"features/sales/","title":"Sales","text":"<p>Sales are a form of text post that can be used to alert all users to on-site sales, i.e. of adoptables. They can be edited in the admin panel by users with the Edit Text Pages power.</p>"},{"location":"features/sales/#usage","title":"Usage","text":"<p>Sales posts can be created in the admin panel and viewed on the sales page. The sales page lists sales posts ordered by newest first. When a new post is made, all users will gain an alert at the top of every page notifying them of the new post. This alert disappears when the sales page is viewed.</p> <p>Sales posts can be scheduled to post at certain times. Note that this posting is handled via crontab scheduling, and therefore may not be entirely accurate to the minute.</p>"},{"location":"features/sales/#editing","title":"Editing","text":"<p>Sales posts have the following properties:</p> <ul> <li>Title</li> <li>Post Time</li> <li>Post Content (accepts HTML)</li> <li>Is Open</li> <li>Comments Open At</li> </ul> <p>Title is the title of the sales post.</p> <p>Post Time is optional, and schedules the post to be posted after a certain date/time. If not set, the sales post will be posted immediately.</p> <p>Post Content is the content of the sales post itself. HTML is allowed. The File Manager can be used to upload images to be inserted into sales posts if desired.</p> <p>Is Open controls whether the sales post is labeled (in the title) as \"Open\" or \"Closed\". This is entirely cosmetic. If Comments Open At is set and in the future, and the post is set as open, the the sales post will be labeled \"Preview\" instead of \"Open\".</p> <p>Comments Open At is optional, and schedules when comments on the post become visible to users. If this is set, comments on the post will be hidden from users without editing permissions until the set time. Users with permissions, meanwhile, can see comments and may perform any needed set-up for a sale.</p>"},{"location":"features/sales/#characters","title":"Characters","text":"<p>Characters can also be attached to sales posts, allowing for easy formatting and display of per-character sale information.</p> <p>Characters attached to sales have the following properties:</p> <ul> <li>Character Code</li> <li>Sale Type &amp; Associated Information</li> <li>Notes (no HTML)</li> <li>Link</li> <li>Is Open</li> </ul> <p>Character Code refers to the character's unique identification code.</p> <p>Sale Type allows the selection of the type of sale. The available options are:</p> <ul> <li>Flatsale</li> <li>Auction</li> <li>OTA</li> <li>XTA</li> <li>Raffle</li> <li>Flatsale Raffle</li> <li>Pay What You Want</li> </ul> <p>Field(s) for additional information appropriate to the sale type become available on selection of a sale type. These are:</p> <ul> <li>Flatsale: Price</li> <li>Auction: Starting Bid, Minimum Increment, Autobuy (optional), End Point (optional)</li> <li>OTA/XTA: Autobuy (optional), End Point (optional), Minimum Offer (optional)</li> <li>Pay What You Want: Minimum Offer (optional)</li> </ul> <p>Notes are optional; any brief notes about the character that are useful to display can be entered here.</p> <p>The Link is optional; the link to  where the character may be bought, bid on, etc.</p> <p>Is Open controls whether or not the individual character sale is displayed as open. Characters can be set closed independent of the sales post if it is open, but if the overall sales post is set closed, all characters attached are displayed as closed. This is wholly cosmetic.</p> <p>Sales posts with attached characters are divided into separate sections (header, followed by character(s), followed by the standard body of the sales post). Each attached character is displayed in its own section, with sale type and info alongside info about the character, such as species and rarity. In the interest of archival, the character's first available/visible image is used in the event that a character receives design update(s) after being sold. If there is only one character associated with a sales post, the full image rather than thumbnail is displayed as well as the character's traits.</p>"},{"location":"features/sales/#see-also","title":"See Also","text":"<ul> <li>News</li> <li>Site Pages</li> <li>Characters</li> </ul>"},{"location":"features/shops/","title":"Shops","text":"<p>Shops are pages from which users can spend currency to purchase items. They can be edited in the admin panel by users with the Edit World Data power.</p>"},{"location":"features/shops/#usage","title":"Usage","text":"<p>Shops listed on the shop index can be clicked to view the shop's contents, including the shop image, flavour text and shop stock.</p> <p>Shop stock is categorised by the items' item categories. Each item lists:</p> <ul> <li>Item name</li> <li>Cost and currency</li> <li>Available stock (if applicable)</li> <li>Purchase limit (if applicable)</li> </ul> <p>Note that items with 0 stock are still listed in the shop.</p> <p>Clicking on the item brings up the purchase modal. If the item can be purchased, the user is given the option to purchase the item.</p> <p>The option to use the user's bank or a character's bank may be provided. In the latter case, a character's code (must be owned by the user) can be entered, and currency will be deducted from the character's bank instead. The item is deposited in the user's inventory, and the code of the purchasing character is noted in the item's source information. This makes it possible, for example, to have users purchase items for design updates that must be used specifically on the character that purchased it.</p> <p>A purchase log is available for every user, linked in the shops sidebar, as a quick reference for their own recent purchases.</p>"},{"location":"features/shops/#editing","title":"Editing","text":"<p>Shops have the following properties:</p> <ul> <li>Name</li> <li>Shop Image</li> <li>Description (accepts HTML)</li> <li>Set Active</li> </ul> <p>Name is the name of the shop, as shown in the shop index and on the shop's page.</p> <p>The Shop Image is the image used to represent the shop on the shop index and is also displayed at the top of the shop's page.</p> <p>Description is displayed underneath the shop image on the shop's page. It can be used, for example, to provide helpful information about the shop, or add additional flavour text.</p> <p>Set Active affects whether or not the shop is visible on the shop index. If set to false, it will not be shown on the shop index and cannot be accessed by anyone.</p> <p>Shop display order can be edited on the admin panel shop index page.</p>"},{"location":"features/shops/#shop-stock","title":"Shop Stock","text":"<p>Shop stock is editable after a shop is created. Each shop stock has the following properties:</p> <ul> <li>Item</li> <li>Cost (quantity and currency)</li> <li>Use User Bank</li> <li>Use Character Bank</li> <li>Set Limited Stock<ul> <li>Quantity</li> </ul> </li> <li>User Purchase Limit</li> </ul> <p>Item is the item to be sold. Only items can be sold in shops.</p> <p>Cost is the price of the item. A value and currency must be selected.</p> <p>Use User Bank and Use Character Bank determine if the user has the option to use either for purchase. For the item to be purchasable, the bank type has to correspond to whether users and/or characters can own that currency. (e.g. If a user cannot own the currency but only \"Use User Bank\" is enabled, the item cannot be purchased at all from the shop.)</p> <p>Set Limited Stock and Quantity allows only a specific amount of the item to be made available for purchase. The quantity will go down as items are purchased from the shop. As mentioned above, items with 0 quantity will still be displayed in the shop as an indicator that the item was purchased, but is now sold out. If limited stock is not enabled, the item will have infinite stock.</p> <p>User Purchase Limit limits the number of that stock the user can purchase from that particular shop. The limit cannot be circumvented - even if the stock record is deleted and the item is re-added to the shop, the limit still applies. However, if the same item is added to a different shop, it can be purchased.</p>"},{"location":"features/shops/#see-also","title":"See Also","text":"<ul> <li>Items</li> <li>Currencies</li> </ul>"},{"location":"features/site-images/","title":"Site Images","text":"<p>Site Images is a feature in the admin panel that is used to replace the images used in the site layout. It also provides an upload for a CSS file that can be used to insert CSS into the site layout without editing the site code directly. This page can be used by users with the Edit Site Settings power.</p>"},{"location":"features/site-images/#usage","title":"Usage","text":"<p>The Site Images page provides uploads for the following images:</p> <ul> <li>Header Image</li> <li>Characters Icon</li> <li>Account Icon</li> <li>Inventory Icon</li> <li>Currency Icon</li> <li>MYO Default Image</li> <li>MYO Default Image (Thumbnail)</li> <li>Meta Tag Image</li> <li>Watermark Image</li> <li>Content Warning Image</li> </ul> <p>Header Image: The header banner displayed at the top of the page. PNG format, default height of 200px. Tiles in both directions.</p> <p>Characters Icon: The characters graphic on the front page. PNG format, default size of 200px x 200px (no restriction).</p> <p>Account Icon: The account graphic on the front page. PNG format, default size of 200px x 200px (no restriction).</p> <p>Inventory Icon: The inventory graphic on the front page. PNG format, default size of 200px x 200px (no restriction).</p> <p>Currency Icon: The bank graphic on the front page. PNG format, default size of 200px x 200px (no restriction).</p> <p>MYO Default Image: The default image used for MYO slots when no image is uploaded. PNG format, no size restriction.</p> <p>MYO Default Image (Thumbnail): The default masterlist thumbnail used for MYO slots when no image is uploaded. PNG format, size of masterlist thumbnails.</p> <p>Meta Tag Image: The image displayed in meta tag previews on social media, discord, and the like. PNG format, no size restriction.</p> <p>Watermark Image: Watermark for applying to character images (if enabled).</p> <p>Content Warning Image: Thumbnail used for gallery submissions with a set content warning. PNG format, size of masterlist thumbnails.</p> <p>Additionally, there is an upload under the heading Site CSS. This file will be included after all other CSS files that are added to the page. Reuploading the file will replace the original.</p>"},{"location":"features/site-images/#editing","title":"Editing","text":"<p>A single upload is presented for each. The \"View Current\" button can be clicked to visit the URL of the file, though previews of each image are given next to each field.</p> <p>On the command line, the following command can be run to overwrite uploaded images with the default ones. This command also works to copy default images over when none are present.</p> <pre><code>php artisan copy-default-images\n</code></pre> <p>Maximum image file sizes are subject to as specified in <code>php.ini</code> on your server - if your image is failing to upload, it may be too large. (Large images are not recommended either, as this will consume large amounts of bandwidth on each page load.)</p>"},{"location":"features/site-images/#see-also","title":"See Also","text":"<ul> <li>Site Settings</li> <li>File Manager</li> </ul>"},{"location":"features/site-pages/","title":"Site Pages","text":"<p>Site pages are dynamically created pages that can be created and edited in the admin panel (requires the Edit Pages power).</p>"},{"location":"features/site-pages/#editing","title":"Editing","text":"<p>Pages require a title, unique key, content and viewable setting. Each page can be accessed from <code>(site-url)/info/{key}</code>, which displays the title, date of creation, date of last update and content, assuming that the page is set to viewable.</p> <p>Page content can contain HTML, but cannot contain Javascript.</p>"},{"location":"features/site-pages/#default-pages","title":"Default Pages","text":"<p>A few default pages are added during setup. These pages cannot be deleted, but are otherwise editable the same way (title and key can be edited).</p> <p>These pages are:</p> <ul> <li>About</li> <li>Privacy Policy</li> <li>Terms of Service</li> <li>Credits</li> </ul>"},{"location":"features/site-pages/#see-also","title":"See Also","text":"<ul> <li>Site Settings</li> <li>News</li> </ul>"},{"location":"features/site-settings/","title":"Site Settings","text":"<p>Site settings are editable in the admin panel (requires the Edit Site Settings power).</p>"},{"location":"features/site-settings/#settings","title":"Settings","text":"<p>These are the site settings that are added by default during setup.</p>"},{"location":"features/site-settings/#admin_user","title":"admin_user","text":"<p>By default, this is used to direct notifications for comments on site pages to an account. Extensions may also use this setting. It's recommended that this correspond to the ID of an account that is not used by any one person and is solely for administrative purposes.</p> <p>Default: 1</p>"},{"location":"features/site-settings/#blacklist_key","title":"blacklist_key","text":"<p>Optional key to view the blacklist. Enter \"0\" to not require one.</p> <p>Default value: 0</p> <p>Info</p> <p>This is a password for the blacklist page (if the page is made available for viewing). Note that this is not a very secure method of protecting the blacklist, and is primarily intended for temporary use.</p>"},{"location":"features/site-settings/#blacklist_link","title":"blacklist_link","text":"<p>0: No link to the blacklist is displayed anywhere, 1: Link to the blacklist is shown on the user list.</p> <p>Default value: 1</p>"},{"location":"features/site-settings/#blacklist_privacy","title":"blacklist_privacy","text":"<p>Who can view the blacklist? 0: Admin only, 1: Staff only, 2: Members only, 3: Public.</p> <p>Default value: 1</p>"},{"location":"features/site-settings/#design_votes_needed","title":"design_votes_needed","text":"<p>The number of votes needed for consensus on a design update.</p> <p>Default: 3</p>"},{"location":"features/site-settings/#gallery_submissions_open","title":"gallery_submissions_open","text":"<p>Whether or not gallery submissions are open globally.</p> <p>Default: 1</p>"},{"location":"features/site-settings/#gallery_submissions_require_approval","title":"gallery_submissions_require_approval","text":"<p>Whether or not gallery submissions require approval.</p> <p>Default: 1</p>"},{"location":"features/site-settings/#gallery_submissions_reward_currency","title":"gallery_submissions_reward_currency","text":"<p>Whether or not gallery submissions reward currency.</p> <p>Default: 0</p>"},{"location":"features/site-settings/#group_currency","title":"group_currency","text":"<p>ID of the group currency used for gallery submission rewards, if enabled.</p> <p>Default: 1</p>"},{"location":"features/site-settings/#is_claims_open","title":"is_claims_open","text":"<p>0: New claims cannot be made (mods can work on the queue still), 1: Claims are submittable.</p> <p>Default value: 1</p>"},{"location":"features/site-settings/#is_design_updates_open","title":"is_design_updates_open","text":"<p>0: Characters cannot be submitted for design update approval, 1: Characters can be submitted for design update approval.</p> <p>Default value: 1</p>"},{"location":"features/site-settings/#is_myos_open","title":"is_myos_open","text":"<p>0: MYO slots cannot be submitted for design approval, 1: MYO slots can be submitted for approval.</p> <p>Default value: 1</p>"},{"location":"features/site-settings/#is_prompts_open","title":"is_prompts_open","text":"<p>0: New prompt submissions cannot be made (mods can work on the queue still), 1: Prompts are submittable.</p> <p>Default value: 1</p>"},{"location":"features/site-settings/#is_registration_open","title":"is_registration_open","text":"<p>0: Registration closed, 1: Registration open. When registration is closed, invitation keys can still be used to register.</p> <p>Default value: 1</p>"},{"location":"features/site-settings/#is_reports_open","title":"is_reports_open","text":"<p>0: New reports cannot be made (mods can work on the queue still), 1: Reports are open.</p> <p>Default: 1</p>"},{"location":"features/site-settings/#open_transfers_queue","title":"open_transfers_queue","text":"<p>0: Character transfers do not need mod approval, 1: Transfers must be approved by a mod.</p> <p>Default value: 1</p> <p>Info</p> <p>If set to 1, transfers and trades will go through the usual mutual acknowledge/accept process, then get placed into a transfer queue where staff can review the transfer. This also allows staff to edit the transfer cooldown periods of transferred characters.</p>"},{"location":"features/site-settings/#prompt_reward_editing","title":"prompt_reward_editing","text":"<p>0: Only mods can edit default prompt rewards for a submission, 1: Users can modify rewards at time of submission.</p> <p>Default value: 0</p>"},{"location":"features/site-settings/#transfer_cooldown","title":"transfer_cooldown","text":"<p>Number of days to add to the cooldown timer when a character is transferred.</p> <p>Default value: 3</p> <p>Info</p> <p>Note that in circumstances where a staff member has to officiate a transfer, the staff member will still be able to manually edit the cooldown applied in that case (the transfer cooldown is filled in automatically for convenience). This value primarily applies in situations where users transfer characters without requiring approval.</p>"},{"location":"features/site-settings/#see-also","title":"See Also","text":"<ul> <li>Config Files</li> </ul>"},{"location":"features/species/","title":"Species","text":"<p>Species are used to categorise characters. Subtypes are subcategories of species that can optionally be assigned to characters as well. They can be edited in the admin panel by users with the Edit World Data power.</p>"},{"location":"features/species/#usage","title":"Usage","text":"<p>Species and subtypes are assigned to characters upon creation. Staff can fix the species and subtype for a MYO slot by selecting a species during MYO slot creation. Additionally, traits may also be made assignable to a specific species only. Subtypes do not impose any restrictions on trait selection and are mainly cosmetic.</p> <p>Traits and characters can be filtered by species on the world page and masterlist pages respectively.</p>"},{"location":"features/species/#editing","title":"Editing","text":"<p>Species have the following properties:</p> <ul> <li>Name</li> <li>World Page Image</li> <li>Description (accepts HTML)</li> </ul> <p>Name is the species's name.</p> <p>The World Page Image is shown in the encyclopedia, and nowhere else. As with all encyclopedia images, the recommended size is 200 x 200 pixels, but can be any size.</p> <p>Description is a description of the species for the encyclopedia page.</p> <p>Additionally, the sort order of species can be edited from the Species index page. This order affects the display order on the encyclopedia page.</p>"},{"location":"features/species/#subtypes","title":"Subtypes","text":"<p>Subtypes have the same properties, but additionally:</p> <ul> <li>Species</li> </ul> <p>The Species is required, but species do not need to have subtypes.</p>"},{"location":"features/species/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>Traits</li> </ul>"},{"location":"features/trades/","title":"Trades","text":"<p>Trades are a method of securely transferring resources between 2 different user accounts.</p>"},{"location":"features/trades/#usage","title":"Usage","text":"<p>Current and past trades can be viewed by clicking \"Trades\" in the Activity menu. Trades can be created by clicking the New Trade button.</p> <p>Each trade on the index lists the trade's status, sender's comment, each user's offer and the confirmation status. Only the two users involved as well as users with the Manage Masterlist power (as character transfers need to be able to be monitored) are able to view incomplete trades.</p> <p>When a trade is completed and does not contain any characters, the assets will automatically be deposited into the other user's account. If the trade contains any characters, and the <code>open_transfers_queue</code> site setting is set to 1, the trade will go into the transfers queue for approval. Otherwise, it will also complete automatically. Please see the Characters article for more information on transfers.</p> <p>Completed transfers can be viewed by any user. Cancelled and rejected transfers do not become visible to other users.</p>"},{"location":"features/trades/#flow","title":"Flow","text":""},{"location":"features/trades/#trade-creation","title":"Trade Creation","text":"<p>Clicking on the New Trade button allows a user to initiate a trade with another user. The options are:</p> <ul> <li>Recipient</li> <li>Comments (Optional; no HTML, linebreaks are honoured)</li> <li>(Asset Selection)</li> </ul> <p>The Recipient must be a registered user of the site.</p> <p>Comments is a section where the sender can write a small note to the recipient. This can be used for stating the purpose of the trade.</p> <p>Asset Selection comprises of 3 sections for selecting items from inventory, characters, and/or currency. Characters that cannot be transferred (cannot be gifted/traded/sold) are By default, a maximum of 20 things can be attached to one trade - this maximum can be edited in the config files, however, it is recommended that this limit be kept low.</p>"},{"location":"features/trades/#open-trade","title":"Open Trade","text":"<p>In an open trade, each user is able to view both sides of the offer and edit/confirm their own offer. Both users must confirm their own offer, and then the entire trade after both offers have been confirmed, so that neither user is caught off-guard.</p> <ol> <li>A edits A's offer and confirms. B edits B's offer and confirms.</li> <li>A looks at A and B's offers and confirms trade. B looks at A and B's offer and confirms trade.</li> <li>Trade is completed.</li> </ol> <p>Offers can be unconfirmed if a user wants to change their offer. If a user wants to change their offer after the other user has confirmed the entire trade, the second user has to reconfirm after the first is done editing.</p> <p>At this stage, the trade can be cancelled at any time. After the trade has been confirmed by both parties, it cannot be withdrawn.</p>"},{"location":"features/trades/#approval","title":"Approval","text":"<p>Approval is only required if the transfers queue is open and the trade contains at least one character. After confirmation, the trade will enter the transfers queue and be processed when approved by staff.</p>"},{"location":"features/trades/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>User Accounts</li> <li>Items</li> <li>Currencies</li> </ul>"},{"location":"features/traits/","title":"Traits","text":"<p>Traits are used as add-ons to characters that describe their unique features. They can be edited in the admin panel by users with the Edit World Data power.</p>"},{"location":"features/traits/#usage","title":"Usage","text":"<p>Traits and trait categories can be created in the admin panel, with the option of restricting them to certain species. Once created, they can be attached to characters and MYO slots.</p> <p>The character and MYO slot masterlist pages contain options to filter characters by a trait or combination of traits.</p> <p>Note that in the code, traits are named \"features\" instead as \"trait\" is a reserved keyword in PHP.</p>"},{"location":"features/traits/#editing","title":"Editing","text":""},{"location":"features/traits/#categories","title":"Categories","text":"<p>Editing trait categories and traits requires the Edit World Data power.</p> <p>Trait categories can be created in the admin panel, with the usual category properties:</p> <ul> <li>Name</li> <li>World Page Image</li> <li>Description (accepts HTML)</li> </ul> <p>The image and description are displayed only on the world page. Categories are optional, but allow traits to be listed in a controllable order on the character's page.</p>"},{"location":"features/traits/#traits_1","title":"Traits","text":"<p>Traits themselves have the following properties:</p> <ul> <li>Name</li> <li>Rarity</li> <li>World Page Image</li> <li>Trait Category</li> <li>Species Restriction</li> <li>Description (accepts HTML)</li> </ul> <p>Name is the trait name which is displayed on the trait index.</p> <p>Rarity is the rarity of the trait. While this is mostly cosmetic, a rarity cap can be set on MYO slots - users will only be able to submit the slot for approval with traits equal or lower to that rarity.</p> <p>The World Page Image is shown in the encyclopedia, and nowhere else. As with all encyclopedia images, the recommended size is 200 x 200 pixels, but can be any size. It is recommended to use a simple thumbnail image for this image, and elaborate on trait restrictions, reference images etc. in the description area.</p> <p>Trait Category is the category to which the trait falls under, and used for organisation. It is otherwise optional.</p> <p>Species Restriction sets the trait to only be available for that particular species, and is optional.</p> <p>Description is a description of the trait for the encyclopedia page.</p>"},{"location":"features/traits/#see-also","title":"See Also","text":"<ul> <li>Characters</li> <li>MYO Slots</li> </ul>"},{"location":"features/user-accounts/","title":"User Accounts","text":"<p>User accounts are required to use most of the site's features, including participation through prompt submissions and managing owned characters. User data can be edited in the admin panel by users of a rank with the Manage Users power.</p>"},{"location":"features/user-accounts/#registration","title":"Registration","text":"<p>Users are able to register accounts by clicking on the Register button on the right side of the navigation bar when logged out. The name and e-mail address must be unique. An invitation key is required if the site is not open to new user signups.</p> <p>New user accounts will always have FTO status on registration.</p>"},{"location":"features/user-accounts/#verification","title":"Verification","text":"<p>After a new account has been created, users need to verify their identity by linking a social media or other platform (by default deviantArt) account to their site user account. They will not be able to use any other parts of the site until this process has been completed. Associated accounts' usernames are also referred to as the user's \"aliases\". Upon linkage, any characters that were previously credited an alias will be credited to the account immediately. This will also update their FTO status.</p> <p>Users have a \"primary\" alias, which is always visible and is displayed on their profile, similar to the previous system. Users may also have multiple non-primary aliases. These may or may not be visible to other users, as set by the user. Which sites may or may not be used for authentication and/or as primary aliases can be configured in the sites config file. Users may link and unlink additional accounts from any site(s) enabled at will so long as they retain a primary alias.</p> <p>In the user admin panel, aliases cannot be changed directly but can be unlinked. Unlinking a user's primary alias will require the user to link an account again to regain access to their account features.</p>"},{"location":"features/user-accounts/#profile","title":"Profile","text":"<p>Each user has a profile page, which lists their name, rank, join date, FTO status and other details. A summary of currencies, newest items in their inventory as well as their characters are displayed on the lower half of the page. Users have an HTML-compatible section of their page that they can edit from their user settings.</p> <p>This profile page will also display an alert if the user has been banned.</p> <p>From the main profile page, the sidebar includes links to logs of player activity, a list of their current aliases, as well as their characters, bank, and inventory.</p> <p>Also included are links to the user's gallery-- automatically populated with any gallery submissions the user has made and/or collaborated on-- as well as to a list of gallery submissions the user has favourited and a special version of this page listing only favourites that also have one or more of the user's characters attached.</p>"},{"location":"features/user-accounts/#fto-status","title":"FTO Status","text":"<p>This is a purely cosmetic status that adds a badge to the user's profile. Users are considered FTOs if they have had no logs of character ownership. This can be edited in the user admin panel manually.</p> <p>MYO slots do not remove FTO status until they are submitted for design approval and successfully approved.</p>"},{"location":"features/user-accounts/#logs","title":"Logs","text":"<p>Logs for the following are accessible from the user's profile:</p> <ul> <li>Ownership history - logs the characters that the user has sent/received</li> <li>Item logs - logs the items that the user has used/sent/received</li> <li>Currency logs - logs the currencies that the user has used/sent/received</li> <li>Prompt submissions - logs the submissions that the user has submitted (only approved submissions)</li> </ul>"},{"location":"features/user-accounts/#bans","title":"Bans","text":"<p>Users can be banned from the admin panel. This still allows them to log in, but they can no longer participate in site activities and/or transfer assets to/from other users.</p> <p>Banning causes a few things to happen immediately:</p> <ul> <li>Pending character transfers to/from the user are cancelled</li> <li>Pending gallery submissions from the user are rejected</li> <li>Pending prompt submissions and claims from the user are rejected</li> <li>Pending design update approvals/MYO approvals from the user are rejected</li> <li>Pending trades involving the user are rejected</li> <li>The user's rank is downgraded to the lowest possible rank</li> </ul> <p>A ban reason can be attached to a ban. This is visible on the site's blacklist, although it is not listed directly on the user's profile.</p>"},{"location":"features/user-accounts/#see-also","title":"See Also","text":"<ul> <li>User Ranks</li> <li>Characters</li> </ul>"},{"location":"features/user-ranks/","title":"User Ranks","text":"<p>Ranks are assigned to users to manage their access to various parts of the site.</p>"},{"location":"features/user-ranks/#effects","title":"Effects","text":"<p>Ranks have a name, description, colour, and can have any number (or none) of specific powers that restrict access to different parts of the admin panel. Users without the appropriate power will not be able to view certain admin pages/carry out certain actions. By default, the member rank has no powers, and therefore cannot access the admin panel at all. The colour assigned to a rank will be applied to the usernames of users of that rank.</p> <p>The exception is the admin rank, which is created during setup. The admin rank cannot be deleted, its powers cannot be removed, and additionally has exclusive access to certain parts of the admin panel.</p>"},{"location":"features/user-ranks/#powers","title":"Powers","text":"<p>Here is a complete list of powers and their descriptions.</p>"},{"location":"features/user-ranks/#edit-site-settings","title":"Edit Site Settings","text":"<p>Allow rank to modify site settings and upload new images to replace the site layout images.</p>"},{"location":"features/user-ranks/#edit-world-data","title":"Edit World Data","text":"<p>Allow rank to modify the world data. This includes creating/editing/uploading images for species, items, traits, etc.</p>"},{"location":"features/user-ranks/#edit-text-pages","title":"Edit Text Pages","text":"<p>Allow rank to create/modify text pages. This includes pages created using the page creator tool and news posts.</p>"},{"location":"features/user-ranks/#manage-users","title":"Manage Users","text":"<p>Allow rank to view/modify user account info and create invitation keys. This will grant access to the user admin panel.</p>"},{"location":"features/user-ranks/#edit-ranks","title":"Edit Ranks","text":"<p>Allow rank to change the rank of a user. This power requires the Edit User Info power to be attached as well.</p>"},{"location":"features/user-ranks/#edit-inventories","title":"Edit Inventories","text":"<p>Allow rank to grant and remove items from user inventories, as well as grant/remove currency from users and characters.</p>"},{"location":"features/user-ranks/#manage-masterlist","title":"Manage Masterlist","text":"<p>Allow rank to create/edit new characters. This includes uploading new images, modifying traits on an existing character and forcing ownership transfers.</p>"},{"location":"features/user-ranks/#manage-raffles","title":"Manage Raffles","text":"<p>Allow rank to create/edit raffles, add/remove tickets for users and roll raffles.</p>"},{"location":"features/user-ranks/#manage-submissions","title":"Manage Submissions","text":"<p>Allow rank to view the submissions queue, edit rewards attached to a submission and approve/reject them.</p>"},{"location":"features/user-ranks/#manage-reports","title":"Manage Reports","text":"<p>Allow rank to view the reports queue and process reports.</p>"},{"location":"features/user-ranks/#editing","title":"Editing","text":"<p>Ranks can be edited in the admin panel. Only the admin rank is able to edit ranks - this is not an assignable power.</p> <p>Ranks can also be sorted - users will be sorted according to rank on the User Index, starting with the admin rank at the top. Lower ranks are also considered \"weaker\" than higher ranks - given 2 ranks that both have the Edit Ranks power, a lower-ranked user will not be able to edit the rank of the higher-ranked one.</p> <p>The ranks of individual users can be assigned from the user admin panel.</p>"},{"location":"features/user-ranks/#admin","title":"Admin","text":"<p>As mentioned above, the admin account has special access to certain pages and actions.</p> <p>These include:</p> <ul> <li>User rank editing</li> <li>Viewing the blacklist when set to the greatest privacy level</li> </ul>"},{"location":"features/user-ranks/#see-also","title":"See Also","text":"<ul> <li>User Accounts</li> <li>Site Settings</li> </ul>"},{"location":"guides/creating-item-types/","title":"Tutorial: Creating Item Types","text":"<p>This is a tutorial on how to add new item types (item tags). Throughout the tutorial, I will also walk through the creation of the Box item type in the blue boxes, which was also implemented using this method.</p> <p>Following along with the 'box' item type...</p> <p>First, let's define what a box type item is/does:</p> <ul> <li>A box is an \"openable\" item. This item can be used from the inventory and will give the user a set of assets (can be defined in the admin panel), and delete the original item.</li> <li>Assets can be items, currency or loot tables. Loot tables will be rolled. Multiple assets of various quantities can be attached in the admin panel.</li> </ul>"},{"location":"guides/creating-item-types/#1-add-item-type-to-the-config-file","title":"1. Add item type to the config file","text":"<p>Find the config file: <code>config/lorekeeper/item_tags.php</code></p> <p>Add a row inside the array, in the format:</p> <pre><code>'tag_name' =&gt; [\n    'name' =&gt; 'Tag Name',\n    'text_color' =&gt; '#000000',\n    'background_color' =&gt; '#000000'\n],\n</code></pre> <p>Where <code>text_color</code> and <code>background_color</code> are hexadecimal colour codes excluding the <code>#</code>. These colours will be used in displaying the tag label.</p> <p>Replace <code>tag_name</code> and <code>Tag Name</code> as well, following those capitalisation/punctuation rules.</p> <p><code>tag_name</code> must be a unique key (all small letters, underscores instead of spaces), but <code>Tag Name</code> (any capitalisation, any formatting) does not have to be. The latter will be used in displaying tag names on user-facing pages.</p> <p>Following along with the 'box' item type...</p> <p>Adding our box item type, which will be an orange tag label with white text.</p> <pre><code>'box' =&gt; [\n    'name' =&gt; 'Box',\n    'text_color' =&gt; '#ffffff',\n    'background_color' =&gt; '#f6993f'\n],\n</code></pre>"},{"location":"guides/creating-item-types/#2-add-a-service-class-for-the-item-tag","title":"2. Add a service class for the item tag","text":"<p>This class will help us process the data and get relevant information for our form.</p> <p>Create a file called <code>[ItemTag]Service.php</code> in <code>app/Services/Item</code>. The capitalisation is important!</p> <p>These are the required functions:</p> <ul> <li><code>getEditData()</code> - Retrieves any data that you need for your editing form. Should return an array, and can be accessed from the tag using $tag-&gt;getEditData().</li> <li><code>getTagData($tag)</code> - Does some custom processing and returns tag data in an appropriate format for your needs. Can be accessed from the tag using $tag-&gt;getData(). This is not strictly necessary if you don't use it, but allows you to implement some custom handling.</li> <li><code>updateData($tag, $data)</code> - Handles updating of the tag's data in the admin panel. Add your custom processing here.</li> <li><code>act($stack, $user, $data)</code> - Handles what happens when a user uses the item.</li> </ul> Here is a blank template for the file: <pre><code>&lt;?php namespace App\\Services\\Item;\n\nuse App\\Services\\Service;\n\nclass CustomService extends Service\n{\n    /**\n     * Retrieves any data that should be used in the item tag editing form.\n     *\n     * @return array\n     */\n    public function getEditData()\n    {\n        return [];\n    }\n\n    /**\n     * Processes the data attribute of the tag and returns it in the preferred format.\n     *\n     * @param  string  $tag\n     * @return mixed\n     */\n    public function getTagData($tag)\n    {\n        return [];\n    }\n\n    /**\n     * Processes the data attribute of the tag and returns it in the preferred format.\n     *\n     * @param  string  $tag\n     * @param  array   $data\n     * @return bool\n     */\n    public function updateData($tag, $data)\n    {\n        return true;\n    }\n\n    /**\n     * Acts upon the item when used from the inventory.\n     *\n     * @param  \\App\\Models\\User\\UserItem  $stack\n     * @param  \\App\\Models\\User\\User      $user\n     * @param  array                      $data\n     * @return bool\n     */\n    public function act($stack, $user, $data)\n    {\n        return true;\n    }\n}\n</code></pre> <p>You can also add any additional functions that you may need in order to process the data.</p> <p>Following along with the 'box' item type...</p> <p>As we haven't started creating the form, we probably aren't entirely sure what data we'll need at this point, so we will just create <code>app/Services/Item/BoxService.php</code> for now and move on to the next step.</p>"},{"location":"guides/creating-item-types/#3-add-item-tag-settings-editing-to-the-admin-panel","title":"3. Add item tag settings editing to the admin panel","text":"<p>We need to create a form in the admin panel so we can edit the item data.</p> <p>Go to the admin panel for the item you want to tag (<code>your-site-url.com/admin/data/items/edit/[item_id]</code>), and add the item tag you want to edit in the Item Tags section. Doing so should bring you to the tag settings page, but only the \"Active\" toggle will be visible. If you only want this tag to be cosmetic, you can stop here.</p> <p>Add a new file in <code>resources/views/admin/items/tags</code> named <code>[tag_name].blade.php</code>, where <code>[tag_name]</code> is as you specified in the config file (no square brackets). This will contain the form HTML for our other fields.</p> <p>A few other optional sections can be added to allow you to insert data into the page in various locations.</p> <ul> <li>If you're using Javascript, make a new file in <code>resources/views/js/admin_items</code> with the same file name as above and include script tags when writing your Javascript.</li> <li>Files can be added in <code>resources/views/admin/items/tags</code> named <code>[tag_name]_pre.blade.php</code> and <code>[tag_name]_post.blade.php</code>. These add content before and after the form respectively, so any form elements in these sections will not be sent along with the rest of the data.</li> </ul> <p>Following along with the 'box' item type...</p> <p>We'll add 3 files:</p> <ul> <li><code>box.blade.php</code> in <code>resources/views/admin/items/tags</code></li> <li><code>box_post.blade.php</code> in <code>resources/views/admin/items/tags</code></li> <li><code>box.blade.php</code> in <code>resources/views/js/admin_items</code></li> </ul> <p>As they rely heavily on pre-existing code, I would recommend going through the files to see how they're set up.</p> <p>These contain the code that will allow us to select assets using Javascript. The code in these files is fairly simple as I've made selectors that are easy to include.</p> <p>However, for the select inputs, we need to be able to retrieve the item/currency/loot table data to fill them out, so we'll do that in <code>BoxService</code>:</p> <ul> <li>In <code>getEditData()</code>, we add the code to retrieve our dropdown data. This makes it possible to select assets from the form.</li> <li>In <code>getTagData()</code>, we take the data attribute of the tag and format it so that our item/currency/loot table selection code can read it and show us what we've already put in the box.</li> <li>In <code>updateData($tag, $data)</code>, we add the code that processes the data from the admin panel. This is where we handle the saving of what goes into the box.</li> <li>In <code>act($stack, $user, $data)</code>, we add the code for distributing the box's contents and deleting the item from the user's inventory. This will be handled later.</li> </ul>"},{"location":"guides/creating-item-types/#4-add-front-facing-views","title":"4. Add front-facing views","text":"<p>Now that we're done with editing the item in the admin panel, let's look at how the user will see and interact with the item.</p> <p>If you look at the item in your inventory (click on it to show the modal), you will see that it now displays the tag under the name. Let's add a new feature above the \"Transfer Item\" and \"Delete Item\" options.</p> <p>Create a file named <code>_[tag_name].blade.php</code> (note the underscore in front) in <code>resources/views/inventory</code>. Add any additional options to the list in this file. Sample code:</p> <pre><code>&lt;li class=\"list-group-item\"&gt;\n    &lt;a class=\"card-title h5 collapse-title\"  data-toggle=\"collapse\" href=\"#customForm\"&gt; Action Name&lt;/a&gt;\n    {!! Form::open(['url' =&gt; 'inventory/act/'.$stack-&gt;id.'/'.$tag-&gt;tag, 'id' =&gt; 'customForm', 'class' =&gt; 'collapse']) !!}\n        &lt;!-- You can add more form fields in this space. --&gt;\n        &lt;div class=\"text-right\"&gt;\n            {!! Form::submit('Action Name', ['class' =&gt; 'btn btn-primary']) !!}\n        &lt;/div&gt;\n    {!! Form::close() !!}\n&lt;/li&gt;\n</code></pre> <p>Some notes:</p> <ul> <li>IDs must be unique, so to avoid any overlap, change customForm (in both places) to a unique name.</li> <li>The above form only adds one new option on the modal, but you can add multiple by adding more in succession. The form URL must be the same, but you can distinguish the intended action by, for example, giving the submit button in each form a different name attribute.</li> <li>The action will only be displayed if the user is logged in and either owns the item, or is a staff member with the edit_inventories power.</li> </ul> <p>Following along with the 'box' item type...</p> <p>As no other information is required in the form, we'll simply put in a note to the user that this action is irreversible. This functions as a confirmation screen for using the item.</p> <pre><code>&lt;li class=\"list-group-item\"&gt;\n    &lt;a class=\"card-title h5 collapse-title\"  data-toggle=\"collapse\" href=\"#openBoxForm\"&gt; Open Box&lt;/a&gt;\n    {!! Form::open(['url' =&gt; 'inventory/act/'.$stack-&gt;id.'/'.$tag-&gt;tag, 'id' =&gt; 'openBoxForm', 'class' =&gt; 'collapse']) !!}\n        &lt;p&gt;This action is not reversible. Are you sure you want to open this box?&lt;/p&gt;\n        &lt;div class=\"text-right\"&gt;\n            {!! Form::submit('Open', ['class' =&gt; 'btn btn-primary']) !!}\n        &lt;/div&gt;\n    {!! Form::close() !!}\n&lt;/li&gt;\n</code></pre>"},{"location":"guides/creating-item-types/#5-add-action-processing","title":"5. Add action processing","text":"<p>We now need to write the back-end code for handling what happens when you use the item.</p> <p>Back in <code>[ItemName]Service.php</code> from step 3, one of the functions we created was <code>act($stack, $user, $data)</code>. Inside that function, if you have only one possible action, you can directly write the handling code. If you have multiple possible actions, you can write a switch/case statement that checks $data and calls a different function depending on the intended usage.</p> <p>Note that <code>$stack</code> refers to the user-held item stack, while <code>$stack-&gt;item</code> refers to the actual item data itself.</p> <p>Following along with the 'box' item type...</p> <p>We don't want any other user except for the owner to open a box, so the first thing we do is check that the box belongs to the owner. Following that, we remove the box and distribute the associated rewards (with logging).</p> <pre><code>public function act($stack, $user, $data)\n{\n    DB::beginTransaction();\n\n    try {\n        // We don't want to let anyone who isn't the owner of the box open it,\n        // so do some validation... \n        if($stack-&gt;user_id != $user-&gt;id) throw new \\Exception(\"This item does not belong to you.\");\n\n        // Next, try to delete the box item. If successful, we can start distributing rewards.\n        if((new InventoryManager)-&gt;debitStack($stack-&gt;user, 'Box Opened', ['data' =&gt; ''], $stack)) {\n\n            // Distribute user rewards\n            if(!$rewards = fillUserAssets(parseAssetData($stack-&gt;item-&gt;tag('box')-&gt;data), $user, $user, 'Box Rewards', [\n                'data' =&gt; 'Received rewards from opening &lt;a href=\"#\" class=\"inventory-log-stack\" data-id=\"'.$stack-&gt;id.'\" data-name=\"'.$stack-&gt;item-&gt;name.'\"&gt;'.$stack-&gt;item-&gt;name.'&lt;/a&gt;'\n            ])) throw new \\Exception(\"Failed to open box.\");  \n        }\n\n        return $this-&gt;commitReturn(true);\n    } catch(\\Exception $e) { \n        $this-&gt;setError('error', $e-&gt;getMessage());\n    }\n    return $this-&gt;rollbackReturn(false);\n}\n</code></pre>"},{"location":"guides/creating-item-types/#summary","title":"Summary","text":"<p>The whole process consists of 5 steps:</p> <ol> <li>Adding the tag to <code>config/lorekeeper/item_tags.php</code></li> <li>Creating the service class in <code>app/Services/Item</code> containing 4 functions, <code>getEditData()</code>, <code>getTagData($tag)</code>, <code>updateData($tag, $data)</code> and <code>act($stack, $user, $data)</code></li> <li>Adding item tag setting form fields in <code>resources/views/admin/items/tags</code> and possibly <code>resources/views/js/admin_items</code> for the admin panel, and handling in service class if not already done</li> <li>Adding action(s) to the inventory menu in <code>resources/views/inventory</code></li> <li>Adding the effects of inventory actions in the service class</li> </ol>"},{"location":"guides/setup/","title":"Tutorial: Setting Up","text":""},{"location":"guides/setup/#visual-guides","title":"Visual Guides","text":"<p>Some Lorekeeper users have written extensive guides on setting up:</p> <ul> <li>Juni's Dreamhost visual setup guide</li> <li>wych(witch)'s DigitalOcean visual setup guide</li> </ul> <p>Recommended to use either of these guides as they're highly detailed and contain more screenshots!</p> <p>What is the difference?</p> <p>These guides pertain to setting up on different webhosts. The outcome is the same, but cost of webhosting and involvement in setting up varies - please read through the guides and choose the type of webhosting that fits your needs/budget/time!</p> <p>The information below is the same as detailed in Juni's guide, but more general/doesn't contain info about setting up on a shared server/configuring passwordless login.</p>"},{"location":"guides/setup/#requirements","title":"Requirements","text":"<p>Requirements for a web host (assuming it's running on some variant of Unix):</p> <ul> <li>PHP 7.2</li> <li>MySQL</li> <li>SSH access</li> </ul> <p>If you're not familiar with any of these and don't want to spend too much time shopping around hosts, I personally recommend going with DreamHost's VPS (the cheapest plan will do) as they have everything necessary (the demo site is hosted by them) and their own written instructions for some of the steps in the setup, which I have linked below.</p> <p>Additional software requirements:</p> <ul> <li>PuTTY (if using Windows) / a program that can be used to SSH into your server</li> <li>A Git client (e.g. Sourcetree)</li> <li>A text editor (Notepad works, but I recommend something more featured e.g. Visual Studio Code, Notepad++)</li> <li>A command line program (for your computer - on windows, this is Command Prompt)</li> </ul>"},{"location":"guides/setup/#preface","title":"Preface","text":"<p>Setting up your own copy of Lorekeeper consists of 3 main steps:</p> <ol> <li>Uploading a copy to your web host</li> <li>Setting up the database/admin account configuration</li> <li>Site configuration/adding your ARPG data/modifying the source code</li> </ol> <p>If you have a personal favourite method of setting up your workflow, I would strongly recommend going with what you're comfortable with! Jump ahead to step 2 as there are a few commands you have to run from the command line.</p> <p>Otherwise, for this tutorial, I'll assume that you have never touched Git and worked on the command line before, and will run through the steps I go through to get this up and working, with my usual workflow. Refer to the basic version of the tutorial to get it uploaded with less fuss, but less convenience working with the source code.</p>"},{"location":"guides/setup/#uploading","title":"Uploading","text":"<p>We're going to set this up so that we can use Git to manage changes to the site. The setup is based on this article (with a few modifications + expanding on the comments).</p>"},{"location":"guides/setup/#obtaining-local-and-server-copies","title":"Obtaining Local and Server Copies","text":"<p>First, we want to make sure we have the software we need. For Windows PCs, download PuTTY from here and install/set it up (click here for instructions).</p> <p>Next, we need hosting and a domain name. I'll be using Dreamhost in the examples of this tutorial for hosting.</p> <p>Set up the domain name so it points to your server. How to do this depends on where your domain name is registered, so check the instructions they should have provided.</p> <p>Obtain a copy of Lorekeeper. The recommended way to do this is to git clone it on your computer - there are various ways of doing this, but the simplest way is probably to clone it from your Git client. This will also initialise it as a Git repository on your computer. Now, you have a copy of Lorekeeper on your computer that you can use for working. I'll call this your local copy, and the one on your server the server copy (or live site).</p> <p>We're going to get the code onto the server. Using your SSH client (PuTTY on Windows/Terminal on Mac) SSH into your server - here are Dreamhost's very detailed instructions on how to do that. From here on, you can enter the commands almost exactly as they are.</p> <p>Navigate to the directory we're putting the files in.</p> <pre><code>cd\n</code></pre> <p>Make a directory for your site - name it whatever you want. In this example I'll use \"site-name.com\", so replace that with your site name.</p> <pre><code>mkdir site-name.com\ncd site-name.com\n</code></pre> <p>Make a directory called <code>www</code>, go in and <code>git init</code> it.</p> <pre><code>mkdir www\ncd www\ngit init\n</code></pre> <p>Go back out and make a second directory named <code>site_hub.git</code> and init it as a bare repository.</p> <pre><code>cd ..\nmkdir site_hub.git\ncd site_hub.git\ngit --bare init\n</code></pre> Creating and initialising the directories on the server. <p>Go to your Git client (e.g. Sourcetree as suggested above), select your folder containing Lorekeeper's code and add <code>site_hub.git</code> as a remote. The address is similar to your SSH address but points directly to the folder, something like <code>ssh://username@host.com/~/site-name.com/site_hub.git</code>.</p> <p>If successful, push the code to the remote. In Sourcetree, right click on the remote, choose to push, select the master branch and click OK.</p> Adding the remote in Sourcetree. <p>Back in the SSH client, we'll add <code>site_hub.git</code> as a remote for <code>www</code>.</p> <pre><code>cd ../www\ngit remote add hub ../site_hub.git\n</code></pre> <p>At this point if you enter <code>git remote show hub</code>, you should see something like:</p> <pre><code>* remote hub\n  URL: /home/your_username/site-name.com/site_hub.git\n</code></pre> Adding the remote on the server. <p>Run a git pull.</p> <pre><code>git pull hub master\n</code></pre> <p>Wait for it to finish running, and if it looks like nothing went wrong, enter <code>ls</code> and see that there are files inside the directory.</p> Running git pull."},{"location":"guides/setup/#git-hooks","title":"Git Hooks","text":"<p>If everything looks good, we'll set up git hooks so that updating the site is as easy as pushing a button.</p> <p>Continue by entering</p> <pre><code>cd .git/hooks\nnano post-commit\n</code></pre> <p>This will bring up a blank text editor. Enter the following text:</p> <pre><code>#!/bin/sh\n\necho\necho \"**** Pushing changes to Hub [Prime's post-commit hook]\"\necho\n\ngit push hub\n</code></pre> <p>To save the file, enter in order: Ctrl + X, y, enter.</p> <p>Then, we'll change the permissions on the file:</p> <pre><code>chmod +x post-commit\n</code></pre> <p>We'll also add a hook in <code>site_hub.git</code>.</p> <pre><code>cd ../../../site_hub.git/hooks\nnano post-update\n</code></pre> <p>The contents of this file (note the directory name you have to edit below!!):</p> <pre><code>#!/bin/sh\n\necho\necho \"**** Pulling changes into Prime [Hub's post-update hook]\"\necho\n\ncd $HOME/site-name.com/www || exit\nunset GIT_DIR\ngit pull hub master\n\nexec git-update-server-info\n</code></pre> <p>Once again: Ctrl + X, y, enter.</p> <p>And again, we'll change the permissions on the file:</p> <pre><code>chmod +x post-update\n</code></pre> <p>You can now test the hooks by modifying something harmless on your local copy (such as a comment) and commit/pushing the change to the server.</p> Creating a hook. <p>If set up correctly, the output log should display the message you wrote in post-update and show that the file was updated without errors.</p> <p>For a small but important tweak, we'll change the origin of our repository to point to the new site. This is demonstrated in Sourcetree, but should not be too much different in other clients.</p> <ol> <li>Checkout the site's master branch.</li> <li>Rename the old origin branch.</li> <li>Change the site's master branch to origin.</li> </ol> <p>In the future, you (and other users who have access to the repository) can simply push new changes to the code through your Git client at the click of a button, which also keeps track of files that you've added and/or modified, and contains a log of who made what changes to the code. Hooray!</p>"},{"location":"guides/setup/#setting-up","title":"Setting up","text":""},{"location":"guides/setup/#web-directory","title":"Web Directory","text":"<p>Update your domain to point to the www/public folder.</p> <p>For DreamHost users, this is under Manage Domains &gt; Edit &gt; Web directory. The page may take a few hours to update, and display an error if you have not completely finished the setup yet (this is normal).</p> Sample web directory."},{"location":"guides/setup/#install-composer","title":"Install Composer","text":"<p>Packages for the project are installed through Composer. You'll want to have it installed both on the server and on your computer.</p> <ul> <li>Instructions for installing Composer on your server are here.</li> <li>Instructions for installing Composer on your computer are here.</li> </ul> <p>I recommend following the global instructions. If you follow the local setup, place <code>composer.phar</code> in the <code>www</code> directory.</p> <p>Additionally, if you're using DreamHost, you will want to change the default PHP version for convenience. See here for instructions.</p> <p>Note: At the time of coding, I was using PHP 7.2; when changing the PHP version make sure to use either 7.2 or 7.3. (i.e. replace all instances of php74 with php72 or php73)</p>"},{"location":"guides/setup/#packages-and-database-setup","title":"Packages and Database Setup","text":"<p>In your SSH client, navigate to the www folder and run composer install. (Do this also on your own computer, but navigate to the appropriate directory instead)</p> <pre><code>cd ~/site-name.com/www\ncomposer install\n</code></pre> <p>Let it finish running. After that, we'll set up the database.</p> <p>If you're not on DreamHost or are setting up your local copy: This is easiest through phpMyAdmin, so navigate to your site's phpMyAdmin in your browser.</p> <p>Click on \"Databases\" in the top bar, and add a database - it can be called anything you like.</p> <p>If you're on DreamHost, go to the control panel to set up a database (see image on right). Be sure to choose names and a password that cannot be easily guessed and note them down! You will need the database name, database user (the New Username field) and database user password (the New Password field) later. The hostname can be used to access PHPMyAdmin - note this down as well.</p> Creating a DreamHost database in the control panel."},{"location":"guides/setup/#api-keys","title":"API Keys","text":"<p>Now, we need to get access to services that will allow us to send e-mails (for registration/resetting passwords) and connect to deviantART (for verifying accounts).</p> <p>For a small site with little traffic, I'd suggest SendGrid (100 mails a day on their free plan), though you can use any service that you like.</p> <p>If you're using Sendgrid, after you've created your account, go to API Keys under Settings in the Control Panel and create a new key. Note down the generated SendGrid API key as we'll need it later. Keep this a secret!</p> <p>On deviantART, while logged in, go to the developer area.</p> <p>Click on Register Your Application.</p> <p>Give your application a name as you would a deviation, and under both <code>OAuth2 Redirect URI Whitelist</code> (Required) and <code>Original URLs Whitelist</code>, put your site's URL (e.g. <code>http://site-name.com</code>). Click save.</p> <p>This will add an application under Un-Published Applications on the developer page - you don't need to publish the application to use it.</p> <p>Note down the deviantART <code>client_id</code> and deviantART <code>client_secret</code>. We'll use these later, and again, keep the secret a secret!</p> <p>I recommend creating a second application for use with your local copy rather than using the same application. In this application, instead of your site URL, add localhost (e.g. I use <code>http://127.0.0.1</code>).</p>"},{"location":"guides/setup/#env","title":".env","text":"<p>Now, let's use that information.</p> <p>The site requires a file named <code>.env</code> to be placed in the root directory of your site (in the <code>www</code> directory). We'll do this in both the local copy and the server copy, but with a few differences.</p> <p>Create a file both locally and on the server that contains the following, filling out the fields as noted (avoid using spaces in names):</p> <pre><code>APP_NAME=site_name_with_no_spaces\nAPP_ENV=\nAPP_KEY=\nAPP_DEBUG=\nAPP_URL=\n\nCONTACT_ADDRESS=your_contact_address@site-name.com\nDEVIANTART_ACCOUNT=your-dA-group-account-username\n\nLOG_CHANNEL=stack\n\nDB_CONNECTION=mysql\nDB_HOST=\nDB_PORT=\nDB_DATABASE=\nDB_USERNAME=\nDB_PASSWORD=\n\nBROADCAST_DRIVER=log\nCACHE_DRIVER=file\nQUEUE_CONNECTION=sync\nSESSION_DRIVER=file\nSESSION_LIFETIME=120\n\nREDIS_HOST=127.0.0.1\nREDIS_PASSWORD=null\nREDIS_PORT=6379\n\nMAIL_DRIVER=smtp\nMAIL_HOST=smtp.sendgrid.net\nMAIL_PORT=587\nMAIL_USERNAME=apikey\nMAIL_PASSWORD=your_sendgrid_api_key\nMAIL_FROM_ADDRESS=noreply@site-name.com\nMAIL_FROM_NAME=mail_sender_name\n\nAWS_ACCESS_KEY_ID=\nAWS_SECRET_ACCESS_KEY=\nAWS_DEFAULT_REGION=us-east-1\nAWS_BUCKET=\n\nPUSHER_APP_ID=\nPUSHER_APP_KEY=\nPUSHER_APP_SECRET=\nPUSHER_APP_CLUSTER=mt1\n\nMIX_PUSHER_APP_KEY=\"${PUSHER_APP_KEY}\"\nMIX_PUSHER_APP_CLUSTER=\"${PUSHER_APP_CLUSTER}\"\n\nDEVIANTART_CLIENT_ID=your_deviantart_client_id\nDEVIANTART_CLIENT_SECRET=your_deviantart_secret\nDEVIANTART_CALLBACK_URL=/\n</code></pre> <p>Leave the APP_KEY blank, as it will be generated in a later step.</p> <p>On the local version, find and fill out the following lines as such (if you created an extra app for testing on deviantART, change the dA client ID and secret to that):</p> <pre><code>APP_ENV=local\nAPP_DEBUG=true\nAPP_URL=http://localhost\n\nDB_HOST=127.0.0.1\nDB_PORT=3306\nDB_DATABASE=your_local_database_name\nDB_USERNAME=root\nDB_PASSWORD=\n</code></pre> <p>(Note that in the image to the right, Mailtrap.io is being used for local emails and the CONTACT_ADDRESS and DEVIANTART_ACCOUNT options are missing, but should be required.)</p> <p>On the server version, find and fill out the following lines as such:</p> <pre><code>APP_ENV=production\nAPP_DEBUG=false\nAPP_URL=http://site-name.com\n\nDB_HOST=your_database_hostname\nDB_PORT=3306\nDB_DATABASE=your_server_database_name\nDB_USERNAME=your_server_database_user_name\nDB_PASSWORD=your_server_database_user_password\n</code></pre> Comparison of local (left) and server (right) .env."},{"location":"guides/setup/#command-line-setup","title":"Command Line Setup","text":"<p>Moving on to command line setup - now that we have the files in place, we're going to create the database tables, insert some basic required data, and get the crons (scheduled scripts; primarily for scheduled news posts) working.</p> <p>On both local and on the server, run the following, letting each complete before the next one:</p> <pre><code>php artisan key:generate \nphp artisan migrate\n</code></pre> <p>This will generate the app key (used for encryption) and create the database tables.</p> <p>Run the following commands afterwards:</p> <pre><code>php artisan add-site-settings\nphp artisan add-text-pages\nphp artisan copy-default-images\n</code></pre> <p>Then, we'll set up the admin user:</p> <pre><code>php artisan setup-admin-user\n</code></pre> <p>This will prompt you for the creation of the admin account, which will have access to all site data. On the live site, I would recommend using this as a purely administrative account and not the site owner's personal account. You can run this command again to change the email address and password of the account.</p> <p>At this point, you should be able to log into the site with the admin account.</p>"},{"location":"guides/setup/#cron-jobs","title":"Cron Jobs","text":"<p>Finally, we'll set up the crons so we can make use of scheduling.</p> <p>For non-DreamHost users: Refer to this article for how to edit the crontab file.</p> <p>Add the following line, editing the directory name as necessary:</p> <pre><code>* * * * * cd ~/site-name.com/www &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1\n</code></pre> <p>If you are using DreamHost:</p> <p>Go to the control panel, click on More &gt; Cron Jobs &gt; Add New Cron Job. Select the shell user, enter a title (not important; you can set this to your site name for easy identification), and under command to run, add:</p> <pre><code>cd ~/site-name.com/www &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1\n</code></pre> <p>Then choose the following options:</p> <ul> <li>When to run: Custom</li> <li>Minutes: Selected Minutes<ul> <li>In the combo box, choose every multiple of 5. DreamHost restricts cron jobs to run every 5 minutes at the very least, so unfortunately you can't get to-the-minute accuracy.</li> </ul> </li> </ul> <p>If you can view the site from the URL - congratulations, you've set up the site successfully!</p>"},{"location":"guides/setup/#site-configuration","title":"Site Configuration","text":"<p>Before we start adding data, let's edit the config files in the code, making use of Git to send your updates to the server.</p>"},{"location":"guides/setup/#config-files","title":"Config Files","text":"<p>In your local copy, open up <code>config/app.php</code> in your text editor of choice. The code is commented in detail, so you can read and modify the config as you need. Most settings do not need to be touched since you wrote them in .env, but you may want to edit the timezone to match the clock your community goes by.</p> <p>Open up <code>config/lorekeeper/settings.php</code>. Similar to the above, you can read the comments and modify the config as required.</p> <p>In your Git client, choose the modified files, commit and push them (important: to your server, not Github!) with a helpful message. If the hooks have been set up correctly, you should see the effects on the live site after it's done. If not, and there were no errors, you may need to run <code>php artisan config:clear</code> on the server.</p>"},{"location":"guides/setup/#site-data","title":"Site Data","text":"<p>Now we can start editing the site data. All changes on the live site will only stay on the live site, and all local changes will only remain local.</p> <p>Log in as the admin user and go to the admin panel (click the crown in the navigation bar). The first things you may want to edit are:</p> <ul> <li>Site Settings</li> <li>User Ranks (create moderator ranks)</li> <li>Pages (Terms of Service, Privacy Policy, About)</li> <li>Site Images</li> </ul> <p>You can, of course, dive right into editing the game data - I would recommend editing in the order:</p> <ul> <li>rarities</li> <li>categories (trait categories, item categories, prompt categories, character categories)</li> <li>species, traits, items, currencies</li> <li>loot tables</li> <li>prompts, shops</li> </ul> <p>Note that at least 1 character category is required to create any characters. More specific information about each type of data can be found on the respective documentation pages.</p>"},{"location":"guides/setup/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Composer install error: The filter extension is missing.<ul> <li>You are probably using PHP 7.4 on the command line, change it to 7.2 or 7.3.</li> </ul> </li> <li>PHP Fatal error: Uncaught Error: Call to undefined function JsonSchema\\Uri\\filter_var() in \u2026<ul> <li>Same as above, change to PHP 7.2 or 7.3.</li> </ul> </li> <li>500 Server Error trying to send emails<ul> <li>For people who registered accounts after April 6 2020, SendGrid requires the sender identity to be verified. See this article for details.</li> </ul> </li> </ul>"},{"location":"guides/update/","title":"Updating Lorekeeper","text":"<p>Info</p> <p>This is a general guide on how to update Lorekeeper. See the v2 Upgrade Guide for information on updating to Lorekeeper v2 specifically.</p> <p>Lorekeeper is continuously undergoing new development-- bugs being fixed, new features being worked on and added. When ready, these updates make their way to the GitHub repository by being merged into one of its branches, where they become available to you to update your own site with! However, for ease of development, greater consistency and stability in releases, and general organization, Lorekeeper is split into different branches. This may make it difficult to tell at first glance which branch you should update your site with; however, this can also help ensure you get the right updates.</p> <p>If you're not familiar with git, consider reading Tutorial: Introduction To Git first! This article assumes a basic knowledge of git. Also see Tutorial: Installing Extensions as the process of pulling, etc. updates themselves, managing any merge conflicts, and so on also applies here!</p> <p>If you yourself are interested in contributing to Lorekeeper, meanwhile, please read the Contribution Guide! It covers similar material but focuses on the development side of the material instead.</p>"},{"location":"guides/update/#branches-you","title":"Branches &amp; You","text":"<p>The core Lorekeeper repository, or repo, has several different branches corresponding to different kinds and stages of development. There are two that are always present:</p> <ul> <li><code>main</code>, which always has the latest stable release of Lorekeeper. You can always pull this!</li> <li><code>develop</code>, which always has the latest updates and new features, but this means it's the least stable. You can always pull this, but be aware that changes will be more frequent and bugs more likely!<ul> <li>As a general rule of thumb, it's recommended to only pull develop if you are confident in the ability of yourself or someone on your team to both resolve any bugs or issues that come up (as these may be specific to your site, depending on any existing modifications) and report (or, more ideally, contribute fixes for) any issues that are present in an clean, unmodified copy of the <code>develop</code> branch.</li> </ul> </li> </ul> <p>\"Stable\", here, means that no new features are being added. Any change in the code in <code>main</code>, for instance, comes from either a new release or hotfix (which are only for critical issues!). This also tends to mean fewer bugs, as ideally most are caught and fixed before a a new version is released, and the lack of change means new bugs don't occur. Conversely, <code>develop</code> is the exact opposite: it always has the latest features, updates, etc.! Of course, this means that it always has the latest bugs. Similarly, new releases-- or updates to <code>main</code>-- happen relatively infrequently, while <code>develop</code> may be updated and added to at any time!</p> <p>There are also three different types of branches. Branches of these types are temporary, and used primarily to keep code organized before it is merged into another branch. These types are:</p> <ul> <li>Release Branches<ul> <li>These follow the naming scheme <code>release/UPCOMING-VERSION-HERE</code>.</li> <li>These contain a stable version of an upcoming release-- again, this means no new features are being added!-- that is in testing so that bugs can be fixed before it becomes the current release.</li> <li>If a release branch exists, it's ok to pull! In fact, it's helpful to do so if you're willing to report bugs, as catching and reporting them helps get them fixed-- and that helps ensure the upcoming release behaves as intended!</li> </ul> </li> <li>Feature branches<ul> <li>These follow the naming scheme <code>feature/FEATURE-NAME-HERE</code>.</li> <li>These contain new features or bugfixes. These are made by contributors so as to keep proposed changes to Lorekeeper isolated so that they can be reviewed and, if/when they are approved, merged into another branch.</li> <li>Do not pull these! There is no guarantee that the code in them is ready for use and you are liable to break your site if you merge their contents into your site prematurely.</li> </ul> </li> <li>Hotfix branches<ul> <li>These follow the naming scheme <code>hotfix/HOTFIX-NAME-HERE</code>.</li> <li>These contain emergency bugfixes, e.g. fixes for critical issues or security vulnerabilities.</li> <li>Do not pull these! There is no guarantee that the code in them is ready for use and you are liable to break your site if you merge their contents into your site prematurely. They will be merged into main if/when they are approved.</li> </ul> </li> </ul>"},{"location":"guides/update/#which-branch-do-i-pull","title":"Which branch do I pull?","text":"<p>The answer to this question depends on whether you really need the latest features and/or how willing you're willing to handle potential bugs/bug reports, as well as how often you want to update your site. In summary:</p> <ul> <li><code>main</code><ul> <li>Most stable</li> <li>Updates least frequently</li> <li>Ideally, has the least bugs!</li> </ul> </li> <li>(If one exists) the current release branch<ul> <li>Stable</li> <li>Release branches occur infrequently, and update with bugfixes as they are contributed</li> <li>Has a variable but diminishing number of bugs, generally</li> </ul> </li> <li><code>develop</code><ul> <li>Least stable</li> <li>Updates most frequently</li> <li>Liable to have the most bugs!</li> </ul> </li> </ul> <p>Regardless of which you choose, remember that you only need to pull one of them to receive all relevant updates for that branch! That is, any updates from one branch that apply to another will always be merged into the latter branch by contributors-- so if there is, for instance, a hotfix that is merged into <code>main</code>, but you are currently pulling the latest release branch, you don't need to pull <code>main</code> as well; the hotfix will also be merged into the release branch!</p>"},{"location":"guides/update/#update-announcements","title":"Update Announcements","text":"<p>Each Monday-- assuming there are updates to report-- an announcement of changes made over the course of the week is posted to the Announcements channel of the Lorekeeper discord server.</p> <p>These announcements are broken down by branch (if multiple branches have been updated) and then broken down into three types of change:</p> <ul> <li>New features (Added)</li> <li>Miscellaneous changes (Changed)<ul> <li>These tend to be smaller tweaks that aren't new features in themselves nor bugfixes, but are nonetheless improvements!</li> </ul> </li> <li>Bugfixes (Fixed)<ul> <li>These are expressed via what bug was fixed (rather than what change was made to fix the bug), for clarity.</li> </ul> </li> </ul> <p>Additionally, any commands that must be run or other actions relating to updating are listed alongside the updates (for each branch, if there are multiple). If an announcement does not specify the branch updated, assume it's <code>develop</code>; it's this branch that sees the most/most frequent updates, as it can potentially be updated continuously.</p> <p>Of course, always make sure to read and follow all instructions provided! This helps ensure that you update your site successfully and without incident!</p>"},{"location":"guides/update/#see-also","title":"See Also","text":"<ul> <li>Contribution Guide</li> </ul>"},{"location":"guides/upgrade/","title":"Upgrade Guide","text":"<p>Version 2 of Lorekeeper brings several new features and improvements, including the integration of the previous <code>modified-main</code> branch and its extensions, the integration of Galleries, and the expansion of social media sites available for user authentication.</p>"},{"location":"guides/upgrade/#new-in-v2","title":"New in v2","text":"<p>Following are the major changes for this release. For a full list of changes, see the release here.</p>"},{"location":"guides/upgrade/#update-to-laravel-8","title":"Update to Laravel 8","text":"<p>This update includes updating Laravel, the framework underlying Lorekeeper, to Laravel 8 (from 5.8). While the impact of this is relatively limited, it has some minor impacts in what methods are used for some tasks. This largely impacts extensions, which may need to be updated to account for these changes.</p>"},{"location":"guides/upgrade/#extensions-and-features-from-modified-main","title":"Extensions and Features from <code>modified-main</code>","text":"<p>modified-main was a branch incorporating several community-developed extensions selected for their wide applicability and for falling into one of the following categories:</p> <ul> <li>An unavoidable change in behavior, but one that is arguably a net quality-of-life improvement. May also be highly useful as a base for other extensions to build upon.</li> <li>Opt-in/must be deliberately enabled for significant changes in the behavior of the site to occur. No more obtrusive than effectively optional functions in core Lorekeeper if not in use.</li> </ul> <p>It includes certain extensions on an opt-in basis via a config file; these extensions tend to be sufficiently contained for this to be a viable option.</p> <p>Also included are several minor but useful features:</p> <ul> <li>Grouped Notifications: To account for the potentially large variety and potentially volume of notifications, they are grouped by notification type and collapse when there are more than 5 notifications of a type.</li> <li>Toggleable Comments on Site Pages: Adds a toggle to site pages which enables/disables commenting on them. Disabled by default.</li> <li>Extension Service: A utility for use by extension developers. By default, facilitates adjusting notification type IDs in a site's DB to comply with the Community Notification Standard. See the this command (made for Character Items) for an example of how to use this functionality.</li> </ul> <p>This branch and its contents have been integrated into core as of this release, as they present strong improvements to the functionality of Lorekeeper.</p>"},{"location":"guides/upgrade/#included-extensions","title":"Included Extensions","text":"<p>Documentation (where it exists) for these extensions can be viewed via Extensions in modified-main.</p> <ul> <li>Draginraptor : Stacked Inventories</li> <li>itinerare : Submission Addons</li> <li>itinerare : Character Items</li> <li>Preimpression : Bootstrap Tables</li> <li>itinerare : Watermarking</li> <li>itinerare : Separate Prompts</li> <li>Preimpression &amp; Ne-wt : Comments</li> <li>Ne-wt : Reports</li> <li>Junijwi : Masterlist Sublists</li> <li>Junijwi : MYO Item Tag</li> </ul>"},{"location":"guides/upgrade/#opt-in-extensions","title":"Opt-in Extensions","text":"<ul> <li>Junijwi : Navbar News Notif - Has also been modified to apply to sales</li> <li>itinerare : Species Trait Index</li> <li>Junijwi : Character Status Badges</li> <li>Junijwi : Character TH Profile Link</li> <li>itinerare : Design Update Voting</li> <li>itinerare : Item Entry Expansion (Stacked Inventories version)</li> </ul>"},{"location":"guides/upgrade/#galleries","title":"Galleries","text":"<p>The Galleries extension has been integrated, providing Lorekeeper sites with the means to set up their own built-in galleries for user submissions of art and literature. See Galleries for more information.</p>"},{"location":"guides/upgrade/#authentication-update","title":"Authentication Update","text":"<p>This update is in two parts. The first changes how aliases are stored, handled, and used around the site, while the second expands the range of social media platforms usable.</p>"},{"location":"guides/upgrade/#changes-to-alias-storage-and-handling","title":"Changes to Alias Storage and Handling","text":"<ul> <li>Aliases-- users' usernames on social media platforms, used to authenticate them within Lorekeeper for purposes such as verifying character ownership, etc.-- are now stored in their own table within Lorekeeper's database rather than alongside the rest of the user's information. This allows Lorekeeper to support more than one alias per user.<ul> <li>Users now have a \"primary\" alias, which is always visible and is displayed on their profile, similar to the previous system.</li> <li>Users may also have multiple non-primary aliases. These may or may not be visible to other users, as set by the user.</li> </ul> </li> <li>A config file has been added which handles sites both for authentication and formatting purposes.</li> <li>Various systems using or searching by user aliases have been updated to use either on-site user or URL (previously was either on-site user and alias or alias only).</li> <li>Systems which previously checked if an entered alias (such as for character ownership) belongs to an on-site user have been updated to do so with entered URLs.<ul> <li>Features that make use of this require a URL from a site enabled for auth in the associated config file. deviantArt is enabled by default.</li> </ul> </li> <li>Various features which display URLs now format them as \"username@site\" in the vein of the previous deviantArt alias link formatting.</li> </ul>"},{"location":"guides/upgrade/#expansion-of-authentication-options","title":"Expansion of Authentication Options","text":"<p>Adds the ability to use additional social media platforms as authentication options (compared to the previous sole option of deviantArt).</p> <ul> <li>Sites may be enabled for authentication in the associated config file; they may also be enabled for use as a user's primary alias separately in the same file.</li> <li>Users may select the platform used for their initial link from the sites enabled both as an authentication and primary alias option.</li> <li>Users may manage their linked aliases. This includes:<ul> <li>Changing primary alias</li> <li>Hiding/unhiding non-primary aliases</li> <li>Removing non-primary aliases</li> </ul> </li> <li>Users may link multiple accounts on the same social media platform</li> <li>A page has been added to user profiles (accessible via the sidebar) listing the user's aliases</li> </ul>"},{"location":"guides/upgrade/#credits-page","title":"Credits Page","text":"<p>A credits page has been added. It provides a portion editable via the site pages admin panel for site-specific credits, lists extensions installed by way of integration into core (as above), and supplies a section for other extensions installed and tracked via an extension tracking system. This is supplied via a config file and command for updating the on-site tracker (<code>php artisan update-extension-tracker</code>).</p>"},{"location":"guides/upgrade/#upgrading-to-v2","title":"Upgrading to v2","text":"<p>As of v2.1, Lorekeeper now requires PHP 8.1 (previously 7.4). No other requirements are changed.</p>"},{"location":"guides/upgrade/#summary","title":"Summary","text":"<ul> <li>Update your site or server to use PHP 8.1</li> <li>Pull the updates, resolving any merge conflicts as appropriate</li> <li>Make any config file changes</li> <li>(Recommended) Put your site in maintenance mode via <code>php artisan down</code></li> <li>Push updates</li> <li>Run <code>composer update</code> or equivalent and then <code>php artisan update-lorekeeper-v2</code></li> <li>(Recommended) Verify that no errors have occurred and use <code>php artisan up</code> to remove your site from maintenance mode</li> <li>Perform any configuration desired within the site</li> </ul>"},{"location":"guides/upgrade/#full-guide","title":"Full Guide","text":"<p>Note that this guide assumes hosting on Dreamhost; guides for other hosts will be linked as created by community members. This guide also assumes a basic knowledge of git; see Tutorial: Introduction To Git if you need to review.</p>"},{"location":"guides/upgrade/#updating-your-site-to-php-81","title":"Updating your site to PHP 8.1","text":"<p>Note that this assumes your site is currently running PHP 7.4 as recommended for the previous version of Lorekeeper. If you are already running PHP 8.1, you can skip this step. To check, you may consult the Dreamhost control panel and enter <code>php -v</code> into PuTTY to check your PHP version.</p> <ol> <li>In the Dreamhost control panel, navigate to Domains &gt; Manage Domains via the sidebar</li> <li>Click \"Edit\" for your site (under \"Web Hosting\")</li> <li>Under \"Web Options\", select one of the PHP 8.1 options for \"PHP Mode\"</li> <li>Click \"Change settings\". Allow 5-10 minutes or so for changes to process</li> <li>To verify changes, enter <code>php -v</code> into PuTTY</li> </ol> <p>If after this php -v returns PHP 7.4 or others, follow these steps in PuTTY to update it (courtesy of this guide in the Lorekeeper Discord server):</p> <ol> <li>Enter <code>cd ~</code> to ensure you are in your user directory</li> <li>Enter <code>nano .bash_profile</code>. This will open this file in the editor</li> <li>Add <code>export PATH=/usr/local/php81/bin:$PATH</code> to the end of the file</li> <li>Save the file by pressing ctrl+x, y, and then enter</li> <li>Enter <code>. ~/.bash_profile</code> to update the file you just saved</li> <li>Enter <code>php -v</code> again to verify that the update has worked</li> </ol> <p>If this does not resolve the issue, contact support.</p>"},{"location":"guides/upgrade/#pulling-updates","title":"Pulling Updates","text":"<p>Pull updates from the Lorekeeper repo's <code>main</code> branch on GitHub. You may have renamed this remote to \"origin-old\" as part of the set up process.</p> <p>You may encounter merge conflicts as a result of this. Please see Tutorial: Installing Extensions - Merging Conflicts for information on how to resolve them. If you did not, or did and have resolved all extant conflicts, commit your changes (if you have not already).</p> <p>You may wish to make changes to config files now, though you can do so later as well if desired (more information on added configuration options and settings is included later in this guide). If you wish to make changes now, it's recommended you review the following files and change settings as desired:</p> <ul> <li><code>config/lorekeeper/settings</code><ul> <li>The pre-existing settings file. Additional options have been added in keeping with the addition of extensions from modified-main, etc.</li> </ul> </li> <li><code>config/lorekeeper/extensions</code><ul> <li>Added with the integration of modified-main. Allows toggling of opt-in extensions as outlined above, as well as handling some additional settings for them.</li> </ul> </li> <li><code>config/lorekeeper/sites</code><ul> <li>Controls which sites may be used for authentication as well as assisting with link formatting for other sites. Note that any site enabled for auth must also be configured on that platform. See Social Media Authentication for instructions for supported sites. You may wish to prepare any additional sites you wish to use as an auth option before continuing with the update.</li> </ul> </li> </ul> <p>If/when you are ready, commit any changes to config files.</p>"},{"location":"guides/upgrade/#pushing-updates","title":"Pushing Updates","text":"<ol> <li>Open PuTTY and navigate to your site's www directory (<code>cd ~/site-name.com/www</code>)</li> <li>Recommended: Before pushing any updates to your site, enter <code>php artisan down</code> in PuTTY to put your site in maintenance mode. This will prevent any users from making changes while updates are being run, which helps minimize the risk of issues occurring during the update process.</li> <li>Push the changes to your site</li> <li>Enter <code>composer update</code> (if you installed composer globally) or <code>php composer.phar update</code> (if you installed composer locally only)<ul> <li>If you have not already done so, it's highly recommended you update composer itself to 2.x using <code>composer self-update</code> as it is a much faster and less resource-intensive version! You may be prompted to update using <code>composer self-update --2</code> specifically; do so.</li> </ul> </li> <li>Enter <code>php artisan update-lorekeeper-v2</code>. This will run a variety of commands to update Lorekeeper and any existing data in your site for v2.<ul> <li>If you installed Character Items prior to September 10th, 2020, also enter <code>php artisan fix-char-item-notifs</code> at this time</li> </ul> </li> <li>If you put your site in maintenance mode earlier, enter <code>php artisan up</code> to put it back up</li> <li>Verify that no errors have occurred</li> </ol> <p>Your site will now be updated and available to configure as desired.</p>"},{"location":"guides/upgrade/#configuration","title":"Configuration","text":"<p>Configuration options and settings added as part of this update are listed here for convenience. For additional extension-specific configuration information, consult the extension's documentation.</p>"},{"location":"guides/upgrade/#config-files","title":"Config Files","text":"<p>All following settings are configured via config files. For more information, see Config Files.</p> <ul> <li><code>config/lorekeeper/settings.php</code><ul> <li><code>watermark_masterlist_images</code><ul> <li>Whether or not masterlist images are automatically watermarked.</li> <li>Default: 0</li> </ul> </li> <li><code>masterlist_image_dimension</code><ul> <li>Dimension (in px) to scale the shorter dimension (between width/height) of masterlist images to. Set to 0 to disable resizing.</li> <li>Default: 0</li> </ul> </li> <li><code>masterlist_image_format</code><ul> <li>Format to convert masterlist images to. Set to null to disable conversion.</li> <li>Default: null</li> </ul> </li> <li><code>masterlist_image_background</code><ul> <li>Color (hex code) to fill the background of non-png image types when converting images to file formats that do not support transparency. Set to null to disable. Only takes effect when converting to a file format that isn't png.</li> <li>Default: #ffffff</li> </ul> </li> <li><code>store_masterlist_fullsizes</code><ul> <li>Whether to store the full size of masterlist images (relevant if resizing and/or watermarking are enabled). Set to 0 to disable. Not retroactive either way.</li> <li>Default: 0</li> </ul> </li> <li><code>masterlist_fullsizes_cap</code><ul> <li>Size (in px) to cap full-sized masterlist images at. Images above this cap in either dimension will be resized, retaining aspect ratio. Set to 0 to disable.</li> <li>Default: 0</li> </ul> </li> <li><code>watermark_masterlist_thumbnails</code><ul> <li>Whether or not to watermark masterlist thumbnails. Expects the whole of the character to be visible, so it is recommended to use the thumbnail behavior/disable this if that isn't standard for your site. Set to 0 to disable.</li> <li>Default: 0</li> </ul> </li> <li><code>masterlist_image_automation</code><ul> <li>When enabled, replaces the thumbnail cropper and automatically makes all masterlist images square, adding transparent space to the shorter dimension of the image to do so. Thumbnails are consequently resized versions of the full masterlist image.</li> <li>Default: 0</li> </ul> </li> <li><code>default_purchase_limit</code><ul> <li>An arbitrary upper limit on the number of an item a user can purchase in a single shop transaction.</li> <li>Default: 99</li> </ul> </li> <li><code>currency_symbol</code><ul> <li>Symbol for the (real world) currency used for sales posts.</li> <li>Default: $</li> </ul> </li> </ul> </li> <li><code>config/lorekeeper/extensions.php</code><ul> <li><code>navbar_news_notif</code><ul> <li>Enables Navbar News Notif.</li> <li>Default: 0</li> </ul> </li> <li><code>species_trait_index</code><ul> <li>Enables Species Trait Index.</li> <li>Default: 0</li> </ul> </li> <li><code>character_status_badges</code><ul> <li>Enables Character Status Badges.</li> <li>Default: 0</li> </ul> </li> <li><code>character_TH_profile_link</code><ul> <li>Enables Character TH Profile Link</li> <li>Default: 0</li> </ul> </li> <li><code>item_entry_expansion</code><ul> <li>Enables various features of Item Entry Expansion</li> <li><code>extra_fields</code><ul> <li>Enables extra fields.</li> <li>Default: 0</li> </ul> </li> <li><code>resale_function</code><ul> <li>Enables the resale function.</li> <li>Default: 0</li> </ul> </li> <li><code>loot_tables</code><ul> <li><code>enable</code><ul> <li>Adds the ability to use either rarity criteria for items or item categories with rarity criteria in loot tables. Note that disabling this does not apply retroactively.</li> <li>Default: 0</li> </ul> </li> <li><code>alternate_filtering</code><ul> <li>By default this feature uses more broadly compatible methods to filter by rarity. If you are on Dreamhost/know your DB software can handle searching in JSON, it's recommended to set this to 1 instead.</li> <li>Default: 0</li> </ul> </li> </ul> </li> </ul> </li> <li><code>traits_by_category</code><ul> <li>Enables grouping traits as listed on character pages by category.</li> <li>Default: 0</li> </ul> </li> <li><code>character_reward_expansion</code><ul> <li><code>expanded</code><ul> <li>Enables expanded character rewards, allowing items and loot tables to be awarded to characters.</li> <li>Default: 1</li> </ul> </li> <li><code>default_recipient</code><ul> <li>Recipient for items that cannot be held by characters. 0 to default to the character's owner (if a user), 1 to default to the submission user.</li> <li>Default: 0</li> </ul> </li> </ul> </li> </ul> </li> <li><code>config/lorekeeper/sites.php</code><ul> <li>All sites have the following settings:<ul> <li><code>full_name</code><ul> <li>The full name of the site.</li> </ul> </li> <li><code>display_name</code><ul> <li>The shortened display name used, for instance, for link formatting.</li> </ul> </li> <li><code>regex</code><ul> <li>Regex pattern used to match URLs for the site.</li> </ul> </li> <li><code>link</code><ul> <li>The site's URL.</li> </ul> </li> </ul> </li> <li>Sites which may be used for auth also have these settings:<ul> <li><code>icon</code><ul> <li>The Font Awesome icon used to represent the site within the Lorekeeper UI.</li> </ul> </li> <li><code>auth</code><ul> <li>Whether or not the site may be used for auth. At least one site must be enabled.</li> <li>Default: 1 for deviantArt, 0 for others</li> </ul> </li> <li><code>primary_alias</code><ul> <li>Whether or not aliases from this site may be used as a user's primary alias. At least one site must be enabled.</li> <li>Default: 1 for deviantArt, 0 for others</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"guides/upgrade/#site-settings","title":"Site Settings","text":"<p>All following settings are configured in the Site Settings admin panel. For more information, see Site Settings.</p> <ul> <li><code>admin_user</code><ul> <li>By default, this is used to direct notifications for comments on site pages to an account. Extensions may also use this setting. It's recommended that this correspond to the ID of an account that is not used by any one person and is solely for administrative purposes.</li> <li>Default: 1</li> </ul> </li> <li>(Design Update Voting) <code>design_votes_needed</code><ul> <li>The number of votes needed for consensus on a design update.</li> <li>Default: 3</li> </ul> </li> <li>(Galleries) <code>gallery_submissions_open</code><ul> <li>Whether or not gallery submissions are open globally.</li> <li>Default: 1</li> </ul> </li> <li>(Galleries) <code>gallery_submissions_require_approval</code><ul> <li>Whether or not gallery submissions require approval.</li> <li>Default: 1</li> </ul> </li> <li>(Galleries) <code>gallery_submissions_reward_currency</code><ul> <li>Whether or not gallery submissions reward currency.</li> <li>Default: 0</li> </ul> </li> <li>(Galleries) <code>group_currency</code><ul> <li>ID of the group currency used for gallery submission rewards, if enabled.</li> <li>Default: 1</li> </ul> </li> <li>(Reports) <code>is_reports_open</code><ul> <li>Whether or not reports are open.</li> <li>Default: 1</li> </ul> </li> </ul>"},{"location":"guides/upgrade/#site-pages","title":"Site Pages","text":"<p>The content of the following pages is configured via the Pages admin panel. For more information, see Site Pages.</p> <ul> <li>Credits<ul> <li>Part of/integrated into the larger credits page, which also displays extensions installed on the site. It is supplied via a site page for convenient editing, but does not need to/should not be displayed independently.</li> </ul> </li> </ul>"},{"location":"guides/socmed/","title":"Social Media Authentication Index","text":"<p>Listed here are guides on setting up social media apps to connect to Lorekeeper. This allows users to connect their account(s) on select platforms to their account on your Lorekeeper site for the sake of authentication and/or display.</p> <p>Note that these instructions only include specific instructions for each platform as necessary, and do not include universal steps such as configuration.</p>"},{"location":"guides/socmed/#available-authentication-platforms","title":"Available Authentication Platforms","text":"<ul> <li>deviantArt</li> <li>Imgur</li> <li>Instagram</li> <li>Toyhou.se</li> <li>Tumblr</li> <li>Twitch</li> <li>Twitter</li> </ul>"},{"location":"guides/socmed/deviantart/","title":"Authentication with deviantArt","text":"<p>Previously the only option for authentication, deviantArt remains available as an authentication option.</p>"},{"location":"guides/socmed/deviantart/#registering-your-application","title":"Registering your Application","text":"<p>The deviantArt application portal can be accessed at https://www.deviantart.com/developers/apps.</p> <ol> <li>Click on \"Register your Application\"</li> <li>Give your application a simple but descriptive title, such as \"Sitename\" or \"Sitename Lorekeeper\".<ul> <li>This will be shown to users when they authenticate and in the user's authenticated apps (visible at https://www.deviantart.com/settings/apps), so it's good policy to label it clearly.</li> </ul> </li> <li>Under \"Application Settings\", set:<ul> <li>OAuth2 Redirect URI Whitelist (Required): <code>https://your-site.com/auth/callback/deviantart</code></li> <li>Original URLs Whitelist: <code>https://your-site.com/auth/redirect/deviantart</code></li> <li>If you encounter issues, you may need to add variations with <code>http</code> and <code>https</code>, with and without <code>www</code>, and with and without a trailing slash (/).</li> <li>If you have an existing dA application using <code>https://your-site.com</code> URLs, this should continue to work as before.</li> </ul> </li> <li>Click \"Save\". You do not need to publish your application.</li> </ol>"},{"location":"guides/socmed/deviantart/#connecting-to-lorekeeper","title":"Connecting to Lorekeeper","text":"<p>Return to the deviantArt application portal.</p> <p>Scroll to the application you just created. The <code>client_id</code> (visible by default) and <code>client_secret</code> (hidden, can be shown by pressing the button on the right hand side of the field) should be present. You will need these to connect Lorekeeper to your application.</p> <p>In your .env file, add the lines:</p> <pre><code>DEVIANTART_CLIENT_ID=your_client_id_here\nDEVIANTART_CLIENT_SECRET=your_client_secret_here\n</code></pre> <p>Replacing the <code>client_id</code> and <code>client_secret</code> with the ones from your application.</p>"},{"location":"guides/socmed/imgur/","title":"Authentication with Imgur","text":""},{"location":"guides/socmed/imgur/#registering-your-application","title":"Registering your Application","text":"<p>Imgur application creation can be accessed at https://api.imgur.com/oauth2/addclient.</p> <ul> <li>Application Name: Provide a simple but descriptive title, such as \"Sitename\" or \"Sitename Lorekeeper\".</li> <li>Application Type: Select \"OAuth 2 authorization with a callback URL\".</li> <li>Application callback URL: <code>https://your-site.com/auth/callback/imgur</code></li> <li>Application Website: Enter your site's address, for instance <code>https://lorekeeper.me/</code></li> <li>Email: Enter your email address.</li> <li>Description: Enter a brief description of your app.<ul> <li>For example: \"Authenticates a Lorekeeper user with their Imgur account.\"</li> </ul> </li> </ul> <p>Your client secret will be shown after you create your application. Save this (temporarily!) or add it directly to your .env file as it will be hidden afterward; however, if need be you can generate a new secret.</p>"},{"location":"guides/socmed/imgur/#connecting-to-lorekeeper","title":"Connecting to Lorekeeper","text":"<p>The Imgur application portal can be accessed at https://imgur.com/account/settings/apps.</p> <p>You can access the client ID and (if necessary) generate a new client secret from this page.</p> <p>In your .env file, add the lines:</p> <pre><code>IMGUR_CLIENT_ID=your_client_id_here\nIMGUR_CLIENT_SECRET=your_client_secret_here\n</code></pre> <p>Replacing the <code>client_id</code> and <code>client_secret</code> with the ones from your application.</p>"},{"location":"guides/socmed/instagram/","title":"Authentication with Instagram","text":"<p>The instructions on this page are currently incomplete.</p> <p>Please see the content of the page for reasons why. If you believe you can help, please submit a pull request.</p> <p>Instagram is by nature connected to Facebook and as such requires a Facebook developer account.</p>"},{"location":"guides/socmed/instagram/#developer-sign-up","title":"Developer Sign-up","text":"<p>Facebook developer signup can be accessed at https://developers.facebook.com/async/registration/.</p> <p>After signing up you can create an app immediately.</p>"},{"location":"guides/socmed/instagram/#registering-your-application","title":"Registering your Application","text":"<p>The Facebook application portal can be accessed at https://developers.facebook.com/apps/.</p> <p>Please note that Facebook loads captchas in iframes. You may need to disable ad blocking for the captcha to appear.</p> <ol> <li>Click on \"Create App\".<ol> <li>Select \"Build Connected Experiences\".</li> <li>In your app display name, enter a simple but descriptive title, such as \"Sitename\" or \"Sitename Lorekeeper\".</li> <li>Fill remaining forms as appropriate.</li> <li>Once your app is created, you will be taken to your app dashboard.</li> </ol> </li> <li>In the sidebar, click on Settings, then Basic.</li> <li>Scroll to the bottom of this page and click \"+ Add Platform\".<ol> <li>Choose \"Website\".</li> <li>In the field, add your site URL.<ul> <li>For local testing, use <code>http://localhost/</code></li> </ul> </li> </ol> </li> <li>Click on Dashboard, and scroll down to \"Add Products to Your App\".</li> <li>Click on the \"Set Up\" button for \"Instagram Basic Display\".</li> <li>Click on \"Create New App\" at the bottom of the page.<ul> <li>For the Display Name, use the simple but descriptive title you used for your Facebook app.</li> <li>Fill in the redirect URI: <code>https://your-site.com/auth/callback/instagram</code></li> </ul> </li> </ol> <p>You will now be able to retrieve your client ID and client secret. You will need to enter your password to view the client secret.</p>"},{"location":"guides/socmed/instagram/#app-review","title":"App Review","text":"<p>This section is incomplete pending testing and more thorough documentation.</p> <p>In order for all users to be able to authenticate, you must submit your application for review; otherwise, only \"test users\" will be able to authenticate with your app. Submitting your application for review requires providing additional information about your app. It also requires the ability to delete data/deauthorize user accounts on request which are not as of yet built-in features of Lorekeeper. It may as of yet be possible as the only data stored within Lorekeeper is the user's username, however, which unlinking the social media account removes. In conclusion: this may be manageable, however, we have an inadequate understanding of the app review process and how to best negotiate it with regards to Lorekeeper due to the difficult nature of testing such a thing.</p> <p>You can read about adding test users here: https://developers.facebook.com/docs/instagram-basic-display-api/getting-started#step-3--add-an-instagram-test-user</p>"},{"location":"guides/socmed/instagram/#connecting-to-lorekeeper","title":"Connecting to Lorekeeper","text":"<p>In your .env file, add the lines:</p> <pre><code>INSTAGRAM_CLIENT_ID=your_client_id_here\nINSTAGRAM_CLIENT_SECRET=your_client_secret_here\n</code></pre> <p>Replacing the <code>client_id</code> and <code>client_secret</code> with the ones from your application.</p>"},{"location":"guides/socmed/toyhouse/","title":"Authentication with Toyhou.se","text":""},{"location":"guides/socmed/toyhouse/#registering-your-application","title":"Registering your Application","text":"<p>Toyhou.se application creation can be accessed at https://toyhou.se/~developer.</p> <ol> <li>Go to My Apps/https://toyhou.se/~developer/apps</li> <li>Click \"Create App\"</li> <li>Fill out the general information as appropriate to identify your app to your site's users.<ul> <li>It's recommended to provide a simple but descriptive name for your app, such as \"Sitename\" or \"Sitename Lorekeeper\".</li> </ul> </li> <li>Under \"Developer information\", supply the callback URL (<code>http://your-site.com/auth/callback/toyhouse</code>). You will need to list all variants of the URL as appropriate (<code>http</code> vs <code>https</code>, with and without <code>www</code>), separated by commas without any spaces, e.g.:<ul> <li><code>http://www.your-site.com/auth/callback/toyhouse,http://your-site.com/auth/callback/toyhouse,https://www.your-site.com/auth/callback/toyhouse,https://your-site.com/auth/callback/toyhouse</code></li> </ul> </li> <li>Click \"Create\". Your app will be created and your client ID and secret will be displayed.</li> </ol>"},{"location":"guides/socmed/toyhouse/#connecting-to-lorekeeper","title":"Connecting to Lorekeeper","text":"<p>Your client ID and secret can be accessed via your app's information, available via https://toyhou.se/~developer/apps; click on the name of your app to view these and/or edit it.</p> <p>In your .env file, add the lines:</p> <pre><code>TOYHOUSE_CLIENT_ID=your_client_id_here\nTOYHOUSE_CLIENT_SECRET=your_client_secret_here\n</code></pre> <p>Replacing the <code>client_id</code> and <code>client_secret</code> with the ones from your application.</p>"},{"location":"guides/socmed/tumblr/","title":"Authentication with Tumblr","text":""},{"location":"guides/socmed/tumblr/#registering-your-application","title":"Registering your Application","text":"<p>Tumblr application creation can be accessed at https://www.tumblr.com/oauth/register.</p> <ul> <li>Application Name: Provide a simple but descriptive title, such as \"Sitename\" or \"Sitename Lorekeeper\".</li> <li>Application Website: Enter your site's address, for instance <code>https://lorekeeper.me</code><ul> <li>For local testing, use <code>http://localhost/</code></li> </ul> </li> <li>Application Description: Enter a brief description of your app.<ul> <li>For example: \"Authenticates a Lorekeeper user with their Tumblr account.\"</li> </ul> </li> <li>Administrative contact email: Enter your email address.</li> <li>Default callback URL: <code>https://your-site.com/auth/callback/tumblr</code></li> </ul>"},{"location":"guides/socmed/tumblr/#connecting-to-lorekeeper","title":"Connecting to Lorekeeper","text":"<p>The Tumblr application portal can be accessed at https://www.tumblr.com/oauth/apps.</p> <p>You can access the client ID and client secret from this page.</p> <p>In your .env file, add the lines:</p> <pre><code>TUMBLR_CLIENT_ID=your_client_id_here\nTUMBLR_CLIENT_SECRET=your_client_secret_here\n</code></pre> <p>Replacing the <code>client_id</code> and <code>client_secret</code> with the ones from your application.</p>"},{"location":"guides/socmed/twitch/","title":"Authentication with Twitch","text":"<p>Note that you must have two-factor authentication enabled on your Twitch account to create an application.</p>"},{"location":"guides/socmed/twitch/#registering-your-application","title":"Registering your Application","text":"<p>Twitch application creation can be accessed at https://dev.twitch.tv/console/apps/create.</p> <ul> <li>Name: Provide a simple but descriptive title, such as \"Sitename\" or \"Sitename Lorekeeper\".</li> <li>OAuth Redirect URLs: <code>https://your-site.com/auth/callback/twitch</code><ul> <li>Note that redirect URLs must use <code>https</code> unless you are using localhost</li> <li>For local testing, use <code>http://localhost/auth/callback/twitch</code></li> </ul> </li> <li>Category: Select \"Website Integration\".</li> </ul>"},{"location":"guides/socmed/twitch/#connecting-to-lorekeeper","title":"Connecting to Lorekeeper","text":"<p>The Twitch application portal can be accessed at https://dev.twitch.tv/console/apps.</p> <ul> <li>Click on \"Manage\" for your application. Client ID and secret are shown at the bottom of this page.</li> <li>You will need to click \"New Secret\" to generate your client secret the first time. Note that clicking it after will break integration with Lorekeeper if you do not update your .env with the new secret.</li> </ul> <p>In your .env file, add the lines:</p> <pre><code>TWITCH_CLIENT_ID=your_client_id_here\nTWITCH_CLIENT_SECRET=your_client_secret_here\n</code></pre> <p>Replacing the <code>client_id</code> and <code>client_secret</code> with the ones from your application.</p>"},{"location":"guides/socmed/twitter/","title":"Authentication with Twitter","text":"<p>These instructions may be outdated or no longer functional.</p> <p>In order to create an application for authentication using Twitter, you must first apply for a developer account.</p>"},{"location":"guides/socmed/twitter/#apply-for-a-developer-account","title":"Apply for a Developer Account","text":"<p>The developer account application portal can be accessed at https://developer.twitter.com/en/portal/petition/use-case.</p> <ol> <li>Select \"Hobbyist\" and then \"Exploring the API\".</li> <li>You will be asked for basic information about yourself. Fill this out as appropriate.</li> <li>You will be asked to describe how you will use the Twitter API and/or data.<ul> <li>Following is a sample text explaining Lorekeeper's use case; you may want to paraphrase this.</li> <li>\"I want to allow my users to authenticate using Twitter through the Laravel Socialite system. My site uses social media to verify the identity of users and/or to display their identitie(s) on said social media to other users, and I would like to provide Twitter as an option for my users.\"</li> <li>Uncheck all the options below.</li> </ul> </li> <li>Review your answers and make any necessary adjustments.</li> <li>Review the developer agreement &amp; policy. Agree as you feel appropriate. If/when you are ready, submit your application.</li> <li>You may be asked to verify your email; do so and the application review will begin.</li> <li>Wait for review. You may be asked for further details; provide these as appropriate.</li> </ol>"},{"location":"guides/socmed/twitter/#registering-your-application","title":"Registering your Application","text":"<p>This section is incomplete pending more thorough documentation of the application registration process.</p> <p>The Twitter developer portal can be accessed at https://developer.twitter.com/en/portal/dashboard.</p> <ol> <li>(OPTIONAL) Click \"Create Project\".<ol> <li>Give your project a simple but descriptive title, such as \"Sitename\" or \"Sitename Lorekeeper\".</li> <li>Select a use case; \"Doing something else\", for instance.</li> <li>Describe your project.<ul> <li>An example description could be something like \"Allow users to authenticate with Lorekeeper site using Twitter through the Laravel Socialite system.\"</li> </ul> </li> <li>Add an existing app or click \"Create a new app instead\".</li> </ol> </li> <li>Create your application. If you have not made a project, you may instead click \"Projects &amp; Apps\" in the sidebar, then \"Overview\". Click \"Create App\" on this page.<ol> <li>Give your app a simple but descriptive title, such as \"Sitename\" or \"Sitename Lorekeeper\".</li> <li>You will be shown your API Key, API Secret Key, and Bearer Token. These will only be shown now, so save them for use in your .env file.<ul> <li>Your API key is your client ID, while your API secret key is your client secret.</li> </ul> </li> <li>Continue on to your app's dashboard.<ul> <li>You may regenerate your API Key and Secret via the \"Keys and tokens\" tab if necessary. Note that doing so will break integration with Lorekeeper if you do not update your .env with the new information.</li> </ul> </li> <li>(Optional) Customize your app's details, such as uploading an icon for it.</li> <li>Scroll down to \"Authentication settings\". Click \"Edit\" for this section.<ol> <li>Enable OAuth 1.0a via the provided toggle.</li> <li>Callback URLs: <code>https://your-site.com/auth/callback/twitter</code><ul> <li>If you encounter issues, you may need to add variations with http and https, with and without www, and with and without a trailing slash (/).</li> </ul> </li> <li>Website URL: <code>https://your-site.com</code></li> <li>Organization Name: Enter your site's name.</li> <li>Terms of Service: <code>https://your-site.com/info/terms</code></li> <li>Privacy Policy: <code>https://your-site.com/info/privacy</code></li> <li>Click \"Save\".</li> </ol> </li> </ol> </li> </ol>"},{"location":"guides/socmed/twitter/#connecting-to-lorekeeper","title":"Connecting to Lorekeeper","text":"<p>Using the Key and Secret Key from earlier, add the following lines to your .env file:</p> <pre><code>TWITTER_CLIENT_ID=your_key_here\nTWITTER_CLIENT_SECRET=your_secret_key_here\n</code></pre>"}]}